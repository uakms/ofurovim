@ifset JA  @c ----------- v -----------  JA  -*- tab-width: 8 -*-
@node textprop.txt, , , 目次
@unnumbered テキストに適用されているプロパティを表示する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
*textprop.txt*  For Vim version 8.1.  Last change: 2019 Nov 12


		  VIM REFERENCE MANUAL    by Bram Moolenaar
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
*textprop.txt*  For Vim バージョン 8.1.  Last change: 2019 Nov 12


                VIMリファレンスマニュアル    by Bram Moolenaar
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Displaying text with properties attached.	*textprop* *text-properties*


@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{textprop}
@anchor{text-properties}
@cindex textprop
@cindex text-properties
プロパティが付加されたテキストを表示します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
1. Introduction			|text-prop-intro|
2. Functions			|text-prop-functions|
3. When text changes		|text-prop-changes|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .5 .5
@item 1. 前書き @tab |@ref{text-prop-intro}|
@item 2. 関数 @tab |@ref{text-prop-functions}|
@item 3. テキストが変更された場合 @tab |@ref{text-prop-changes}|
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
{not able to use text properties when the |+textprop| feature was
disabled at compile time}
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{Vim が |@ref{+textprop}| 機能無効でコンパイルされたときはテキストプロパティを使用できません@}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
1. Introduction						*text-prop-intro*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{text-prop-intro}
@cindex text-prop-intro
@section 1. 前書き
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Text properties can be attached to text in a buffer.  They will move with the
text: If lines are deleted or inserted the properties move with the text they
are attached to.  Also when inserting/deleting text in the line before the
text property.  And when inserting/deleting text inside the text property, it
will increase/decrease in size.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティは、バッファ内のテキストに付加することができます。それらはテキストとともに移動します: 行が削除または挿入された場合、プロパティはそれらが付加されているテキストと共に移動します。テキストプロパティの前の行にテキストを挿入/削除する場合も同様です。また、テキストプロパティ内にテキストを挿入/削除すると、サイズが増減します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The main use for text properties is to highlight text.  This can be seen as a
replacement for syntax highlighting.  Instead of defining patterns to match
the text, the highlighting is set by a script, possibly using the output of an
external parser.  This only needs to be done once, not every time when
redrawing the screen, thus can be much faster, after the initial cost of
attaching the text properties.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティの主な用途は、テキストを強調表示することです。これは、構文ハイライトの置き換えと見ることができます。テキストと一致するようにパターンを定義する代わりに、スクリプトによって、おそらく外部パーサーの出力を使用して強調表示が設定されます。これは、画面を再描画するたびにではなく、一度だけおこなえば良いため、テキストプロパティを付加する最初のコスト以降ははるかに高速になります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Text properties can also be used for other purposes to identify text.  For
example, add a text property on a function name, so that a search can be
defined to jump to the next/previous function.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティは、テキストを識別するための他の目的にも使用できます。たとえば、関数名にテキストプロパティを追加すると、検索を定義して次/前の関数にジャンプすることができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
A text property is attached at a specific line and column, and has a specified
length.  The property can span multiple lines.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティは、特定の行と桁に付加され、指定された長さを持ちます。プロパティは複数の行にまたがることができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
A text property has these fields:
	"id"		a number to be used as desired
	"type"		the name of a property type
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティには、次のフィールドがあります:
@multitable @columnfractions .3 .7
@item "id" @tab 必要に応じて使われる番号
@item "type" @tab プロパティタイプ名
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Property Types ~
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec プロパティタイプ
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
							*E971*
A text property normally has the name of a property type, which defines 
how to highlight the text.  The property type can have these entries:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{E971}
@erindex E971
テキストプロパティは、通常、テキストをハイライトする方法を定義するプロパティタイプ名を持ちます。プロパティタイプには、次のエントリを含めることができます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	"highlight"	name of the highlight group to use
	"combine"	when omitted or TRUE the text property highlighting is
			combined with any syntax highlighting; when FALSE the
			text property highlighting replaces the syntax
			highlighting
	"priority"	when properties overlap, the one with the highest
			priority will be used.
	"start_incl"	when TRUE inserts at the start position will be
			included in the text property
	"end_incl"    	when TRUE inserts at the end position will be
			included in the text property
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .3 .7
@item "highlight" @tab 使用するハイライトグループ名
@item "combine" @tab 省略されるか TRUE の場合はテキストプロパティのハイライトが既存の構文ハイライトと組み合わされ、FALSE の場合はテキストプロパティのハイライトが既存の構文ハイライトを置き換えます。
@item "priority" @tab プロパティが重なるする場合は、優先度の高いものが使用されます。
@item "start_incl" @tab TRUE の場合、開始位置の挿入はテキストプロパティに含まれます。
@item "end_incl" @tab TRUE の場合、終了位置の挿入はテキストプロパティに含まれます。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Example ~
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec 例
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Suppose line 11 in a buffer has this text (excluding the indent):

	The number 123 is smaller than 4567.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
バッファの 11 行目にこのテキスト (インデントを除く) があるとします:
@verbatim
The number 123 is smaller than 4567.
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To highlight the numbers in this text: >
	call prop_type_add('number', {'highlight': 'Constant'})
	call prop_add(11, 12, {'length': 3, 'type': 'number'})
	call prop_add(11, 32, {'length': 4, 'type': 'number'})
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
このテキスト内の数字をハイライトするには:
@verbatim
call prop_type_add('number', {'highlight': 'Constant'})
call prop_add(11, 12, {'length': 3, 'type': 'number'})
call prop_add(11, 32, {'length': 4, 'type': 'number'})
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Try inserting or deleting lines above the text, you will see that the text
properties stick to the text, thus the line number is adjusted as needed.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストの上の行を挿入または削除してみると、テキストのプロパティがテキストに固定されていることが分かります。したがって、行番号は必要に応じて調整されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Setting "start_incl" and "end_incl" is useful when white space surrounds the
text, e.g. for a function name.  Using false is useful when the text starts
and/or ends with a specific character, such as the quote surrounding a string.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"start_incl" と "end_incl" を設定すると、空白がテキストを囲む場合に便利です。例えば、関数名のために。false を使用すると、文字列を囲む引用符などの特定の文字で開始または終了する場合に便利です。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	func FuncName(arg) ~
	     ^^^^^^^^        property with start_incl and end_incl set

	var = "text"; ~
	      ^^^^^^	     property with start_incl and end_incl not set
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
func FuncName(arg) ~
     ^^^^^^^^        start_incl と end_incl が設定されたプロパティ

var = "text"; ~
      ^^^^^^         start_incl と end_incl が設定されていないプロパティ
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Nevertheless, when text is inserted or deleted the text may need to be parsed
and the text properties updated.  But this can be done asynchronously.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
しかしながら、テキストが挿入または削除されると、テキストを解析してテキストプロパティを更新する必要があります。しかし、これは非同期で行うことができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Internal error *E967*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{E967}
@erindex E967
@unnumberedsubsec 内部エラー
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If you see E967, please report the bug.  You can do this at Github:
https://github.com/vim/vim/issues/new
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
E967 が表示された場合は、バグを報告してください。Githubでできます:

@url{https://github.com/vim/vim/issues/new}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
2. Functions						*text-prop-functions*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{text-prop-functions}
@cindex text-prop-functions
@section 2. 関数
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Manipulating text property types:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec テキストプロパティタイプの操作:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
prop_type_add({name}, {props})		define a new property type
prop_type_change({name}, {props})	change an existing property type
prop_type_delete({name} [, {props}])	delete a property type
prop_type_get([{name} [, {props}])	get property type values
prop_type_list([{props}])		get list of property types
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .5 .5
@item prop_type_add(@{name@}, @{props@}) @tab 新しいプロパティタイプを定義
@item prop_type_change(@{name@}, @{props@}) @tab 既存のプロパティタイプを変更
@item prop_type_delete(@{name@} [, @{props@}]) @tab プロパティタイプを削除
@item prop_type_get([@{name@} [, @{props@}]) @tab プロパティタイプの値を取得
@item prop_type_list([@{props@}]) @tab プロパティタイプのリストを取得
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Manipulating text properties:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec テキストプロパティの操作:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
prop_add({lnum}, {col}, {props})  	add a text property
prop_clear({lnum} [, {lnum-end} [, {bufnr}]])
					remove all text properties
prop_find({props} [, {direction}])	search for a text property
prop_list({lnum} [, {props})  		text properties in {lnum}
prop_remove({props} [, {lnum} [, {lnum-end}]])
					remove a text property
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .5 .5
@item prop_add(@{lnum@}, @{col@}, @{props@}) @tab テキストプロパティを追加
@item prop_clear(@{lnum@} [, @{lnum-end@} [, @{bufnr@}]]) @tab 全てのテキストプロパティを削除
@item prop_find(@{props@} [, @{direction@}]) @tab テキストプロパティを検索
@item prop_list(@{lnum@} [, @{props@}) @tab @{lnum@} のテキストプロパティ
@item prop_remove(@{props@} [, @{lnum@} [, @{lnum-end@}]]) @tab テキストプロパティを削除
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*prop_add()* *E965*
prop_add({lnum}, {col}, {props})
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@anchor{prop_add()}
@anchor{E965}
@findex prop_add()
@erindex E965
@item prop_add(@{lnum@}, @{col@}, @{props@})
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Attach a text property at position {lnum}, {col}.  {col} is
		counted in bytes, use one for the first column.
		If {lnum} is invalid an error is given. *E966*
		If {col} is invalid an error is given. *E964*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{lnum@} 行 @{col@} 桁の位置にテキストプロパティを付加する。@{col@} はバイト数でカウントされる。最初の桁は 1 を使用する。

@anchor{E966}
@erindex E966
@{lnum@} が無効な場合、エラーが発生する。

@anchor{E964}
@erindex E964
@{col@} が無効な場合、エラーが発生する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		{props} is a dictionary with these fields:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{props@} は次のフィールドを持つ辞書である:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		   length	length of text in bytes, can only be used
				for a property that does not continue in
				another line; can be zero
		   end_lnum	line number for the end of text
		   end_col	column just after the text; not used when
				"length" is present; when {col} and "end_col"
				are equal, and "end_lnum" is omitted or equal
				to {lnum}, this is a zero-width text property
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .3 .7
@item length @tab テキストの長さ(バイト)。別の行に続かないプロパティに対してのみ使用できる。0 指定可能。
@item end_lnum @tab テキスト終端の行番号
@item end_col @tab テキストの直後の桁。"length" が与えられた場合は使用されない。@{col@} と "end_col" が等しい場合、および "end_lnum" が省略されるか @{lnum@} と等しい場合、これは幅ゼロのテキストプロパティである。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		   bufnr	buffer to add the property to; when omitted
				the current buffer is used
		   id		user defined ID for the property; when omitted
				zero is used
		   type		name of the text property type
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item bufnr @tab プロパティを追加するバッファ。省略された場合、カレントバッファが使用される
@item id @tab プロパティのユーザー定義 ID。省略時は 0 が使われる
@item type @tab テキストプロパティ名
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		All fields except "type" are optional.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"type" を除くすべてのフィールドは任意である。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		It is an error when both "length" and "end_lnum" or "end_col"
		are given.  Either use "length" or "end_col" for a property
		within one line, or use "end_lnum" and "end_col" for a
		property that spans more than one line.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"length" と "end_lnum" または "end_col" の両方が与えられるとエラーになる。1 行内のプロパティに "length" または "end_col" を使用するか、複数の行にまたがるプロパティに対して "end_lnum" と"end_col" を使用する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		When neither "length" nor "end_col" are given the property
		will be zero-width.  That means it will not be highlighted but
		will move with the text, as a kind of mark.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

"length" または "end_col" のどちらも与えられない場合、プロパティは幅ゼロになる。これは、強調表示されないが、テキストと共にマークのように移動することを意味する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		The property can end exactly at the last character of the
		text, or just after it.  In the last case, if text is appended
		to the line, the text property size will increase, also when
		the property type does not have "end_incl" set.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
プロパティは、テキストの最後の文字、またはその直後で終わらせることができる。最後のケースでは、テキストが行に追加されると、プロパティタイプに "end_incl" が設定されていない場合にも、テキストプロパティのサイズが増える。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		"type" will first be looked up in the buffer the property is
		added to. When not found, the global property types are used.
		If not found an error is given.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
プロパティが追加されたバッファで、"type" が最初に検索される。見つからない場合は、グローバルプロパティタイプが使用される。見つからなければエラーになる。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		See |text-properties| for information about text properties.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティについては、|@ref{text-properties}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Can also be used as a |method|: >
			GetLnum()->prop_add(col, props)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{method}| としても使用できます:
@verbatim
GetLnum()->prop_add(col, props)
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
prop_clear({lnum} [, {lnum-end} [, {props}]])		*prop_clear()*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{prop_clear()}
@pindex prop_clear()
@item prop_clear(@{lnum@} [, @{lnum-end@} [, @{props@}]])
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Remove all text properties from line {lnum}.
		When {lnum-end} is given, remove all text properties from line
		{lnum} to {lnum-end} (inclusive).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{lnum@} 行からすべてのテキストプロパティを削除する。@{lnum-end@} が指定された場合、@{lnum@} 行から @{lnum-end@} (その行を含む) 行までのすべてのテキストプロパティを削除する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		When {props} contains a "bufnr" item use this buffer,
		otherwise use the current buffer.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{props@} に "bufnr" 項目が含まれている場合はこのバッファを使用し、そうでない場合はカレントバッファを使用する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		See |text-properties| for information about text properties.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティについては、|@ref{text-properties}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Can also be used as a |method|: >
			GetLnum()->prop_clear()
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{method}| としても使用できます:
@verbatim
GetLnum()->prop_clear()
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
							*prop_find()*
prop_find({props} [, {direction}])
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{prop_find()}
@pindex prop_find()
@item prop_find(@{props@} [, @{direction@}])
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		{not implemented yet}
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@display
@{まだ実装されていません@}
@end display
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Search for a text property as specified with {props}:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{props@} で指定されたテキストプロパティを検索する:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		   id		property with this ID
		   type		property with this type name
		   bufnr	buffer to search in; when present a
				start position with "lnum" and "col"
				must be given; when omitted the
				current buffer is used
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .3 .7
@item id @tab プロパティ ID
@item type @tab プロパティタイプ名
@item bufnr @tab 検索するバッファ。指定時は "lnum" と"col" を指定して開始位置を指定する必要がある。省略された場合、カレントバッファが使用される
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		   lnum		start in this line (when omitted start
				at the cursor)
		   col		start at this column (when omitted
				and "lnum" is given: use column 1,
				otherwise start at the cursor)
		   skipstart	do not look for a match at the start
				position
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item lnum @tab この行から開始する (省略時はカーソル位置で開始)
@item col @tab この桁から開始する (省略され "lnum" が指定された場合: 列 1 を使用する。そうでない場合はカーソル位置で開始する)
@item skipstart @tab 開始位置の一致を見ない
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		{direction} can be "f" for forward and "b" for backward.  When
		omitted forward search is performed.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{direction@} は、前方の場合は "f"、後方の場合は "b" となる。省略すると前方検索が行われる。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		If a match is found then a Dict is returned with the entries
		as with prop_list(), and additionally an "lnum" entry.
		If no match is found then an empty Dict is returned.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
一致するものが見つかった場合は、prop_list() と同様のエントリと "lnum" エントリを併せた辞書が返される。一致するものが見つからなければ、空の辞書が返される。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		See |text-properties| for information about text properties.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティについては、|@ref{text-properties}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
prop_list({lnum} [, {props}])				*prop_list()*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{prop_list()}
@pindex prop_list()
@item prop_list(@{lnum@} [, @{props@}])
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Return a List with all text properties in line {lnum}.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{lnum@} 行のすべてのテキストプロパティを持つリストを返す。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		When {props} contains a "bufnr" item, use this buffer instead
		of the current buffer.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{props@} に "bufnr" 項目が含まれている場合は、カレントバッファの代わりにこのバッファを使用する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		The properties are ordered by starting column and priority.
		Each property is a Dict with these entries:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
プロパティは、開始桁と優先順位によって順序付けられる。各プロパティは、次のエントリを持つ辞書である:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		   col		starting column
		   length	length in bytes, one more if line break is
				included
		   id		property ID
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .3 .7
@item col @tab 開始桁
@item length @tab バイト長。改行が含まれる場合は 1 以上。
@item id @tab プロパティ ID
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		   type		name of the property type, omitted if
				the type was deleted
		   start	when TRUE property starts in this line
		   end		when TRUE property ends in this line
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item type @tab プロパティタイプ名。タイプが削除された場合は省略される
@item start @tab TRUE の時はプロパティはこの行から始まる
@item end @tab TRUE の時はプロパティはこの行で終わる
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		When "start" is zero the property started in a previous line,
		the current one is a continuation.
		When "end" is zero the property continues in the next line.
		The line break after this line is included.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"start" が 0 の場合、プロパティは以前の行で開始され、現在行は続きである。

"end" が 0 の場合、プロパティは次の行に続く。この行の後に改行が含まれる。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		See |text-properties| for information about text properties.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティについては、|@ref{text-properties}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Can also be used as a |method|: >
			GetLnum()->prop_list()
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{method}| としても使用できます:
@verbatim
GetLnum()->prop_list()
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
						*prop_remove()* *E968*
prop_remove({props} [, {lnum} [, {lnum-end}]])
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{prop_remove()}
@anchor{E968}
@pindex prop_remove()
@erindex E968
@item prop_remove(@{props@} [, @{lnum@} [, @{lnum-end@}]])
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Remove a matching text property from line {lnum}.  When
		{lnum-end} is given, remove matching text properties from line
		{lnum} to {lnum-end} (inclusive).
		When {lnum} is omitted remove matching text properties from
		all lines.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{lnum@} 行から一致するテキストプロパティを削除する。@{lnum-end@} が指定された場合、@{lnum@} 行から @{lnum-end@} (その行を含む) までの一致するテキストプロパティを削除する。@{lnum@} を省略した場合、一致するテキストプロパティをすべての行から削除する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		{props} is a dictionary with these fields:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{props@} は次のフィールドを持つ辞書である:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		   id		remove text properties with this ID
		   type		remove text properties with this type name
		   bufnr	use this buffer instead of the current one
		   all		when TRUE remove all matching text properties,
				not just the first one
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .3 .7
@item id @tab この ID を持つテキストプロパティを削除する
@item type @tab このタイプ名を持つテキストプロパティを削除する
@item bufnr @tab カレントバッファの代わりにこのバッファを使う
@item all @tab TRUE の場合、最初のテキストプロパティだけでなく、一致するテキストプロパティをすべて削除する。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		A property matches when either "id" or "type" matches.
		If buffer "bufnr" does not exist you get an error message.
		If buffer "bufnr" is not loaded then nothing happens.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"id" または "type" のどちらかが一致するとプロパティが一致する。バッファ "bufnr" が存在しない場合はエラーメッセージが表示される。バッファ "bufnr" がロードされていなければ、何も起こらない。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Returns the number of properties that were removed.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
削除されたプロパティの数を返す。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		See |text-properties| for information about text properties.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティについては、|@ref{text-properties}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Can also be used as a |method|: >
			GetProps()->prop_remove()
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{method}| としても使用できます:
@verbatim
GetProps()->prop_remove()
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
prop_type_add({name}, {props})		*prop_type_add()* *E969* *E970*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{prop_type_add()}
@anchor{E969}
@anchor{E970}
@pindex prop_type_add()
@erindex E969
@erindex E970
@item prop_type_add(@{name@}, @{props@})
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Add a text property type {name}.  If a property type with this
		name already exists an error is given.  Nothing is returned.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティタイプ @{name@} を追加する。この名前のプロパティタイプがすでに存在する場合、エラーが発生する。何も返しません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		{props} is a dictionary with these optional fields:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{props@} は、次のオプションフィールドを持つ辞書である:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		   bufnr	define the property only for this buffer; this
				avoids name collisions and automatically
				clears the property types when the buffer is
				deleted.
		   highlight	name of highlight group to use
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .3 .7
@item bufnr @tab このバッファに対してのみプロパティを定義する。バッファが削除されたときに、名前の衝突を防ぎ、かつ、自動的にプロパティタイプをクリアする
@item highlight @tab 使用するハイライトグループ名
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		   priority	when a character has multiple text
				properties the one with the highest priority
				will be used; negative values can be used, the
				default priority is zero
		   combine	when TRUE combine the highlight with any
				syntax highlight; when omitted or FALSE syntax
				highlight will not be used
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item priority @tab 文字に複数のテキストプロパティがある場合は、優先度が最も高いものが使用される。負の値を使用できる。デフォルトの優先順位は 0 である
@item combine @tab TRUE の場合、ハイライトを任意の構文ハイライトと結び付ける。省略するか FALSE の場合は構文ハイライトは使用されない
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		   start_incl	when TRUE inserts at the start position will
				be included in the text property
		   end_incl	when TRUE inserts at the end position will be
				included in the text property
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item start_incl @tab TRUE の場合、開始位置の挿入はテキストプロパティに含まれる
@item end_incl @tab TRUE の場合、終了位置の挿入はテキストプロパティに含まれる
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		See |text-properties| for information about text properties.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティについては、|@ref{text-properties}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Can also be used as a |method|: >
			GetPropName()->prop_type_add(props)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{method}| としても使用できます:
@verbatim
GetPropName()->prop_type_add(props)
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
prop_type_change({name}, {props})			*prop_type_change()*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{prop_type_change()}
@pindex prop_type_change()
@item prop_type_change(@{name@}, @{props@})
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Change properties of an existing text property type.  If a
		property with this name does not exist an error is given.
		The {props} argument is just like |prop_type_add()|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
既存のテキストプロパティタイプのプロパティを変更する。この名前のプロパティが存在しない場合、エラーが発生する。@{props@} 引数は |@ref{prop_type_add()}| と似ている。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		See |text-properties| for information about text properties.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティについては、|@ref{text-properties}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Can also be used as a |method|: >
			GetPropName()->prop_type_change(props)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{method}| としても使用できます:
@verbatim
GetPropName()->prop_type_change(props)
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
prop_type_delete({name} [, {props}])			*prop_type_delete()*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{prop_type_delete()}
@pindex prop_type_delete()
@item prop_type_delete(@{name@} [, @{props@}])
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Remove the text property type {name}.  When text properties
		using the type {name} are still in place, they will not have
		an effect and can no longer be removed by name.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティタイプ @{name@} を削除する。@{name@} 型を使用するテキストプロパティがまだ存在する場合、それらは効果を持たず、もはや名前で削除できなくなる。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		{props} can contain a "bufnr" item.  When it is given, delete
		a property type from this buffer instead of from the global
		property types.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{props@} には "bufnr" 項目を含めることができる。指定すると、グローバルプロパティタイプではなく、このバッファからプロパティタイプを削除する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		When text property type {name} is not found there is no error.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティタイプ @{name@} が見つからなくてもエラーにならない。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		See |text-properties| for information about text properties.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティについては、|@ref{text-properties}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Can also be used as a |method|: >
			GetPropName()->prop_type_delete()
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{method}| としても使用できます:
@verbatim
GetPropName()->prop_type_delete()
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
prop_type_get([{name} [, {props}])			*prop_type_get()*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{prop_type_get()}
@pindex prop_type_get()
@item prop_type_get([@{name@} [, @{props@}])
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Returns the properties of property type {name}.  This is a
		dictionary with the same fields as was given to
		prop_type_add().
		When the property type {name} does not exist, an empty
		dictionary is returned.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
プロパティタイプ @{name@} のプロパティを返す。これは、prop_type_add() に与えられたものと同じフィールドを持つ辞書である。

プロパティタイプ @{name@} が存在しない場合、空の辞書が返される。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		{props} can contain a "bufnr" item.  When it is given, use
		this buffer instead of the global property types.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{props@} には "bufnr" 項目を含めることができる。指定すると、グローバルプロパティタイプの代わりにこのバッファを使用する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		See |text-properties| for information about text properties.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティについては、|@ref{text-properties}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Can also be used as a |method|: >
			GetPropName()->prop_type_get()
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{method}| としても使用できます:
@verbatim
GetPropName()->prop_type_get()
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
prop_type_list([{props}])				*prop_type_list()*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{prop_type_list()}
@pindex prop_type_list()
@item prop_type_list([@{props@}])
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Returns a list with all property type names.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
すべてのプロパティタイプ名のリストを返す。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		{props} can contain a "bufnr" item.  When it is given, use
		this buffer instead of the global property types.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{props@} には "bufnr" 項目を含めることができる。指定すると、グローバルプロパティタイプの代わりにこのバッファを使用する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		See |text-properties| for information about text properties.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストプロパティについては、|@ref{text-properties}| を参照。
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
==============================================================================
3. When text changes				*text-prop-changes*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{text-prop-changes}
@cindex text-prop-changes
@section 3. テキストが変更された場合
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Vim will do its best to keep the text properties on the text where it was
attached.  When inserting or deleting text the properties after the change
will move accordingly.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim はテキストプロパティをそれが付加されたテキストの上に置くように最善を尽くします。 テキストを挿入または削除するときは、変更後のプロパティもそれに従って移動します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
When text is deleted and a text property no longer includes any text, it is
deleted.  However, a text property that was defined as zero-width will remain,
unless the whole line is deleted.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストが削除され、テキストプロパティにテキストが含まれなくなった場合は削除されます。 ただし、行全体が削除されない限り、幅ゼロとして定義されたテキストプロパティは残ります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
								*E275*
When a buffer is unloaded, all the text properties are gone.  There is no way
to store the properties in a file.  You can only re-create them.  When a
buffer is hidden the text is preserved and so are the text properties.  It is
not possible to add text properties to an unloaded buffer.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{E275}
@erindex E275
バッファがアンロードされると、すべてのテキストプロパティがなくなります。プロパティをファイルに保存する方法はありません。再作成することしかできません。バッファが非表示 (hidden) の場合、テキストは保持され、テキストプロパティも保持されます。アンロードされたバッファにテキストプロパティを追加することはできません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
When using replace mode, the text properties stay on the same character
positions, even though the characters themselves change.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
置換モードを使用すると、文字自体が変更しても、テキストプロパティは同じ文字位置に留まります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To update text properties after the text was changed, install a callback with
`listener_add()`.  E.g, if your plugin does spell checking, you can have the
callback update spelling mistakes in the changed text.  Vim will move the
properties below the changed text, so that they still highlight the same text,
thus you don't need to update these.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テキストが変更された後にテキストのプロパティを更新するには、`@command{listener_add()}` でコールバックを設置します。例えば、もしあなたのプラグインがスペルチェックをしているのなら、変更されたテキスト内のスペルミスをコールバックで更新することができます。変更されたテキストの下にプロパティが移動し、同じテキストがハイライトされるため、これらを更新する必要はありません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Text property columns are not updated: ~
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec テキストプロパティの桁が更新されません:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
- When setting the line with |setline()| or through an interface, such as Lua,
  Tcl or Python.  Vim does not know what text got inserted or deleted.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item |@ref{setline()}| または Lua, Tcl または Python などのインターフェイスを介して行を設定した場合。Vim はどのテキストが挿入または削除されたのかを知りません。
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
 vim:tw=78:ts=8:noet:ft=help:norl:
@end ifset
