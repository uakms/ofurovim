\input texinfo-ja @c -*- mode: texinfo; coding: utf-8; tab-width: 8 -*-
@clear EN
@clear JA
@set JA
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@documentencoding UTF-8
@documentlanguage ja
@setfilename vim_reference_manual.info
@settitle Vim Reference Manual
@finalout
@afourpaper
@defindex er

@titlepage
@title Vim リファレンスマニュアル
@page
@vskip 0pt plus 1filll
@end titlepage
@iftex
@shortcontents
@contents
@end iftex
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@node 目次, usr_01.txt
@top メインヘルプ
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
*help.txt*	For Vim version 8.1.  Last change: 2019 May 12

			VIM - main help file
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{help.txt}
@verbatim
*help.txt*	For Vim バージョン 8.1.  Last change: 2019 May 12

			VIM - メインヘルプファイル
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
									 k
      Move around:  Use the cursor keys, or "h" to go left,	       h   l
		    "j" to go down, "k" to go up, "l" to go right.	 j
Close this window:  Use ":q<Enter>".
   Get out of Vim:  Use ":qa!<Enter>" (careful, all changes are lost!).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
                   k
                 h   l
                   j
@end example
@table @asis
@item 移動:
カーソルを使用するか、"@key{h}" で左、"@key{j}" で下、"@key{k}" で上、"@key{l}" で右に移動できます。
@item ヘルプの終了:
":q@key{<Enter>}" とタイプします。
@item Vim の終了:
":qa!@key{<Enter>}" とします (注意！変更はすべて破棄されます)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Jump to a subject:  Position the cursor on a tag (e.g. |bars|) and hit CTRL-].
   With the mouse:  ":set mouse=a" to enable the mouse (in xterm or GUI).
		    Double-click the left mouse button on a tag, e.g. |bars|.
	Jump back:  Type CTRL-O.  Repeat to go further back.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 項目へジャンプ:
タグ (例: |@ref{bars}|) にカーソルを合わせ、@kbd{CTRL-]} を押します。
@item マウスでジャンプ:
"@command{:set mouse=a}" と入力してマウスを有効にしてください (xterm or GUI で利用可)。タグ (例: |@ref{bars}|) をマウスの左ボタンでダブルクリックすると、項目にジャンプできます。
@item 元の場所に戻る:
@kbd{CTRL-O} を押します。繰り返すと更に戻れます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Get specific help:  It is possible to go directly to whatever you want help
		    on, by giving an argument to the |:help| command.
		    Prepend something to specify the context:  *help-context*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{help-context}
@cindex help-context
@item 項目を指定する:
|@ref{:help}| コマンドに項目を指定することで、その項目を直ちに表示できます。修飾子を先行入力することで、調べたい項目の種類を指定することもできます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
			  WHAT			PREPEND    EXAMPLE	~
		      Normal mode command		   :help x
		      Visual mode command	  v_	   :help v_u
		      Insert mode command	  i_	   :help i_<Esc>
		      Command-line command	  :	   :help :quit
		      Command-line editing	  c_	   :help c_<Del>
		      Vim command argument	  -	   :help -r
		      Option			  '	   :help 'textwidth'
		      Regular expression	  /	   :help /[
		    See |help-summary| for more contexts and an explanation.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .4 .2 .4
@item 種類 @tab 修飾子 @tab 例
@item ノーマルモードコマンド @tab @tab @command{:help x}
@item ビジュアルモードコマンド @tab @var{v_} @tab @command{:help v_u}
@item 挿入モードコマンド @tab @var{i_} @tab @command{:help i_<Esc>}
@item コマンドラインコマンド @tab @var{:} @tab @command{:help :quit}
@item コマンドライン編集 @tab @var{c_} @tab @command{:help c_<Del>}
@item Vim の起動引数 @tab @var{-} @tab @command{:help -r}
@item オプション @tab @var{'} @tab @command{:help 'textwidth'}
@item 正規表現 @tab @var{/} @tab @command{:help /[}
@end multitable
その他の種類については |@ref{help-summary}| を参照してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  Search for help:  Type ":help word", then hit CTRL-D to see matching
		    help entries for "word".
		    Or use ":helpgrep word". |:helpgrep|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item ヘルプを検索する:
":help word" とタイプしてから @kbd{CTRL-D} を押すと "word" にマッチするヘルプ項目の一覧が表示されます。もしくは "@command{:helpgrep word}" を使ってください。 |@ref{:helpgrep}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  Getting started:  Do the Vim tutor, a 20 minute interactive training for the
		    basic commands, see |vimtutor|.
		    Read the user manual from start to end: |usr_01.txt|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item はじめに:
Vim のチューター、基本的なコマンドのための 20 分間の対話型トレーニングを行ってください。|@ref{vimtutor}| を参照してください。ユーザーマニュアルを最初から最後まで読んでください: |@ref{usr_01.txt}|
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Vim stands for Vi IMproved.  Most of Vim was made by Bram Moolenaar, but only
through the help of many others.  See |credits|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim は Vi IMproved の略です。Vim の大部分は Bram Moolenaar によって作成され、たくさんの人が協力しました。|@ref{credits}| 参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
						*doc-file-list* *Q_ct*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{doc-file-list}
@anchor{Q_ct}
@cindex doc-file-list
@cindex Q_ct
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
BASIC:
|quickref|	Overview of the most common commands you will use
|tutor|		20 minutes training course for beginners
|copying|	About copyrights
|iccf|		Helping poor children in Uganda
|sponsor|	Sponsor Vim development, become a registered Vim user
|www|		Vim on the World Wide Web
|bugs|		Where to send bug reports
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@menu
基本:
* quickref:: よく使うコマンドのクイックリファレンス
* tutor::    20 分の初心者向けトレーニングコース
* copying::  著作権について
* iccf::     ウガンダの恵まれない子供達への支援活動
* sponsor::  Vim 開発スポンサー制度、Vim の登録ユーザーになろう
* www::      インターネット上の Vim 情報
* bugs::     バグレポートの送信先
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
USER MANUAL: These files explain how to accomplish an editing task.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ユーザーマニュアルでは編集作業の進め方を説明します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
|usr_toc.txt|	Table Of Contents
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
* usr_toc.txt:: ユーザーマニュアル目次
@c トップノードが重複してしまうのでコメントアウト
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Getting Started ~
|usr_01.txt|  About the manuals
|usr_02.txt|  The first steps in Vim
|usr_03.txt|  Moving around
|usr_04.txt|  Making small changes
|usr_05.txt|  Set your settings
|usr_06.txt|  Using syntax highlighting
|usr_07.txt|  Editing more than one file
|usr_08.txt|  Splitting windows
|usr_09.txt|  Using the GUI
|usr_10.txt|  Making big changes
|usr_11.txt|  Recovering from a crash
|usr_12.txt|  Clever tricks
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
初級編
* usr_01.txt:: マニュアルについて
* usr_02.txt:: 初めての Vim
* usr_03.txt:: カーソルの移動
* usr_04.txt:: 簡単な編集
* usr_05.txt:: 設定の変更
* usr_06.txt:: 構文強調表示
* usr_07.txt:: 複数のファイルを開く
* usr_08.txt:: ウィンドウの分割
* usr_09.txt:: GUI を使う
* usr_10.txt:: 大規模な編集
* usr_11.txt:: クラッシュからの復帰
* usr_12.txt:: 便利な小技
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Editing Effectively ~
|usr_20.txt|  Typing command-line commands quickly
|usr_21.txt|  Go away and come back
|usr_22.txt|  Finding the file to edit
|usr_23.txt|  Editing other files
|usr_24.txt|  Inserting quickly
|usr_25.txt|  Editing formatted text
|usr_26.txt|  Repeating
|usr_27.txt|  Search commands and patterns
|usr_28.txt|  Folding
|usr_29.txt|  Moving through programs
|usr_30.txt|  Editing programs
|usr_31.txt|  Exploiting the GUI
|usr_32.txt|  The undo tree
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
上級編
* usr_20.txt:: コマンドラインを素早く入力する
* usr_21.txt:: 中断と再開
* usr_22.txt:: ファイルを探す
* usr_23.txt:: 特殊なファイルを編集する
* usr_24.txt:: 素早く入力する
* usr_25.txt:: テキストの整形
* usr_26.txt:: 繰り返し
* usr_27.txt:: 検索コマンドと正規表現
* usr_28.txt:: 折り畳み
* usr_29.txt:: プログラムの中を移動する
* usr_30.txt:: プログラムの編集
* usr_31.txt:: GUI を活用する
* usr_32.txt:: undo ツリー
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Tuning Vim ~
|usr_40.txt|  Make new commands
|usr_41.txt|  Write a Vim script
|usr_42.txt|  Add new menus
|usr_43.txt|  Using filetypes
|usr_44.txt|  Your own syntax highlighted
|usr_45.txt|  Select your language
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
カスタマイズ
* usr_40.txt:: 新しいコマンドを作る
* usr_41.txt:: Vim script 書法
* usr_42.txt:: 新しいメニューを追加する
* usr_43.txt:: ファイルタイプを使う
* usr_44.txt:: 構文ファイルを作成する
* usr_45.txt:: 言語を選択する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Making Vim Run ~
|usr_90.txt|  Installing Vim
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
インストール
* usr_90.txt:: Vim のインストール
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
REFERENCE MANUAL: These files explain every detail of Vim.	*reference_toc*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{reference_toc}
@cindex reference_toc
リファレンスマニュアルでは Vim の詳細を説明します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
General subjects ~
|intro.txt|	general introduction to Vim; notation used in help files
|help.txt|	overview and quick reference (this file)
|helphelp.txt|	about using the help files
|index.txt|	alphabetical index of all commands
|help-tags|	all the tags you can jump to (index of tags)
|howto.txt|	how to do the most common editing tasks
|tips.txt|	various tips on using Vim
|message.txt|	(error) messages and explanations
|quotes.txt|	remarks from users of Vim
|todo.txt|	known problems and desired extensions
|develop.txt|	development of Vim
|debug.txt|	debugging Vim itself
|uganda.txt|	Vim distribution conditions and what to do with your money
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
一般事項
* intro.txt::    Vim についての前書き、ヘルプの表記について
* help.txt::     全体説明とクイックリファレンス (今見ているファイル)
* helphelp.txt:: ヘルプの使い方
* index.txt::    全コマンド一覧。アルファベット順
@c * help-tags::    ジャンプできるタグ一覧 (なし。tags ファイルへのリンク)
* howto.txt::    一般的な編集操作についての How to
* tips.txt::     さまざまな Tips
* message.txt::  (エラー)メッセージの説明
* quotes.txt::   Vim ユーザーの感想
@c * todo.txt::     既知のバグと、機能拡張の要望
* debug.txt::    Vim のデバッグについて
* develop.txt::  Vim の開発に関して
* uganda.txt::   Vim の配布条件と、あなたが支払ったお金の使い道について
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Basic editing ~
|starting.txt|	starting Vim, Vim command arguments, initialisation
|editing.txt|	editing and writing files
|motion.txt|	commands for moving around
|scroll.txt|	scrolling the text in the window
|insert.txt|	Insert and Replace mode
|change.txt|	deleting and replacing text
|undo.txt|	Undo and Redo
|repeat.txt|	repeating commands, Vim scripts and debugging
|visual.txt|	using the Visual mode (selecting a text area)
|various.txt|	various remaining commands
|recover.txt|	recovering from a crash
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
基本的な編集
* starting.txt:: Vim の起動、起動引数や初期化に関して
* editing.txt::  ファイルの編集と保存
* motion.txt::   移動コマンド
* scroll.txt::   ウィンドウのスクロール
* insert.txt::   挿入モードと置換モード
* change.txt::   テキストの削除と変更
* undo.txt::     アンドゥとリドゥ
* repeat.txt::   繰り返しコマンド、Vim script、スクリプトのデバッグ
* visual.txt::   ビジュアルモード (テキストの選択)
* various.txt::  その他の様々なコマンド
* recover.txt::  クラッシュからの復帰
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Advanced editing ~
|cmdline.txt|	Command-line editing
|options.txt|	description of all options
|pattern.txt|	regexp patterns and search commands
|map.txt|	key mapping and abbreviations
|tagsrch.txt|	tags and special searches
|windows.txt|	commands for using multiple windows and buffers
|tabpage.txt|	commands for using multiple tab pages
|spell.txt|	spell checking
|diff.txt|	working with two to four versions of the same file
|autocmd.txt|	automatically executing commands on an event
|eval.txt|	expression evaluation, conditional commands
|channel.txt|	Jobs, Channels, inter-process communication
|fold.txt|	hide (fold) ranges of lines
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
高度な編集
* cmdline.txt::  コマンドラインの編集
* options.txt::  全オプションの説明
* pattern.txt::  検索コマンドと正規表現
* map.txt::      キーマップと短縮入力
* tagsrch.txt::  タグと特別な検索
* windows.txt::  マルチウィンドウとマルチバッファのコマンド
* tabpage.txt::  タブページを操作するコマンド
* spell.txt::    スペルチェック
* diff.txt::     バージョン違いのファイルの編集 (差分モード)
* autocmd.txt::  イベントに応じて自動的にコマンドを実行する
* eval.txt::     式の評価、条件式 (Vim script リファレンス)
* channel.txt::  ジョブ、チャネル、プロセス間通信
* fold.txt::     ある範囲を隠す (折り畳む)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Special issues ~
|print.txt|	printing
|remote.txt|	using Vim as a server or client
|term.txt|	using different terminals and mice
|terminal.txt|	Terminal window support
|popup.txt|	popop window support
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
特定機能
* print.txt::    印刷
* remote.txt::   クライアント/サーバー機能
* term.txt::     いろいろな端末やマウスについて
* terminal.txt:: ターミナルウィンドウのサポート
* popup.txt::    ポップアップウィンドウのサポート
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Programming language support ~
|indent.txt|	automatic indenting for C and other languages
|syntax.txt|	syntax highlighting
|textprop.txt|	Attaching properties to text for highlighting or other
|filetype.txt|	settings done specifically for a type of file
|quickfix.txt|	commands for a quick edit-compile-fix cycle
|ft_ada.txt|	Ada (the programming language) support
|ft_rust.txt|	Filetype plugin for Rust
|ft_sql.txt|	about the SQL filetype plugin
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
プログラミング言語サポート
* indent.txt::   C 言語や、その他の言語の自動インデント
* syntax.txt::   構文強調
* textprop.txt:: ハイライトやその他のためにテキストにプロパティを付加する
* filetype.txt:: ファイルタイプ別の設定
* quickfix.txt:: 編集、コンパイル、修正、の流れを早くするコマンド
* ft_ada.txt::   Ada (プログラミング言語) のサポート
* ft_rust.txt::  Rust ファイルタイププラグイン
* ft_sql.txt::   SQL ファイルタイププラグイン
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Language support ~
|digraph.txt|	list of available digraphs
|mbyte.txt|	multi-byte text support
|mlang.txt|	non-English language support
|rileft.txt|	right-to-left editing mode
|arabic.txt|	Arabic language support and editing
|farsi.txt|	Farsi (Persian) editing
|hebrew.txt|	Hebrew language support and editing
|russian.txt|	Russian language support and editing
|hangulin.txt|	Hangul (Korean) input mode
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
言語サポート
* digraph.txt::  利用可能なダイグラフ (digraph) の一覧
* mbyte.txt::    マルチバイトテキストのサポート
* mlang.txt::    英語以外の言語のサポート
* rileft.txt::   右横書き (書字方向が右から左になるモード)
* arabic.txt::   アラビア語のサポート
* farsi.txt::    ペルシア語のサポート
* hebrew.txt::   ヘブライ語のサポート
* russian.txt::  ロシア語のサポート
* hangulin.txt:: ハングル (韓国語) の入力
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
GUI ~
|gui.txt|	Graphical User Interface (GUI)
|gui_w32.txt|	Win32 GUI
|gui_x11.txt|	X11 GUI
|gui_mac.txt|	MacVim GUI
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
GUI
* gui.txt::     グラフィカルユーザーインターフェイス (GUI)
* gui_w32.txt:: Win32 GUI
* gui_x11.txt:: X11 GUI
* gui_mac.txt:: MacVim GUI
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Interfaces ~
|if_cscop.txt|	using Cscope with Vim
|if_lua.txt|	Lua interface
|if_mzsch.txt|	MzScheme interface
|if_perl.txt|	Perl interface
|if_pyth.txt|	Python interface
|if_tcl.txt|	Tcl interface
|if_ole.txt|	OLE automation interface for Win32
|if_ruby.txt|	Ruby interface
|debugger.txt|	Interface with a debugger
|netbeans.txt|	NetBeans External Editor interface
|sign.txt|	debugging signs
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
拡張インターフェイス
* if_cscop.txt:: cscope を使う
* if_lua.txt::   Lua インターフェイス
* if_mzsch.txt:: MzScheme インターフェイス
* if_perl.txt::  Perl インターフェイス
* if_pyth.txt::  Python インターフェイス
* if_tcl.txt::   Tcl インターフェイス
* if_ole.txt::   Win32 の OLE オートメーション
* if_ruby.txt::  Ruby インターフェイス
* debugger.txt:: デバッガ用のインターフェイス
* workshop.txt:: Sun Visual Workshop インターフェイス
* netbeans.txt:: NetBeans External Editor インターフェイス
* sign.txt::     デバッグ用の目印
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Versions ~
|vi_diff.txt|	Main differences between Vim and Vi
|version4.txt|	Differences between Vim version 3.0 and 4.x
|version5.txt|	Differences between Vim version 4.6 and 5.x
|version6.txt|	Differences between Vim version 5.7 and 6.x
|version7.txt|	Differences between Vim version 6.4 and 7.x
|version8.txt|	Differences between Vim version 7.4 and 8.x
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
バージョン情報
* vi_diff.txt::  Vim と Vi の主な違い
@c * version4.txt:: Vim version 3.0 と 4.x の違い
@c * version5.txt:: Vim version 4.6 と 5.x の違い
@c * version6.txt:: Vim version 5.7 と 6.x の違い
@c * version7.txt:: Vim version 6.4 と 7.x の違い
@c * version8.txt:: Vim version 7.4 と 8.x の違い

@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
						*sys-file-list*
Remarks about specific systems ~
|os_390.txt|	OS/390 Unix
|os_amiga.txt|	Amiga
|os_beos.txt|	BeOS and BeBox
|os_dos.txt|	MS-DOS and MS-Windows NT/95 common items
|os_mac.txt|	Macintosh
|os_mint.txt|	Atari MiNT
|os_msdos.txt|	MS-DOS (plain DOS and DOS box under Windows)
|os_os2.txt|	OS/2
|os_qnx.txt|	QNX
|os_risc.txt|	RISC-OS
|os_unix.txt|	Unix
|os_vms.txt|	VMS
|os_win32.txt|	MS-Windows 95/98/NT
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{sys-file-list}
@cindex sys-file-list
システムに関する説明
@c * os_390.txt::   OS/390 Unix
@c * os_amiga.txt:: Amiga
@c * os_beos.txt::  BeOS と BeBox
* os_dos.txt::   MS-DOS と MS-Windows NT/95 の共通事項
* os_mac.txt::   Macintosh
@c * os_mint.txt::  Atari MiNT
@c * os_msdos.txt:: MS-DOS (DOS と Windows の DOS プロンプト)
@c * os_os2.txt::   OS/2
@c * os_qnx.txt::   QNX
@c * os_risc.txt::  RISC-OS
* os_unix.txt::  Unix
@c * os_vms.txt::   VMS
* os_win32.txt:: MS-Windows 95/98/NT

@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
						*standard-plugin-list*
Standard plugins ~
|pi_getscript.txt| Downloading latest version of Vim scripts
|pi_gzip.txt|      Reading and writing compressed files
|pi_logipat.txt|   Logical operators on patterns
|pi_netrw.txt|     Reading and writing files over a network
|pi_paren.txt|     Highlight matching parens
|pi_spec.txt|      Filetype plugin to work with rpm spec files
|pi_tar.txt|       Tar file explorer
|pi_vimball.txt|   Create a self-installing Vim script
|pi_zip.txt|       Zip archive explorer
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{standard-plugin-list}
@cindex standard-plugin-list
標準プラグイン
* pi_getscript.txt:: Vim script の最新版をダウンロードする
* pi_gzip.txt::      圧縮ファイルの読み書き
* pi_logipat.txt::   パターンにおける論理演算子
* pi_netrw.txt::     ネットワークファイルの読み書き
* pi_paren.txt::     対括弧の強調表示
* pi_spec.txt::      rpm spec ファイルで動作するファイルタイププラグイン
* pi_tar.txt::       Tar ファイルエクスプローラー
* pi_vimball.txt::   Vim script インストーラを作成する
* pi_zip.txt::       Zip アーカイブエクスプローラー

その他
@c * vim_faq.txt:: FAQ
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
LOCAL ADDITIONS:				*local-additions*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{local-additions}
@cindex local-additions
LOCAL ADDITIONS:
* quickref.txt:: クイックリファレンスガイド (本家では存在しない node)
* sponsor.txt::  スポンサーになるとできる事 (本家では存在しない node)
* Indexes CP::   Texinfo が生成するインデックス (コンセプト)
* Indexes FN::   Texinfo が生成するインデックス (関数)
* Indexes VR::   Texinfo が生成するインデックス (変数)
* Indexes KY::   Texinfo が生成するインデックス (キーストローク)
* Indexes PG::   Texinfo が生成するインデックス (プログラム)
* Indexes TP::   Texinfo が生成するインデックス (データ型)
* Indexes ER::   Texinfo が生成するインデックス (Error メッセージ)
@end menu
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
------------------------------------------------------------------------------
*bars*		Bars example
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{bars}
@cindex bars
Bars example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Now that you've jumped here with CTRL-] or a double mouse click, you can use
CTRL-T, CTRL-O, g<RightMouse>, or <C-RightMouse> to go back to where you were.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
今、あなたはマウスのダブルクリックか @kbd{CTRL-]} でジャンプしてきました。@kbd{CTRL-T}、@kbd{CTRL-O}、@kbd{g@key{<RightMouse>}}、@kbd{<C-RightMouse>} のどれかで元の場所に戻れます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Note that tags are within | characters, but when highlighting is enabled these
characters are hidden.  That makes it easier to read a command.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@quotation
@strong{Note:} @*
タグは | で囲まれていますが、その文字は、カラー表示が有効になっている場合は表示されません。読みやすさのためです。
@end quotation
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Anyway, you can use CTRL-] on any word, also when it is not within |, and Vim
will try to find help for it.  Especially for options in single quotes, e.g.
'compatible'.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@kbd{CTRL-]} はどの単語の上でも使えます。| で囲まれていない単語でも大丈夫です。選択された単語がヘルプから検索されます。特にシングルクォートで囲まれたオプション名 (例: '@option{compatible}')。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
------------------------------------------------------------------------------
 vim:tw=78:isk=!-~,^*,^\|,^\":ts=8:noet:ft=help:norl:
@end ifset

@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@ifnottex
@include usr_toc.texi
@end ifnottex
@include usr_01.texi
@include usr_02.texi
@include usr_03.texi
@include usr_04.texi
@include usr_05.texi
@include usr_06.texi
@include usr_07.texi
@include usr_08.texi
@include usr_09.texi
@include usr_10.texi
@include usr_11.texi
@include usr_12.texi
@include usr_20.texi
@include usr_21.texi
@include usr_22.texi
@include usr_23.texi
@include usr_24.texi
@include usr_25.texi
@include usr_26.texi
@include usr_27.texi
@include usr_28.texi
@include usr_29.texi
@include usr_30.texi
@include usr_31.texi
@include usr_32.texi
@include usr_40.texi
@include usr_41.texi
@include usr_42.texi
@include usr_43.texi
@include usr_44.texi
@include usr_45.texi
@include usr_90.texi
@include intro.texi
@include helphelp.texi
@include uganda.texi
@include index.texi
@c @include help-tags
@include howto.texi
@include tips.texi
@include message.texi
@include quotes.texi
@c @include todo.texi
@include debug.texi
@include develop.texi
@include starting.texi
@include editing.texi
@include motion.texi
@include scroll.texi
@include insert.texi
@include change.texi
@include undo.texi
@include repeat.texi
@include visual.texi
@include various.texi
@include recover.texi
@include cmdline.texi
@include options.texi
@include pattern.texi
@include map.texi
@include tagsrch.texi
@include windows.texi
@include tabpage.texi
@include spell.texi
@include diff.texi
@include autocmd.texi
@include eval.texi
@include channel.texi
@include fold.texi
@include print.texi
@include remote.texi
@include term.texi
@include terminal.texi
@include popup.texi
@include indent.texi
@include syntax.texi
@include textprop.texi
@include filetype.texi
@include quickfix.texi
@include ft_ada.texi
@include ft_rust.texi
@include ft_sql.texi
@include digraph.texi
@include mbyte.texi
@include mlang.texi
@include rileft.texi
@include arabic.texi
@include farsi.texi
@include hebrew.texi
@include russian.texi
@include hangulin.texi
@include gui.texi
@include gui_w32.texi
@include gui_x11.texi
@include gui_mac.texi
@include if_cscop.texi
@include if_lua.texi
@include if_mzsch.texi
@include if_perl.texi
@include if_pyth.texi
@include if_tcl.texi
@include if_ole.texi
@include if_ruby.texi
@include debugger.texi
@include workshop.texi
@include netbeans.texi
@include sign.texi
@include vi_diff.texi
@c @include version4.texi
@c @include version5.texi
@c @include version6.texi
@c @include version7.texi
@c @include version8.texi
@c @include os_390.texi
@c @include os_amiga.texi
@c @include os_beos.texi
@include os_dos.texi
@include os_mac.texi
@c @include os_mint.texi
@c @include os_msdos.texi
@c @include os_os2.texi
@c @include os_qnx.texi
@c @include os_risc.texi
@include os_unix.texi
@c @include os_vms.texi
@include os_win32.texi
@include pi_getscript.texi
@include pi_gzip.texi
@include pi_logipat.texi
@include pi_netrw.texi
@include pi_paren.texi
@include pi_spec.texi
@include pi_tar.texi
@include pi_vimball.texi
@include pi_zip.texi
@c @include vim_faq.texi
@include quickref.texi
@include sponsor.texi

@node Indexes CP
@unnumbered Concept Index
コンセプトのインデックス。作業をはじめた時にすべてを cindex でマーク付けしたので、かなりの分量があります。分類が進めば少なくなってくると思います。
@printindex cp

@node Indexes FN
@unnumbered Function Index
関数のインデックス。cindex でマーク付けしたものの分類をはじめました。作業が進めば多くなってくると思います。

基本的に Vim scripting Language で使われる foo() のような関数を含めていこうと考えています。しかし、プログラムとの違いがよくわかりません。
@printindex fn

@node Indexes VR
@unnumbered Variable Index
変数のインデックス。cindex でマーク付けしたものの分類をはじめました。作業が進めば多くなってくると思います。

変数だけでなく、オプションもここに含めようと考えています。オプションはかなりの量があるので、大きくなると考えられますが、どうなりますか。
@printindex vr

@node Indexes KY
@unnumbered Key Index
キーストロークのインデックス。cindex でマーク付けしたものの分類をはじめました。作業が進めば多くなってくると思います。

とりあえず <@kbd{Ctrl-z}> のようなモーション系のものはここに分類しようと思います。Vim はモーションがコマンドであったりするので、作業をするのに悩みそうな感じがします。
@printindex ky

@node Indexes PG
@unnumbered Program Index
プログラムのインデックス。cindex でマーク付けしたものの分類をはじめました。作業が進めば多くなってくると思います。

コマンド類を含めようと考えていますが、先の関数との違いが良くわかりません。コマンドであったり関数であったりするので。基本的に hoge() とはならない :next などを入れていこうと考えています。分類するのが間違っているのではないかな？というくらいに境界があいまいです。
@printindex pg

@node Indexes TP
@unnumbered Data Type Index
データ型のインデックス。cindex でマーク付けしたものの分類をはじめました。作業が進めば多くなってくると思います。

これはもしかしたら存在しないかもしれません。というかデータ型に対するアンカーがあったのかよくわかりません。配列、辞書、整数、ブールなど？とりあえず枠を確保する意味であげてあります。無駄なページになって将来削除されるかもしれません。それはそれで良いですよね？
@printindex tp

@node Indexes ER
@unnumbered Error Index
エラーとワーニング用のインデックス。デフォルトでは用意されていないので、自分で定義して erindex でマーク付けしました。何個あるのかな？
@printindex er
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@bye
