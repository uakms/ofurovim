@ifset JA  @c ----------- v -----------  JA  -*- tab-width: 8 -*-
@node pi_zip.txt, , , 目次
@unnumbered Zip アーカイブエクスプローラー
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
*pi_zip.txt*	For Vim version 8.1.  Last change: 2016 Sep 13

				+====================+
				| Zip File Interface |
				+====================+

Author:  Charles E. Campbell  <NdrOchip@ScampbellPfamily.AbizM>
	  (remove NOSPAM from Campbell's email first)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
*pi_zip.txt*    For Vim バージョン 8.1.  Last change: 2016 Sep 13

                                +====================+
                                | Zip File Interface |
                                +====================+

Author:  Charles E. Campbell  <NdrOchip@ScampbellPfamily.AbizM>
          (remove NOSPAM from Campbell's email first)
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Copyright: Copyright (C) 2005-2015 Charles E Campbell	 *zip-copyright*
	The VIM LICENSE (see |copyright|) applies to the files in this
	package, including zipPlugin.vim, zip.vim, and pi_zip.vim.  except use
	"zip.vim" instead of "VIM".  Like anything else that's free, zip.vim
	and its associated files are provided *as is* and comes with no
	warranty of any kind, either expressed or implied.  No guarantees of
	merchantability.  No guarantees of suitability for any purpose.  By
	using this plugin, you agree that in no event will the copyright
	holder be liable for any damages resulting from the use of this
	software. Use at your own risk!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{zip-copyright}
@cindex zip-copyright
@verbatim
Copyright: Copyright (C) 2005-2015 Charles E Campbell
        The VIM LICENSE (see |copyright|) applies to the files in this
        package, including zipPlugin.vim, zip.vim, and pi_zip.vim.  except use
        "zip.vim" instead of "VIM".  Like anything else that's free, zip.vim
        and its associated files are provided *as is* and comes with no
        warranty of any kind, either expressed or implied.  No guarantees of
        merchantability.  No guarantees of suitability for any purpose.  By
        using this plugin, you agree that in no event will the copyright
        holder be liable for any damages resulting from the use of this
        software. Use at your own risk!
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
1. Contents						*zip* *zip-contents*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{zip}
@anchor{zip-contents}
@cindex zip
@cindex zip-contents
@section 1. 目次
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
   1. Contents................................................|zip-contents|
   2. Usage...................................................|zip-usage|
   3. Additional Extensions...................................|zip-extension|
   4. History.................................................|zip-history|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .5 .5
@item 1. 目次 @tab |@ref{zip-contents}|
@item 2. 使い方 @tab |@ref{zip-usage}|
@item 3. zip 以外の拡張子 @tab |@ref{zip-extension}|
@item 4. 開発履歴 @tab |@ref{zip-history}|
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
2. Usage						*zip-usage* *zip-manual*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{zip-usage}
@anchor{zip-manual}
@cindex zip-usage
@cindex zip-manual
@section 2. 使い方
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
   When one edits a *.zip file, this plugin will handle displaying a
   contents page.  Select a file to edit by moving the cursor atop
   the desired file, then hit the <return> key.  After editing, one may
   also write to the file.  Currently, one may not make a new file in
   zip archives via the plugin.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
 *.zip ファイルを開くとファイルの一覧が表示されます。一覧の中のファイルを開きたい場合はファイル名の上にカーソルを移動して @key{<return>} キーを押してください。開いたファイルを編集して保存することもできます。zip アーカイブに新しいファイルを追加することはまだできません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*zip-x*
   x : may extract a listed file when the cursor is atop it
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{zip-x}
@cindex zip-x
x : カーソル上にある一覧のファイルが解凍されます
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
   OPTIONS
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
オプション
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
   							*g:zip_nomax*

   If this variable exists and is true, the file window will not be
   automatically maximized when opened.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:zip_nomax}
@vindex g:zip_nomax
g:zip_nomax

この変数が存在し、その値が真なら、ファイルを開いたときにウィンドウを最大化しません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
							*g:zip_shq*
   Different operating systems may use one or more shells to execute
   commands.  Zip will try to guess the correct quoting mechanism to
   allow spaces and whatnot in filenames; however, if it is incorrectly
   guessing the quote to use for your setup, you may use >
	g:zip_shq
<  which by default is a single quote under Unix (') and a double quote
   under Windows (").  If you'd rather have no quotes, simply set
   g:zip_shq to the empty string (let g:zip_shq= "") in your <.vimrc>.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:zip_shq}
@vindex g:zip_shq
コマンドの実行に使用されるシェルはシステムによって異なります。Zip は適切な方法でスペースなどの文字をクォートしようとしますが、それがうまく機能しない場合はこの変数を設定してください。
@example
g:zip_shq
@end example
初期設定は、Unix ではシングルクォート (')、Windows ではダブルクォート (") です。クォート自体をしたくない場合は <.vimrc> の中で g:zip_shq に空文字を設定してください (let g:zip_shq = "")。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
   							*g:zip_unzipcmd*
   Use this option to specify the program which does the duty of "unzip".
   It's used during browsing. By default: >
   	let g:zip_unzipcmd= "unzip"
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:zip_unzipcmd}
@vindex g:zip_unzipcmd
"unzip" として使用するプログラムを指定します。これはブラウジングに使用されます。初期設定:
@example
let g:zip_unzipcmd= "unzip"
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
							*g:zip_zipcmd*
   Use this option to specify the program which does the duty of "zip".
   It's used during the writing (updating) of a file already in a zip
   file; by default: >
   	let g:zip_zipcmd= "zip"
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:zip_zipcmd}
@vindex g:zip_zipcmd
"zip" として使用するプログラムを指定します。これは zip ファイルを保存する (更新する) ときに使用されます。初期設定:
@example
let g:zip_zipcmd= "zip"
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
							*g:zip_extractcmd*
   This option specifies the program (and any options needed) used to
   extract a file from a zip archive.  By default, >
   	let g:zip_extractcmd= g:zip_unzipcmd
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:zip_extractcmd}
@vindex g:zip_extractcmd
このオプションは zip アーカイブからファイルを解凍する為のプログラム (とそれに必要なオプション) を指定します。初期設定:
@example
let g:zip_extractcmd= g:zip_unzipcmd
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
   PREVENTING LOADING~
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec ロードの無効化
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
   If for some reason you do not wish to use vim to examine zipped files,
   you may put the following two variables into your <.vimrc> to prevent
   the zip plugin from loading: >

	let g:loaded_zipPlugin= 1
	let g:loaded_zip      = 1
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
もしなんらかの理由で vim で zip ファイルを開きたくない場合は、次の 2 つの変数を <.vimrc> で設定すると、zip プラグインのロードを無効化できます:
@example
let g:loaded_zipPlugin= 1
let g:loaded_zip      = 1
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
3. Additional Extensions					*zip-extension*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{zip-extension}
@cindex zip-extension
@section 3. zip 以外の拡張子
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
   Apparently there are a number of archivers which generate zip files that
   don't use the .zip extension (.jar, .xpi, etc).  To handle such files,
   place a line in your <.vimrc> file: >

	au BufReadCmd *.jar,*.xpi call zip#Browse(expand("<amatch>"))
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
zip ファイルを zip 以外の拡張子 (.jar や .xpi など) で生成するアーカイバがあります。そのようなファイルを扱いたい場合は、<.vimrc> ファイルに次のような行を追加してください:
@example
au BufReadCmd *.jar,*.xpi call zip#Browse(expand("<amatch>"))
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
   One can simply extend this line to accommodate additional extensions that
   should be treated as zip files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
この行に拡張子を追加していけば対応する拡張子を増やすことができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
   Alternatively, one may change *g:zipPlugin_ext* in one's .vimrc.
   Currently (11/30/15) it holds: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:zipPlugin_ext}
@vindex g:zipPlugin_ext
代わりに .vimrc で |@ref{g:zipPlugin_ext}| を使って変更する方法もあります。現時点 (11/30/15) 以下が含まれる:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	let g:zipPlugin_ext= '*.zip,*.jar,*.xpi,*.ja,*.war,*.ear,*.celzip,
       \ *.oxt,*.kmz,*.wsz,*.xap,*.docx,*.docm,*.dotx,*.dotm,*.potx,*.potm,
       \ *.ppsx,*.ppsm,*.pptx,*.pptm,*.ppam,*.sldx,*.thmx,*.xlam,*.xlsx,*.xlsm,
       \ *.xlsb,*.xltx,*.xltm,*.xlam,*.crtx,*.vdw,*.glox,*.gcsx,*.gqsx,*.epub'
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
let g:zipPlugin_ext= '*.zip,*.jar,*.xpi,*.ja,*.war,*.ear,*.celzip,
\ *.oxt,*.kmz,*.wsz,*.xap,*.docx,*.docm,*.dotx,*.dotm,*.potx,*.potm,
\ *.ppsx,*.ppsm,*.pptx,*.pptm,*.ppam,*.sldx,*.thmx,*.xlam,*.xlsx,*.xlsm,
\ *.xlsb,*.xltx,*.xltm,*.xlam,*.crtx,*.vdw,*.glox,*.gcsx,*.gqsx,*.epub'
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
4. History							*zip-history* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{zip-history}
@cindex zip-history
@section 4. 開発履歴
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
   v28 Oct 08, 2014 * changed the sanity checks for executables to reflect
   		      the command actually to be attempted in zip#Read()
		      and zip#Write()
		    * added the extraction of a file capability
       Nov 30, 2015 * added *.epub to the |g:zipPlugin_ext| list
       Sep 13, 2016 * added *.apk to the |g:zipPlugin_ext| list and
		      sorted the suffices.
   v27 Jul 02, 2013 * sanity check: zipfile must have "PK" as its first
		      two bytes.
		    * modified to allow zipfile: entries in quickfix lists
   v26 Nov 15, 2012 * (Jason Spiro) provided a lot of new extensions that
		      are synonyms for .zip
   v25 Jun 27, 2011 * using keepj with unzip -Z
		      (consistent with the -p variant)
		    * (Ben Staniford) now uses
			has("win32unix") && executable("cygpath")
		      before converting to cygwin-style paths
   v24 Jun 21, 2010 * (Cédric Bosdonnat) unzip seems to need its filenames
		      fnameescape'd as well as shellquote'd
		    * (Motoya Kurotsu) inserted keepj before 0d to protect
		      jump list
   v17 May 09, 2008 * arno caught a security bug
   v15 Sep 07, 2007 * &shq now used if not the empty string for g:zip_shq
   v14 May 07, 2007 * using b:zipfile instead of w:zipfile to avoid problem
                      when editing alternate file to bring up a zipfile
   v10 May 02, 2006 * now using "redraw then echo" to show messages, instead
                      of "echo and prompt user"
		    * g:zip_shq provided to allow for quoting control for the
		      command being passed via :r! ... commands.
   v8 Apr 10, 2006 * Bram Moolenaar reported that he received an error message
                     due to "Pattern not found: ^.*\%0c"; this was caused by
		     stridx finding a Name... at the beginning of the line;
		     zip.vim tried 4,$s/^.*\%0c//, but that doesn't work.
		     Fixed.
   v7 Mar 22, 2006 * escaped some characters that can cause filename handling
                     problems.
   v6 Dec 21, 2005 * writing to files not in directories caused problems -
                     fixed (pointed out by Christian Robinson)
   v5 Nov 22, 2005 * report option workaround installed
   v3 Oct 18, 2005 * <amatch> used instead of <afile> in autocmds
   v2 Sep 16, 2005 * silenced some commands (avoiding hit-enter prompt)
                   * began testing under Windows; works thus far
		   * filetype detection fixed
      Nov 03, 2005 * handles writing zipfiles across a network using
                     netrw#NetWrite()
   v1 Sep 15, 2005 * Initial release, had browsing, reading, and writing
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
v28 Oct 08, 2014 * changed the sanity checks for executables to reflect
                   the command actually to be attempted in zip#Read()
                   and zip#Write()
                 * added the extraction of a file capability
    Nov 30, 2015 * added *.epub to the |g:zipPlugin_ext| list
    Sep 13, 2016 * added *.apk to the |g:zipPlugin_ext| list and
                   sorted the suffices.
v27 Jul 02, 2013 * sanity check: zipfile must have "PK" as its first
                   two bytes.
                 * modified to allow zipfile: entries in quickfix lists
v26 Nov 15, 2012 * (Jason Spiro) provided a lot of new extensions that
                   are synonyms for .zip
v25 Jun 27, 2011 * using keepj with unzip -Z
                   (consistent with the -p variant)
                 * (Ben Staniford) now uses
                     has("win32unix") && executable("cygpath")
                   before converting to cygwin-style paths
v24 Jun 21, 2010 * (Cédric Bosdonnat) unzip seems to need its filenames
                   fnameescape'd as well as shellquote'd
                 * (Motoya Kurotsu) inserted keepj before 0d to protect
                   jump list
v17 May 09, 2008 * arno caught a security bug
v15 Sep 07, 2007 * &shq now used if not the empty string for g:zip_shq
v14 May 07, 2007 * using b:zipfile instead of w:zipfile to avoid problem
                   when editing alternate file to bring up a zipfile
v10 May 02, 2006 * now using "redraw then echo" to show messages, instead
                   of "echo and prompt user"
                 * g:zip_shq provided to allow for quoting control for the
                   command being passed via :r! ... commands.
v8 Apr 10, 2006 * Bram Moolenaar reported that he received an error message
                  due to "Pattern not found: ^.*\%0c"; this was caused by
                  stridx finding a Name... at the beginning of the line;
                  zip.vim tried 4,$s/^.*\%0c//, but that doesn't work.
                  Fixed.
v7 Mar 22, 2006 * escaped some characters that can cause filename handling
                  problems.
v6 Dec 21, 2005 * writing to files not in directories caused problems -
                  fixed (pointed out by Christian Robinson)
v5 Nov 22, 2005 * report option workaround installed
v3 Oct 18, 2005 * <amatch> used instead of <afile> in autocmds
v2 Sep 16, 2005 * silenced some commands (avoiding hit-enter prompt)
                * began testing under Windows; works thus far
                * filetype detection fixed
   Nov 03, 2005 * handles writing zipfiles across a network using
                  netrw#NetWrite()
v1 Sep 15, 2005 * Initial release, had browsing, reading, and writing
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
vim:tw=78:ts=8:noet:ft=help:fdm=marker
@end ifset
