@ifset JA  @c ----------- v -----------  JA  -*- tab-width: 8 -*-
@node quickref.txt, , , 目次
@unnumbered クイックリファレンスガイド
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
*quickref.txt*  For Vim version 8.0.  Last change: 2017 Sep 10


		  VIM REFERENCE MANUAL    by Bram Moolenaar

			    Quick reference guide
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
*quickref.txt*  For Vim バージョン 8.0.  Last change: 2017 Sep 10


		  VIMリファレンスマニュアル    by Bram Moolenaar

			    Quick reference guide
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
							 *quickref* *Contents*
 tag	  subject			 tag	  subject	~
|Q_ct|	list of help files		|Q_re|	Repeating commands
|Q_lr|	motion: Left-right		|Q_km|	Key mapping
|Q_ud|	motion: Up-down			|Q_ab|	Abbreviations
|Q_tm|	motion: Text object		|Q_op|	Options
|Q_pa|	motion: Pattern searches	|Q_ur|	Undo/Redo commands
|Q_ma|	motion: Marks			|Q_et|	External commands
|Q_vm|	motion: Various			|Q_qf|	Quickfix commands
|Q_ta|	motion: Using tags		|Q_vc|	Various commands
|Q_sc|	Scrolling			|Q_ce|	Ex: Command-line editing
|Q_in|	insert: Inserting text		|Q_ra|	Ex: Ranges
|Q_ai|	insert: Keys			|Q_ex|	Ex: Special characters
|Q_ss|	insert: Special keys		|Q_st|	Starting Vim
|Q_di|	insert: Digraphs		|Q_ed|	Editing a file
|Q_si|	insert: Special inserts		|Q_fl|	Using the argument list
|Q_de|	change: Deleting text		|Q_wq|	Writing and quitting
|Q_cm|	change: Copying and moving	|Q_ac|	Automatic commands
|Q_ch|	change: Changing text		|Q_wi|	Multi-window commands
|Q_co|	change: Complex			|Q_bu|	Buffer list commands
|Q_vi|	Visual mode			|Q_sy|	Syntax highlighting
|Q_to|	Text objects			|Q_gu|	GUI commands
					|Q_fo|	Folding
@end ifset

@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{quickref}
@anchor{Contents}
@cindex quickref
@cindex Contents
@multitable @columnfractions .12 .38 .12 .38
@headitem tag @tab subject @tab tag @tab subject
@item |@ref{Q_ct, , Q_ct}| @tab ヘルプファイルの一覧 @tab |@ref{Q_re, , Q_re}| @tab 繰り返しコマンド
@item |@ref{Q_lr, , Q_lr}| @tab 移動: 左右 @tab |@ref{Q_km, , Q_km}| @tab キーマップ
@item |@ref{Q_ud, , Q_ud}| @tab 移動: 上下 @tab |@ref{Q_ab, , Q_ab}| @tab 短縮入力
@item |@ref{Q_tm, , Q_tm}| @tab 移動: 文脈 @tab |@ref{Q_op, , Q_op}| @tab オプション
@item |@ref{Q_pa, , Q_pa}| @tab 移動: パターン検索 @tab |@ref{Q_ur, , Q_ur}| @tab Undo/Redoコマンド
@item |@ref{Q_ma, , Q_ma}| @tab 移動: マーク @tab |@ref{Q_et, , Q_et}| @tab 外部コマンド
@item |@ref{Q_vm, , Q_vm}| @tab 移動: 雑多 @tab |@ref{Q_qf, , Q_qf}| @tab Quickfixコマンド
@item |@ref{Q_ta, , Q_ta}| @tab 移動: タグの利用 @tab |@ref{Q_vc, , Q_vc}| @tab その他の雑多なコマンド
@item |@ref{Q_sc, , Q_sc}| @tab スクロール @tab |@ref{Q_ce, , Q_ce}| @tab Exモード: コマンド行編集
@item |@ref{Q_in, , Q_in}| @tab 挿入: 文字列の挿入 @tab |@ref{Q_ra, , Q_ra}| @tab Exモード: 範囲指定
@item |@ref{Q_ai, , Q_ai}| @tab 挿入: キー @tab |@ref{Q_ex, , Q_ex}| @tab Exモード: 特殊文字
@item |@ref{Q_ss, , Q_ss}| @tab 挿入: 特殊キー @tab |@ref{Q_st, , Q_st}| @tab Vim の起動方法
@item |@ref{Q_di, , Q_di}| @tab 挿入: ダイグラフ @tab |@ref{Q_ed, , Q_ed}| @tab ファイル編集
@item |@ref{Q_si, , Q_si}| @tab 挿入: 特殊な挿入 @tab |@ref{Q_fl, , Q_fl}| @tab 引数リストの使い方
@item |@ref{Q_de, , Q_de}| @tab 変更: 文字の削除 @tab |@ref{Q_wq, , Q_wq}| @tab 書き出しと終了
@item |@ref{Q_cm, , Q_cm}| @tab 変更: コピーと移動 @tab |@ref{Q_ac, , Q_ac}| @tab 自動コマンド
@item |@ref{Q_ch, , Q_ch}| @tab 変更: 文字列の変更 @tab |@ref{Q_wi, , Q_wi}| @tab 複数ウィンドウのコマンド
@item |@ref{Q_co, , Q_co}| @tab 変更: 複雑な変更 @tab |@ref{Q_bu, , Q_bu}| @tab バッファ一覧コマンド
@item |@ref{Q_vi, , Q_vi}| @tab ビジュアルモード @tab |@ref{Q_sy, , Q_sy}| @tab シンタックスハイライト
@item |@ref{Q_to, , Q_to}| @tab テキストオブジェクト @tab |@ref{Q_gu, , Q_gu}| @tab GUIコマンド
@item @tab @tab |@ref{Q_fo, , Q_fo}| @tab 折り畳みコマンド
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
------------------------------------------------------------------------------
N is used to indicate an optional count that can be given before the command.
------------------------------------------------------------------------------
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
以下の説明中の N はコマンドの直前に回数指定ができることを示す。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
*Q_lr*		Left-right motions

|h|	N  h		left (also: CTRL-H, <BS>, or <Left> key)
|l|	N  l		right (also: <Space> or <Right> key)
|0|	   0		to first character in the line (also: <Home> key)
|^|	   ^		to first non-blank character in the line
|$|	N  $		to the last character in the line (N-1 lines lower)
			   (also: <End> key)
|g0|	   g0		to first character in screen line (differs from "0"
			   when lines wrap)
|g^|	   g^		to first non-blank character in screen line (differs
			   from "^" when lines wrap)
|g$|	N  g$		to last character in screen line (differs from "$"
			   when lines wrap)
|gm|	   gm		to middle of the screen line
|bar|	N  |		to column N (default: 1)
|f|	N  f{char}	to the Nth occurrence of {char} to the right
|F|	N  F{char}	to the Nth occurrence of {char} to the left
|t|	N  t{char}	till before the Nth occurrence of {char} to the right
|T|	N  T{char}	till before the Nth occurrence of {char} to the left
|;|	N  ;		repeat the last "f", "F", "t", or "T" N times
|,|	N  ,		repeat the last "f", "F", "t", or "T" N times in
			   opposite direction
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_lr}
@cindex Q_lr
@unnumberedsec 左右の移動

@multitable @columnfractions .1 .1 .2 .6
@item |h| @tab N @tab h @tab 左に N 桁移動 (@kbd{CTRL-H}、@key{<BS>}、@key{<Left>} キーでも同じ)
@item |l| @tab N @tab l @tab 右に N 桁移動 (@key{<Space>}、@key{<Right>} キーでも同じ)
@item |0| @tab @tab 0 @tab 行の先頭に移動 (@key{<Home>} キーでも同じ)
@item |^| @tab @tab ^ @tab 行の先頭(但し空白文字類以外)に移動
@item |$| @tab N @tab $ @tab 行の末尾に移動。(N-1 行、下に移動)(@key{<End>} キーでも同じ)
@item |g0| @tab @tab g0 @tab 画面上の行の先頭に移動。(複数行にまたがる時の動きが "0" と違う)
@item |g^| @tab @tab g^ @tab 画面上の行の先頭(但し空白文字類以外)に移動。(複数行にまたがる時の動きが "^" と違う)
@item |g$| @tab N @tab g$ @tab 行の末尾に移動。(複数行にまたがる時の動きが "$" と違う)
@item |gm| @tab @tab gm @tab 現在行の中央(端末の横幅の半分の桁位置)に移動
@item |bar| @tab N @tab | @tab N 桁目に移動。(デフォルトは 1)
@item |f| @tab N @tab f@{char@} @tab 現在位置から右方向にある N 個目の @{char@} に移動
@item |F| @tab N @tab F@{char@} @tab 現在位置から左方向にある N 個目の @{char@} に移動
@item |t| @tab N @tab t@{char@} @tab 現在位置から右方向にある N 個目の @{char@} の左側に移動
@item |T| @tab N @tab T@{char@} @tab 現在位置から左方向にある N 個目の @{char@} の右側に移動
@item |;| @tab N @tab ; @tab 直前の "f", "F", "t", "T" を N 回繰り返す。
@item |,| @tab N @tab , @tab 直前の "f", "F", "t", "T" を逆方向に N 回繰り返す。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_ud*		Up-down motions

|k|	N  k		up N lines (also: CTRL-P and <Up>)
|j|	N  j		down N lines (also: CTRL-J, CTRL-N, <NL>, and <Down>)
|-|	N  -		up N lines, on the first non-blank character
|+|	N  +		down N lines, on the first non-blank character (also:
			   CTRL-M and <CR>)
|_|	N  _		down N-1 lines, on the first non-blank character
|G|	N  G		goto line N (default: last line), on the first
			   non-blank character
|gg|	N  gg		goto line N (default: first line), on the first
			   non-blank character
|N%|	N  %		goto line N percentage down in the file; N must be
			   given, otherwise it is the |%| command
|gk|	N  gk		up N screen lines (differs from "k" when line wraps)
|gj|	N  gj		down N screen lines (differs from "j" when line wraps)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_ud}
@cindex Q_ud
@unnumberedsec 上下の移動

@multitable @columnfractions .1 .1 .2 .6
@item |k| @tab N @tab k @tab 上に N 行移動 (@kbd{CTRL-P}、@key{<Up>} キーでも同じ)
@item |j| @tab N @tab j @tab 下に N 行移動 (@kbd{CTRL-J}、@kbd{CTRL-N}、@key{<NL>}、@key{<Down>} でも同じ)
@item |-| @tab N @tab - @tab 上に N 行移動し、行頭の非空白文字に移動
@item |+| @tab N @tab + @tab 下に N 行移動し、行頭の非空白文字に移動(@kbd{CTRL-M}、@key{<CR>} キーでも同じ)
@item |_| @tab N @tab _ @tab 下に N-1 行移動し、行頭の非空白文字に移動
@item |G| @tab N @tab G @tab N 行目(デフォルトは最後の行)に移動し、行頭の非空白文字に移動
@item |gg| @tab N @tab gg @tab N 行目(デフォルトは 1 行目)に移動し、行頭の非空白文字に移動
@item |N%| @tab N @tab % @tab ファイルの N パーセント目に移動。このコマンドは N の指定が必須。無指定の場合は|%|コマンド扱い。
@item |gk| @tab N @tab gk @tab 画面上で N 行上に移動。(複数行にまたがる行がある場合の動きが "k" と異なる)
@item |gj| @tab N @tab gj @tab 画面上で N 行下に移動。(複数行にまたがる行がある場合の動きが "j" と異なる)
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_tm*		Text object motions

|w|	N  w		N words forward
|W|	N  W		N blank-separated |WORD|s forward
|e|	N  e		forward to the end of the Nth word
|E|	N  E		forward to the end of the Nth blank-separated |WORD|
|b|	N  b		N words backward
|B|	N  B		N blank-separated |WORD|s backward
|ge|	N  ge		backward to the end of the Nth word
|gE|	N  gE		backward to the end of the Nth blank-separated |WORD|

|)|	N  )		N sentences forward
|(|	N  (		N sentences backward
|}|	N  }		N paragraphs forward
|{|	N  {		N paragraphs backward
|]]|	N  ]]		N sections forward, at start of section
|[[|	N  [[		N sections backward, at start of section
|][|	N  ][		N sections forward, at end of section
|[]|	N  []		N sections backward, at end of section
|[(|	N  [(		N times back to unclosed '('
|[{|	N  [{		N times back to unclosed '{'
|[m|	N  [m		N times back to start of method (for Java)
|[M|	N  [M		N times back to end of method (for Java)
|])|	N  ])		N times forward to unclosed ')'
|]}|	N  ]}		N times forward to unclosed '}'
|]m|	N  ]m		N times forward to start of method (for Java)
|]M|	N  ]M		N times forward to end of method (for Java)
|[#|	N  [#		N times back to unclosed "#if" or "#else"
|]#|	N  ]#		N times forward to unclosed "#else" or "#endif"
|[star|	N  [*		N times back to start of comment "/*"
|]star|	N  ]*		N times forward to end of comment "*/"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_tm}
@cindex Q_tm
@unnumberedsec テキスト文脈単位の移動

@multitable @columnfractions .1 .1 .2 .6
@item |w| @tab N @tab w @tab N 個目の単語分、先に進む
@item |W| @tab N @tab W @tab 空白で区切られた単語(=|WORD|) N 個分、先に進む
@item |e| @tab N @tab e @tab N 個目の単語のお尻まで進む
@item |E| @tab N @tab E @tab 空白で区切られた単語(=|WORD|) N 個目のお尻まで進む
@item |b| @tab N @tab b @tab N 個目の単語分、前に戻る
@item |B| @tab N @tab B @tab 空白で区切られた単語(=|WORD|) N 個分、前に戻る
@item |ge| @tab N @tab ge @tab N 個目の単語のお尻まで戻る
@item |gE| @tab N @tab gE @tab 空白で区切られた単語(=|WORD|) N 個目のお尻まで戻る
@end multitable

@multitable @columnfractions .1 .1 .2 .6
@item |)| @tab N @tab ) @tab N センテンス(文)分、先に進む
@item |(| @tab N @tab ( @tab N センテンス分、前に戻る
@item |@}| @tab N @tab @} @tab N パラグラフ(段落)分、先に進む
@item |@{| @tab N @tab @{ @tab N パラグラフ分、前に戻る
@item |]]| @tab N @tab ]] @tab N セクション(章)分、先に進み、その先頭に移動
@item |[[| @tab N @tab [[ @tab N セクション(章)分、前に戻り、その先頭に移動
@item |][| @tab N @tab ][ @tab N セクション(章)分、先に進み、その末尾に移動
@item |[]| @tab N @tab [] @tab N セクション(章)分、前に戻り、その末尾に移動
@item |[(| @tab N @tab [( @tab N 個目の呼応していない '(' まで戻る
@item |[@{| @tab N @tab [@{ @tab N 個目の呼応していない '@{' まで戻る
@item |[m| @tab N @tab [m @tab N 個前のメソッドの先頭まで戻る(Java用)
@item |[M| @tab N @tab [M @tab N 個前のメソッドの末尾まで戻る(Java用)
@item |])| @tab N @tab ]) @tab N 個目の呼応していない ')' まで進む
@item |]@}| @tab N @tab ]@} @tab N 個目の呼応していない '@}' まで進む
@item |]m| @tab N @tab ]m @tab N 個先のメソッドの先頭まで進む(Java用)
@item |]M| @tab N @tab ]M @tab N 個先のメソッドの末尾まで進む(Java用)
@item |[#| @tab N @tab [# @tab N 個目の呼応していない "#if" や "#else" まで戻る
@item |]#| @tab N @tab ]# @tab N 個目の呼応していない "#else" や "#endif" まで進む
@item |[star| @tab N @tab [* @tab N 個前のコメントの先頭まで戻る
@item |]star| @tab N @tab ]* @tab N 個先のコメントの末尾まで進む
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_pa*		Pattern searches

|/|	N  /{pattern}[/[offset]]<CR>
			search forward for the Nth occurrence of {pattern}
|?|	N  ?{pattern}[?[offset]]<CR>
			search backward for the Nth occurrence of {pattern}
|/<CR>|	N  /<CR>	repeat last search, in the forward direction
|?<CR>|	N  ?<CR>	repeat last search, in the backward direction
|n|	N  n		repeat last search
|N|	N  N		repeat last search, in opposite direction
|star|	N  *		search forward for the identifier under the cursor
|#|	N  #		search backward for the identifier under the cursor
|gstar|	N  g*		like "*", but also find partial matches
|g#|	N  g#		like "#", but also find partial matches
|gd|	   gd		goto local declaration of identifier under the cursor
|gD|	   gD		goto global declaration of identifier under the cursor

|pattern|		Special characters in search patterns

			meaning		      magic   nomagic	~
		matches any single character	.	\.
		       matches start of line	^	^
			       matches <EOL>	$	$
		       matches start of word	\<	\<
			 matches end of word	\>	\>
	matches a single char from the range	[a-z]	\[a-z]
      matches a single char not in the range	[^a-z]	\[^a-z]
		  matches an identifier char	\i	\i
		   idem but excluding digits	\I	\I
		 matches a keyword character	\k	\k
		   idem but excluding digits	\K	\K
	       matches a file name character	\f	\f
		   idem but excluding digits	\F	\F
	       matches a printable character	\p	\p
		   idem but excluding digits	\P	\P
	     matches a white space character	\s	\s
	 matches a non-white space character	\S	\S

			       matches <Esc>	\e	\e
			       matches <Tab>	\t	\t
				matches <CR>	\r	\r
				matches <BS>	\b	\b

     matches 0 or more of the preceding atom	*	\*
     matches 1 or more of the preceding atom	\+	\+
	matches 0 or 1 of the preceding atom	\=	\=
	matches 2 to 5 of the preceding atom	\{2,5}  \{2,5}
		  separates two alternatives	\|	\|
		group a pattern into an atom	\(\)	\(\)

|search-offset|		Offsets allowed after search command

    [num]	[num] lines downwards, in column 1
    +[num]	[num] lines downwards, in column 1
    -[num]	[num] lines upwards, in column 1
    e[+num]	[num] characters to the right of the end of the match
    e[-num]	[num] characters to the left of the end of the match
    s[+num]	[num] characters to the right of the start of the match
    s[-num]	[num] characters to the left of the start of the match
    b[+num]	[num] identical to s[+num] above (mnemonic: begin)
    b[-num]	[num] identical to s[-num] above (mnemonic: begin)
    ;{search-command}	execute {search-command} next
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_pa}
@cindex Q_pa
@unnumberedsec パターン検索

@multitable @columnfractions .1 .1 .2 .6
@item |/| @tab N @tab /@{pattern@} [/[offset]]@key{<CR>} @tab N 回目の @{pattern@} を含む個所を下方向に検索
@item |?| @tab N @tab ?@{pattern@} [?[offset]]@key{<CR>} @tab N 回目の @{pattern@} を含む個所を上方向に検索
@item |/<CR>| @tab N @tab  @tab /@key{<CR>}	直前と同じ条件の検索を下方向に対して実施
@item |?<CR>| @tab N @tab  @tab ?@key{<CR>}	直前と同じ条件の検索を上方向に対して実施
@item |n| @tab N @tab n @tab 直前の検索を再実行
@item |N| @tab N @tab N @tab 直前の検索を逆方向に再実行
@item |star| @tab N @tab * @tab カーソル位置にある単語を下方向に検索
@item |#| @tab N @tab # @tab カーソル位置にある単語を上方向に検索
@item |gstar| @tab N @tab g* @tab "*" と同じだが、部分的な一致を検索
@item |g#| @tab N @tab g# @tab "#" と同じだが、部分的な一致を検索
@item |gd| @tab  @tab gd @tab カーソル位置の識別子のローカル宣言に移動
@item |gD| @tab  @tab gD @tab カーソル位置の識別子のグローバル宣言に移動
@end multitable

@unnumberedsubsec 検索パターンでの特殊文字の扱い |pattern|

@multitable @columnfractions .6 .2 .2
@item meaning @tab magic @tab nomagic
@item 任意の 1 文字に一致  @tab . @tab \.
@item 行頭に一致 @tab ^ @tab ^
@item <EOL> に一致 @tab $ @tab $
@item 単語の先頭に一致 @tab \< @tab \<
@item 単語の末尾に一致 @tab \> @tab \>
@item 指定の範囲の 1 文字に一致 @tab [a-z] @tab \[a-z]
@item 指定の範囲にない 1 文字に一致 @tab [^a-z] @tab \[^a-z]
@item 識別子の文字に一致 @tab \i @tab \i
@item 上の条件から数字を除いたもの @tab \I @tab \I
@item キーワード文字に一致 @tab \k @tab \k
@item 上の条件から数字を除いたもの @tab \K @tab \K
@item ファイル名(で使える)文字に一致 @tab \f @tab \f
@item 上の条件から数字を除いたもの @tab \F @tab \F
@item 表示可能文字に一致 @tab \p @tab \p
@item 上の条件から数字を除いたもの @tab \P @tab \P
@item 空白文字類に一致 @tab \s @tab \s
@item 空白文字類以外に一致 @tab \S @tab \S
@item
@item @key{<Esc>} に一致 @tab \e @tab \e
@item @key{<Tab>} に一致 @tab \t @tab \t
@item @key{<CR>} に一致 @tab \r @tab \r
@item @key{<BS>} に一致 @tab \b @tab \b
@item
@item 直前に指定した atom と 0 回以上一致 @tab * @tab \*
@item 直前に指定した atom と 1 回以上一致 @tab \+ @tab \+
@item 直前に指定した文字と 0 回もしくは 1 回一致 @tab \= @tab \=
@item 直前に指定した文字と 2 回〜 5 回一致 @tab \@{2,5@} @tab \@{2,5@}
@item 2 種類の正規表現を列記 @tab \| @tab \|
@item パターンをグループ化して atom とする @tab \(\) @tab \(\)
@end multitable

@unnumberedsubsec 検索パターンでのオフセット指定 |search-offset|

@multitable @columnfractions .3 .7
@item [num] @tab [num] 行下の 1 桁目
@item +[num] @tab [num] 行下の 1 桁目
@item -[num] @tab [num] 行上の 1 桁目
@item e[+num] @tab 一致した文字列の最後から [num] 桁右
@item e[-num] @tab 一致した文字列の最後から [num] 桁左
@item s[+num] @tab 一致した文字列の先頭から [num] 桁右
@item s[-num] @tab 一致した文字列の先頭から [num] 桁左
@item b[+num] @tab 上の s[+num] の別名 (begin の b)
@item b[-num] @tab 上の s[-num] の別名 (begin の b)
@item ;@{search-command@} @tab 次の @{search-command@} を実行する。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_ma*		Marks and motions

|m|        m{a-zA-Z}	mark current position with mark {a-zA-Z}
|`a|       `{a-z}	go to mark {a-z} within current file
|`A|       `{A-Z}	go to mark {A-Z} in any file
|`0|       `{0-9}	go to the position where Vim was previously exited
|``|       ``		go to the position before the last jump
|`quote|   `"		go to the position when last editing this file
|`[|       `[		go to the start of the previously operated or put text
|`]|       `]		go to the end of the previously operated or put text
|`<|       `<		go to the start of the (previous) Visual area
|`>|       `>		go to the end of the (previous) Visual area
|`.|       `.		go to the position of the last change in this file
|'|        '{a-zA-Z0-9[]'"<>.}
			same as `, but on the first non-blank in the line
|:marks|  :marks	print the active marks
|CTRL-O|  N  CTRL-O	go to Nth older position in jump list
|CTRL-I|  N  CTRL-I	go to Nth newer position in jump list
|:ju|     :ju[mps]	print the jump list
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_ma}
@cindex Q_ma
@unnumberedsec マークと移動

@multitable @columnfractions .2 .3 .5
@item |m| @tab m@{a-zA-Z@} @tab 現在の場所を @{a-zA-Z@} としてマーク
@item |`a| @tab `@{a-z@} @tab 編集中のファイルのマーク @{a-z@} に移動
@item |`A| @tab `@{A-Z@} @tab 任意のファイルのマーク @{A-Z@} に移動
@item |`0| @tab `@{0-9@} @tab Vim が前回終了した時の場所に移動
@item |``| @tab `` @tab 直前のジャンプコマンドの前の場所に移動
@item |`quote| @tab `" @tab 前回このファイルを編集した時の場所に移動
@item |`[| @tab `[ @tab 直前に繰作もしくはプットした文字列の先頭に移動
@item |`]| @tab `] @tab 直前に繰作もしくはプットした文字列の末尾に移動
@item |`<| @tab `< @tab (直前の)ビジュアルエリアの先頭に移動
@item |`>| @tab `> @tab (直前の)ビジュアルエリアの末尾に移動
@item |`.| @tab `. @tab このファイルで最後に変更した場所に移動
@item |'| @tab '@{a-zA-Z0-9[]'"<>.@} @tab ` と同じだが、その行の先頭の非空白文字まで移動する点が異なる。
@item |:marks| @tab :marks @tab 現在設定されているマークを一覧表示
@item |CTRL-O| @tab N @kbd{CTRL-O} @tab ジャンプリストの N 番目に古い場所に移動
@item |CTRL-I| @tab N @kbd{CTRL-I} @tab ジャンプリストの N 番目に新しい場所に移動
@item |:ju| @tab :ju[mps] @tab ジャンプリストを一覧表示
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_vm*		Various motions

|%|	   %		find the next brace, bracket, comment, or "#if"/
			   "#else"/"#endif" in this line and go to its match
|H|	N  H		go to the Nth line in the window, on the first
			   non-blank
|M|	   M		go to the middle line in the window, on the first
			   non-blank
|L|	N  L		go to the Nth line from the bottom, on the first
			   non-blank

|go|	N  go			go to Nth byte in the buffer
|:go|	:[range]go[to] [off]	go to [off] byte in the buffer
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_vm}
@cindex Q_vm
@unnumberedsec 雑多な移動コマンド

@multitable @columnfractions .1 .2 .1 .6
@item |%| @tab @tab % @tab 呼応するカッコ類 ( "(", "[", "@{" ) や、コメント "#if"/"#else"/"#endif" のペアを検索して移動
@item |H| @tab N @tab H @tab 画面上で N 行目の最初の非空白文字に移動
@item |M| @tab @tab M @tab 画面上の真ん中の行の最初の非空白文字に移動
@item |L| @tab N @tab L @tab 画面上で下から N 行目の最初の非空白文字に移動
@item
@item |go| @tab N @tab go @tab 現バッファの N バイト目に移動
@item |:go| @tab :[range]go[to] @tab [off] @tab 現バッファの [off] バイト目に移動
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_ta*		Using tags

|:ta|      :ta[g][!] {tag}	jump to tag {tag}
|:ta|      :[count]ta[g][!]	jump to [count]'th newer tag in tag list
|CTRL-]|      CTRL-]		jump to the tag under cursor, unless changes
				   have been made
|:ts|      :ts[elect][!] [tag]	list matching tags and select one to jump to
|:tjump|   :tj[ump][!] [tag]	jump to tag [tag] or select from list when
				   there are multiple matches
|:ltag|    :lt[ag][!] [tag]	jump to tag [tag] and add matching tags to the
				   location list

|:tags|    :tags		print tag list
|CTRL-T|   N  CTRL-T		jump back from Nth older tag in tag list
|:po|      :[count]po[p][!]	jump back from [count]'th older tag in tag list
|:tnext|   :[count]tn[ext][!]	jump to [count]'th next matching tag
|:tp|      :[count]tp[revious][!] jump to [count]'th previous matching tag
|:tr|      :[count]tr[ewind][!]	jump to [count]'th matching tag
|:tl|      :tl[ast][!]		jump to last matching tag

|:ptag|    :pt[ag] {tag}	open a preview window to show tag {tag}
|CTRL-W_}|    CTRL-W }		like CTRL-] but show tag in preview window
|:pts|     :pts[elect]		like ":tselect" but show tag in preview window
|:ptjump|  :ptj[ump]		like ":tjump" but show tag in preview window
|:pclose|  :pc[lose]		close tag preview window
|CTRL-W_z|    CTRL-W z		close tag preview window
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_ta}
@cindex Q_ta
@unnumberedsec タグの利用

@multitable @columnfractions .2 .3 .5
@item |:ta| @tab :ta[g][!] @{tag@} @tab @{tag@} で指定したタグにジャンプ
@item |:ta| @tab :[count]ta[g][!] @tab タグリストの [count] 番目に新しいタグにジャンプ
@item |CTRL-]| @tab @kbd{CTRL-]} @tab 変更がされていない限り、カーソル位置にあるタグにジャンプ
@item |:ts| @tab :ts[elect][!] [tag] @tab タグに合致する一覧を表示し、ジャンプ先を選択
@item |:tjump| @tab :tj[ump][!] [tag] @tab 指定のタグ [tag] にジャンプ。もし、合致するタグが複数ある時は一覧から選択
@item |:ltag| @tab :lt[ag][!] @tab [tag]	タグ [tag] にジャンプし、マッチしたタグをロケーションリストに加える。
@item |:tags| @tab :tags @tab タグリストを一覧表示
@item |CTRL-T| @tab N @kbd{CTRL-T} @tab タグリストの N 番目に古いタグにジャンプ
@item |:po| @tab :[count]po[p][!] @tab タグリストの [count] 番目に古いタグにジャンプ
@item |:tnext| @tab :[count]tn[ext][!] @tab [count] 個分、次のタグにジャンプ
@item |:tp| @tab :[count]tp[revious][!] @tab [count] 個分、前のタグにジャンプ
@item |:tr| @tab :[count]tr[ewind][!] @tab [count] 番目に一致するタグにジャンプ
@item |:tl| @tab :tl[ast][!] @tab 直前に一致したタグにジャンプ
@item 
@item |:ptag| @tab :pt[ag] @{tag@} @tab @{tag@}タグを見るためのプレビュー画面を開く
@item |CTRL-W_@}| @tab @kbd{CTRL-W} @} @tab @kbd{CTRL-]} と同様だがプレビュー画面にジャンプ
@item |:pts| @tab :pts[elect] @tab "@command{:tselect}" と同様だがプレビュー画面にジャンプ
@item |:ptjump| @tab :ptj[ump] @tab "@command{:tjump}" と同様だがプレビュー画面にジャンプ
@item |:pclose| @tab :pc[lose] @tab タグプレビュー画面を閉じる。
@item |CTRL-W_z| @tab @kbd{CTRL-W} z @tab タグプレビュー画面を閉じる。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_sc*		Scrolling

|CTRL-E|	N  CTRL-E	window N lines downwards (default: 1)
|CTRL-D|	N  CTRL-D	window N lines Downwards (default: 1/2 window)
|CTRL-F|	N  CTRL-F	window N pages Forwards (downwards)
|CTRL-Y|	N  CTRL-Y	window N lines upwards (default: 1)
|CTRL-U|	N  CTRL-U	window N lines Upwards (default: 1/2 window)
|CTRL-B|	N  CTRL-B	window N pages Backwards (upwards)
|z<CR>|		   z<CR> or zt	redraw, current line at top of window
|z.|		   z.	 or zz	redraw, current line at center of window
|z-|		   z-	 or zb	redraw, current line at bottom of window

These only work when 'wrap' is off:
|zh|		N  zh		scroll screen N characters to the right
|zl|		N  zl		scroll screen N characters to the left
|zH|		N  zH		scroll screen half a screenwidth to the right
|zL|		N  zL		scroll screen half a screenwidth to the left
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_sc}
@cindex Q_sc
@unnumberedsec スクロール

@multitable @columnfractions .2 .1 .2 .5
@item |CTRL-E| @tab N @tab @kbd{CTRL-E} @tab 画面を N 行下方向スクロール(デフォルトは 1)
@item |CTRL-D| @tab N @tab @kbd{CTRL-D} @tab 画面を N 行下方向スクロール(デフォルトは画面の半分)
@item |CTRL-F| @tab N @tab @kbd{CTRL-F} @tab 画面を N ページ分下方向スクロール
@item |CTRL-Y| @tab N @tab @kbd{CTRL-Y} @tab 画面を N 行分上方向スクロール(デフォルトは 1)
@item |CTRL-U| @tab N @tab @kbd{CTRL-U} @tab 画面を N 行分上方向スクロール(デフォルトは画面の半分)
@item |CTRL-B| @tab N @tab @kbd{CTRL-B} @tab 画面を N ページ分上方向スクロール
@item |z<CR>| @tab  @tab z@key{<CR>} or zt @tab 現在行を画面の 1 行目にして、再描画
@item |z.| @tab  @tab z. or zz @tab 現在行を画面の中央にして、再描画
@item |z-| @tab  @tab z- or zb @tab 現在行を画面の最下行にして、再描画
@end multitable

以下は '@option{wrap}' が off になっている時のみ有効である。
@multitable @columnfractions .2 .1 .2 .5
@item |zh| @tab N @tab zh @tab 画面を N 文字、右へスクロール
@item |zl| @tab N @tab zl @tab 画面を N 文字、左へスクロール
@item |zH| @tab N @tab zH @tab 画面桁数の半分だけ、右へスクロール
@item |zL| @tab N @tab zL @tab 画面桁数の半分だけ、左へスクロール
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_in*		Inserting text

|a|	N  a	append text after the cursor (N times)
|A|	N  A	append text at the end of the line (N times)
|i|	N  i	insert text before the cursor (N times) (also: <Insert>)
|I|	N  I	insert text before the first non-blank in the line (N times)
|gI|	N  gI	insert text in column 1 (N times)
|o|	N  o	open a new line below the current line, append text (N times)
|O|	N  O	open a new line above the current line, append text (N times)
|:startinsert|  :star[tinsert][!]  start Insert mode, append when [!] used
|:startreplace| :startr[eplace][!]  start Replace mode, at EOL when [!] used

in Visual block mode:
|v_b_I|	   I	insert the same text in front of all the selected lines
|v_b_A|	   A	append the same text after all the selected lines
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_in}
@cindex Q_in
@unnumberedsec 文字列の挿入

@multitable @columnfractions .2 .1 .2 .5
@item |a| @tab N @tab a @tab カーソル位置の後に文字列を(N回)追加
@item |A| @tab N @tab A @tab 現在行の末尾に文字列を(N回)追加
@item |i| @tab N @tab i @tab カーソル位置の前に文字列を(N回)追加(<Insert>も同様)
@item |I| @tab N @tab I @tab 現在行の最初の非空白文字の前に文字列を(N回)追加
@item |gI| @tab N @tab gI @tab 現在行の先頭に文字列を(N回)追加
@item |o| @tab N @tab o @tab 現在行の下に新たな行を追加し、文字列を(N回)追加する。
@item |O| @tab N @tab O @tab 現在行に新たな行を挿入し、文字列を(N回)追加する。
@end multitable

@multitable @columnfractions .2 .2 .6
@item |:startinsert| @tab :star[tinsert][!] @tab 挿入モードを開始する。[!]を指定すると追加モードとなる。
@item |:startreplace| @tab :startr[eplace][!] @tab 置換モードを開始する。[!]を指定すると行末から開始する。
@end multitable

ビジュアルモード用:
@multitable @columnfractions .2 .1 .7
@item |v_b_I| @tab I @tab 選択している全行の前に、同じ文字列を挿入する。
@item |v_b_A| @tab A @tab 選択している全行の後ろに、同じ文字列を挿入する。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_ai*		Insert mode keys

|insert-index|	alphabetical index of Insert mode commands

leaving Insert mode:
|i_<Esc>|	<Esc>		  end Insert mode, back to Normal mode
|i_CTRL-C|	CTRL-C		  like <Esc>, but do not use an abbreviation
|i_CTRL-O|	CTRL-O {command}  execute {command} and return to Insert mode

moving around:
|i_<Up>|	cursor keys	  move cursor left/right/up/down
|i_<S-Left>|	shift-left/right  one word left/right
|i_<S-Up>|	shift-up/down	  one screenful backward/forward
|i_<End>|	<End>		  cursor after last character in the line
|i_<Home>|	<Home>		  cursor to first character in the line
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_ai}
@cindex Q_ai
@unnumberedsec 挿入モードの扱い

@unnumberedsubsec 挿入モードのアルファベット順目次 |insert-index|

挿入モードの終了:
@multitable @columnfractions .2 .3 .5
@item |i_<Esc>| @tab @key{<Esc>} @tab 挿入モードを終わって、ノーマルモードへ復帰
@item |i_CTRL-C| @tab @kbd{CTRL-C} @tab @key{<Esc>}と同様。ただし、短縮形は展開しない
@item |i_CTRL-O| @tab @kbd{CTRL-O} @{command@} @tab @{command@} を実行し、挿入モードへ復帰
@end multitable

移動:
@multitable @columnfractions .3 .3 .4
@item |i_<Up>| @tab cursor keys @tab カーソルを上下左右に移動
@item |i_<S-Left>| @tab shift-left/right @tab 1 単語ごと左右に移動
@item |i_<S-Up>| @tab shift-up/down @tab  1画面ごと前後に移動
@item |i_<End>| @tab @key{<End>} @tab その行の最終桁に移動
@item |i_<Home>| @tab @key{<Home>} @tab その行の先頭桁に移動
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_ss*		Special keys in Insert mode

|i_CTRL-V|	CTRL-V {char}..	  insert character literally, or enter decimal
				     byte value
|i_<NL>|	<NL> or <CR> or CTRL-M or CTRL-J
				  begin new line
|i_CTRL-E|	CTRL-E		  insert the character from below the cursor
|i_CTRL-Y|	CTRL-Y		  insert the character from above the cursor

|i_CTRL-A|	CTRL-A		  insert previously inserted text
|i_CTRL-@|	CTRL-@		  insert previously inserted text and stop
				     Insert mode
|i_CTRL-R|	CTRL-R {0-9a-z%#:.-="}  insert the contents of a register

|i_CTRL-N|	CTRL-N		  insert next match of identifier before the
				     cursor
|i_CTRL-P|	CTRL-P		  insert previous match of identifier before
				     the cursor
|i_CTRL-X|	CTRL-X ...	  complete the word before the cursor in
				     various ways

|i_<BS>|	<BS> or CTRL-H	  delete the character before the cursor
|i_<Del>|	<Del>		  delete the character under the cursor
|i_CTRL-W|	CTRL-W		  delete word before the cursor
|i_CTRL-U|	CTRL-U		  delete all entered characters in the current
				     line
|i_CTRL-T|	CTRL-T		  insert one shiftwidth of indent in front of
				       the current line
|i_CTRL-D|	CTRL-D		  delete one shiftwidth of indent in front of
				     the current line
|i_0_CTRL-D|	0 CTRL-D	  delete all indent in the current line
|i_^_CTRL-D|	^ CTRL-D	  delete all indent in the current line,
				     restore indent in next line
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_ss}
@cindex Q_ss
@unnumberedsec 挿入モードでの特殊キー

@multitable @columnfractions .2 .3 .5
@item |i_CTRL-V| @tab @kbd{CTRL-V} @{char@}.. @tab 指定の @{char@}、もしくは 10 進数指定のバイト値を挿入
@item |i_<NL>| @tab <NL> or @key{<CR>} or @kbd{CTRL-M} or @kbd{CTRL-J} @tab 改行して、新しい行を作成
@item |i_CTRL-E| @tab @kbd{CTRL-E} @tab カーソル位置の直下の行の内容を 1 文字挿入
@item |i_CTRL-Y| @tab @kbd{CTRL-Y} @tab カーソル位置の真上の行の内容を 1 文字挿入
@item
@item |i_CTRL-A| @tab @kbd{CTRL-A} @tab 直前に挿入した文字列をもう一度挿入
@item |i_CTRL-@@| @tab @kbd{CTRL-@@} @tab 直前に挿入した文字列をもう一度挿入し、挿入モードから復帰
@item |i_CTRL-R| @tab @kbd{CTRL-R} @{0-9a-z%#:.-="@} @tab 指定のレジスタの内容を挿入
@item
@item |i_CTRL-N| @tab @kbd{CTRL-N} @tab カーソルの前にあるキーワードと合致する単語を順方向に検索して挿入
@item |i_CTRL-P| @tab @kbd{CTRL-P} @tab カーソルの前にあるキーワードと合致する単語を逆方向に検索して挿入
@item |i_CTRL-X| @tab @kbd{CTRL-X} ... @tab カーソルの前にある単語をいろんな方法で補完 する。
@item
@item |i_<BS>| @tab @key{<BS>} or @kbd{CTRL-H} @tab カーソルの前の 1 文字を削除
@item |i_<Del>| @tab @key{<Del>} @tab カーソル位置の 1 文字を削除
@item |i_CTRL-W| @tab @kbd{CTRL-W} @tab カーソル位置の 1 単語を削除
@item |i_CTRL-U| @tab @kbd{CTRL-U} @tab 現在行で入力した全部の文字を削除
@item |i_CTRL-T| @tab @kbd{CTRL-T} @tab '@option{shiftwidth}' での指定分のインデントを現在行の行頭に挿入
@item |i_CTRL-D| @tab @kbd{CTRL-D} @tab '@option{shiftwidth}' での指定分のインデントを現在行の行頭から削除
@item |i_0_CTRL-D| @tab 0 @kbd{CTRL-D} @tab 現在行の全インデントを削除
@item |i_^_CTRL-D| @tab ^ @kbd{CTRL-D} @tab 現在行の全インデントを削除。但し、次の行のインデントには影響しない。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_di*		Digraphs

|:dig|	   :dig[raphs]		show current list of digraphs
|:dig|	   :dig[raphs] {char1}{char2} {number} ...
				add digraph(s) to the list

In Insert or Command-line mode:
|i_CTRL-K|	CTRL-K {char1} {char2}
				  enter digraph
|i_digraph|	{char1} <BS> {char2}
				  enter digraph if 'digraph' option set
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_di}
@cindex Q_di
@unnumberedsec ダイグラフ

@multitable @columnfractions .1 .3 .6
@item |:dig| @tab :dig[raphs] @tab 現在のダイグラフ情報を一覧表示
@item |:dig| @tab :dig[raphs] @{char1@}@{char2@} @{number@} ... @tab ダイグラフ情報をリストに追加
@end multitable

挿入モード、又はコマンドラインモード:
@multitable @columnfractions .2 .2 .6
@item |i_CTRL-K| @tab @kbd{CTRL-K} @{char1@} @{char2@} @tab ダイグラフの入力
@item |i_digraph| @tab @{char1@} @key{<BS>} @{char2@} @tab '@option{digraph}' オプションがONの場合、ダイグラフを入力
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_si*		Special inserts

|:r|	   :r [file]	   insert the contents of [file] below the cursor
|:r!|	   :r! {command}   insert the standard output of {command} below the
			      cursor
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_si}
@cindex Q_si
@unnumberedsec 特殊な挿入コマンド

@multitable @columnfractions .1 .2 .7
@item |:r| @tab :r [file] @tab カーソル位置の後ろに [file] の内容を挿入
@item |:r!| @tab :r! @{command@} @tab カーソル位置の後ろに @{command@} を実行した結果の標準出力の内容を挿入
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_de*		Deleting text

|x|	N  x		delete N characters under and after the cursor
|<Del>|	N  <Del>	delete N characters under and after the cursor
|X|	N  X		delete N characters before the cursor
|d|	N  d{motion}	delete the text that is moved over with {motion}
|v_d|	   {visual}d	delete the highlighted text
|dd|	N  dd		delete N lines
|D|	N  D		delete to the end of the line (and N-1 more lines)
|J|	N  J		join N-1 lines (delete <EOL>s)
|v_J|	   {visual}J	join the highlighted lines
|gJ|	N  gJ		like "J", but without inserting spaces
|v_gJ|	   {visual}gJ	like "{visual}J", but without inserting spaces
|:d|	:[range]d [x]	delete [range] lines [into register x]
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_de}
@cindex Q_de
@unnumberedsec 文字列の削除

@multitable @columnfractions .1 .1 .2 .6
@item |x| @tab N @tab x @tab カーソル位置及びその後ろの N 文字を削除
@item |<Del>| @tab N @tab @key{<Del>} @tab カーソル位置及びその後ろの N 文字を削除
@item |X| @tab N @tab X @tab カーソル位置の前の N 文字を削除
@item |d| @tab N @tab d@{motion@} @tab @{motion@}で指定された範囲の文字列を削除
@item |v_d| @tab @tab @{visual@}d @tab ハイライト化された文字列を削除
@item |dd| @tab N @tab dd @tab N 行削除
@item |D| @tab N @tab D @tab (N-1 行後の)行末まで削除
@item |J| @tab N @tab J @tab N-1 行を結合して 1 行に(<EOL>を削除)
@item |v_J| @tab @tab @{visual@}J @tab ビジュアルモードで選択された文字列を結合
@item |gJ| @tab N @tab gJ @tab "J" と同じだが、行の間にスペースを入れない
@end multitable
@multitable @columnfractions .1 .2 .7
@item |v_gJ| @tab @{visual@}gJ @tab "@{visual@}J" と同じだが、行の間にスペースを入れない
@item |:d| @tab :[range]d [x] @tab [range]で指定した範囲の行を削除 [それをレジスタxに]
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_cm*		Copying and moving text

|quote|	  "{char}	use register {char} for the next delete, yank, or put
|:reg|	  :reg		show the contents of all registers
|:reg|	  :reg {arg}	show the contents of registers mentioned in {arg}
|y|	  N  y{motion}	yank the text moved over with {motion} into a register
|v_y|	     {visual}y	yank the highlighted text into a register
|yy|	  N  yy		yank N lines into a register
|Y|	  N  Y		yank N lines into a register
|p|	  N  p		put a register after the cursor position (N times)
|P|	  N  P		put a register before the cursor position (N times)
|]p|	  N  ]p		like p, but adjust indent to current line
|[p|	  N  [p		like P, but adjust indent to current line
|gp|	  N  gp		like p, but leave cursor after the new text
|gP|	  N  gP		like P, but leave cursor after the new text
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_cm}
@cindex Q_cm
@unnumberedsec 文字列のコピーと移動

@multitable @columnfractions .1 .1 .2 .6
@item |quote| @tab @tab "@{char@} @tab レジスタ @{char@} を指定。これに続いて、削除コマンドやヤンクコマンド、プットコマンドを指定
@item |:reg| @tab @tab :reg @tab 全レジスタの内容を表示
@item |:reg| @tab @tab :reg @{arg@} @tab @{arg@} で示されたレジスタの内容を表示
@item |y| @tab N @tab y@{motion@} @tab @{motion@} で指定された範囲の文字列をレジスタにヤンク(コピー)
@item |v_y| @tab @tab @{visual@}y @tab ハイライト化された文字列をレジスタにヤンク
@item |yy| @tab N @tab yy @tab N 行をレジスタにヤンク
@item |Y| @tab N @tab Y @tab N 行をレジスタにヤンク
@item |p| @tab N @tab p @tab カーソル位置の後にレジスタ内容を N 回プット(ペースト)
@item |P| @tab N @tab P @tab カーソル位置の前にレジスタ内容を N 回プット(ペースト)
@item |]p| @tab N @tab ]p @tab p と同じだが、インデントを現在行に合せる
@item |[p| @tab N @tab [p @tab P と同じだが、インデントを現在行に合せる
@item |gp| @tab N @tab gp @tab p と同じだが、挿入した文字列の後にカーソルを移動
@item |gP| @tab N @tab gP @tab P と同じだが、挿入した文字列の後にカーソルを移動
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_ch*		Changing text

|r|	  N  r{char}	replace N characters with {char}
|gr|	  N  gr{char}	replace N characters without affecting layout
|R|	  N  R		enter Replace mode (repeat the entered text N times)
|gR|	  N  gR		enter virtual Replace mode: Like Replace mode but
			   without affecting layout
|v_b_r|	     {visual}r{char}
			in Visual block mode: Replace each char of the
			   selected text with {char}

	(change = delete text and enter Insert mode)
|c|	  N  c{motion}	change the text that is moved over with {motion}
|v_c|	     {visual}c	change the highlighted text
|cc|	  N  cc		change N lines
|S|	  N  S		change N lines
|C|	  N  C		change to the end of the line (and N-1 more lines)
|s|	  N  s		change N characters
|v_b_c|	     {visual}c	in Visual block mode: Change each of the selected
			   lines with the entered text
|v_b_C|	     {visual}C	in Visual block mode: Change each of the selected
			   lines until end-of-line with the entered text

|~|	  N  ~		switch case for N characters and advance cursor
|v_~|	     {visual}~	switch case for highlighted text
|v_u|	     {visual}u	make highlighted text lowercase
|v_U|	     {visual}U	make highlighted text uppercase
|g~|	     g~{motion} switch case for the text that is moved over with
			   {motion}
|gu|	     gu{motion} make the text that is moved over with {motion}
			   lowercase
|gU|	     gU{motion} make the text that is moved over with {motion}
			   uppercase
|v_g?|	     {visual}g? perform rot13 encoding on highlighted text
|g?|	     g?{motion} perform rot13 encoding on the text that is moved over
			   with {motion}

|CTRL-A|  N  CTRL-A	add N to the number at or after the cursor
|CTRL-X|  N  CTRL-X	subtract N from the number at or after the cursor

|<|	  N  <{motion}	move the lines that are moved over with {motion} one
			   shiftwidth left
|<<|	  N  <<		move N lines one shiftwidth left
|>|	  N  >{motion}	move the lines that are moved over with {motion} one
			   shiftwidth right
|>>|	  N  >>		move N lines one shiftwidth right
|gq|	  N  gq{motion}	format the lines that are moved over with {motion} to
			   'textwidth' length
|:ce|	  :[range]ce[nter] [width]
			center the lines in [range]
|:le|	  :[range]le[ft] [indent]
			left-align the lines in [range] (with [indent])
|:ri|	  :[range]ri[ght] [width]
			right-align the lines in [range]
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_ch}
@cindex Q_ch
@unnumberedsec 文字列の変更

@multitable @columnfractions .1 .1 .2 .7
@item |r| @tab N @tab r@{char@} @tab N 文字を @{char@} に置換
@item |gr| @tab N @tab gr@{char@} @tab N 文字をレイアウトに影響を与えずに置換 @{訳注: "あ" を "ra" で置換 -> "a"、"あ" を "gra" で置換 -> "a "@}
@item |R| @tab N @tab R @tab 置換モードへ (入力文字列を N 回繰り返す)
@item |gR| @tab N @tab gR @tab 仮想置換モードへ。置換モードと同じだが、レイアウトに影響しない。
@item |v_b_r| @tab @tab @{visual@}r@{char@} @tab ビジュアルブロックモード用: 選択範囲の各文字を @{char@} で、置換
@end multitable

(この節における「変更」とは、文字列を削除し、挿入モードに入ること)
@multitable @columnfractions .1 .1 .2 .7
@item |c| @tab N @tab c@{motion@} @tab @{motion@} で指定した範囲の文字列を変更
@item |v_c| @tab @tab @{visual@}c @tab ビジュアルモードで選択された文字列を変更
@item |cc| @tab N @tab cc @tab N 行を変更
@item |S| @tab N @tab S @tab N 行を変更
@item |C| @tab N @tab C @tab (N-1 行後の)行末までを変更
@item |s| @tab N @tab s @tab N 文字を変更
@item |v_b_c| @tab @tab @{visual@}c @tab 矩形ビジュアルモード用:選ばれている各行の内容を入力した文字列に置き換え
@item |v_b_C| @tab @tab @{visual@}C @tab 矩形ビジュアルモード用:選ばれている各行の行末までを入力した文字列に置き換え
@item
@item |~| @tab N @tab ~ @tab N 文字分の英文字の大文字/小文字を変換し、カーソルを移動
@item |v_~| @tab @tab @{visual@}~ @tab ビジュアルモードで選択された範囲の大文字/小文字を変換
@item |v_u| @tab @tab @{visual@}u @tab ビジュアルモードで選択された範囲を小文字に変換
@item |v_U| @tab @tab @{visual@}U @tab ビジュアルモードで選択された範囲を大文字に変換
@item |g~| @tab @tab g~@{motion@} @tab @{motion@} で指定した範囲の大文字/小文字を変換
@item |gu| @tab @tab gu@{motion@} @tab @{motion@} で指定した範囲を小文字に変換
@item |gU| @tab @tab gU@{motion@} @tab @{motion@} で指定した範囲を大文字に変換
@item |v_g?| @tab @tab @{visual@}g? @tab ビジュアルモードで選択した範囲をrot13でエンコードする。
@item |g?| @tab @tab g?@{motion@} @tab @{motion@} で指定した範囲をrot13でエンコードする。@{訳注: rot13というのはA->N,B->Oという置き換えのシーザ暗号のこと。英語圏では昔から使われている。@}
@item
@item |CTRL-A| @tab N @tab @kbd{CTRL-A} @tab カーソル位置もしくは後ろにある数字にNを加算する
@item |CTRL-X| @tab N @tab @kbd{CTRL-X} @tab カーソル位置もしくは後ろにある数字からNを減算する
@item
@item |<| @tab N @tab <@{motion@} @tab @{motion@} で指定した範囲を '@option{shiftwidth}' 分、インデントを減らす
@item |<<| @tab N @tab << @tab カレント行から N 行分のインデントを減らす
@item |>| @tab N @tab >@{motion@} @tab @{motion@}で指定した範囲を '@option{shiftwidth}' 分、インデントを増やす
@item |>>| @tab N @tab >> @tab カレント行から N 行分のインデントを増やす
@item |gq| @tab N @tab gq@{motion@} @tab @{motion@}で指定した範囲を '@option{textwidth}' で指定した長さにフォーマット
@item |:ce| @tab @tab :[range]ce[nter] [width] @tab [range]の行範囲をセンタリング
@item |:le| @tab @tab :[range]le[ft] [indent] @tab [range]の行範囲を([indent] 分)左寄せ
@item |:ri| @tab @tab :[range]ri[ght] [width] @tab [range]の行範囲を([width] 桁まで)右寄せ
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_co*		Complex changes

|!|	   N  !{motion}{command}<CR>
			filter the lines that are moved over through {command}
|!!|	   N  !!{command}<CR>
			filter N lines through {command}
|v_!|	      {visual}!{command}<CR>
			filter the highlighted lines through {command}
|:range!|  :[range]! {command}<CR>
			filter [range] lines through {command}
|=|	   N  ={motion}
			filter the lines that are moved over through 'equalprg'
|==|	   N  ==	filter N lines through 'equalprg'
|v_=|	      {visual}=
			filter the highlighted lines through 'equalprg'
|:s|	   :[range]s[ubstitute]/{pattern}/{string}/[g][c]
			substitute {pattern} by {string} in [range] lines;
			   with [g], replace all occurrences of {pattern};
			   with [c], confirm each replacement
|:s|	   :[range]s[ubstitute] [g][c]
			repeat previous ":s" with new range and options
|&|	      &		Repeat previous ":s" on current line without options
|:ret|	   :[range]ret[ab][!] [tabstop]
			set 'tabstop' to new value and adjust white space
			   accordingly
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_co}
@cindex Q_co
@unnumberedsec 複雑な変更処理

@multitable @columnfractions .1 .1 .25 .55
@item |!| @tab N @tab !@{motion@} @{command@}@key{<CR>} @tab @{motion@} で指定した範囲を @{command@} の結果出力に置き換え
@item |!!| @tab N @tab !!@{command@}@key{<CR>} @tab N 行を @{command@} の結果出力に置き換え
@item |v_!| @tab @tab @{visual@} !@{command@}@key{<CR>} @tab ビジュアルモードで選択された範囲を @{command@} の結果出力に置き換え
@item |:range!| @tab @tab :[range]! @{command@}@key{<CR>} @tab [range] の範囲を @{command@} の結果出力に置き換え
@item |=| @tab N @tab =@{motion@} @tab @{motion@} で指定した範囲を '@option{equalprg}' の結果出力に置き換え
@item |==| @tab N @tab == @tab N 行を '@option{equalprg}' の結果出力に置き換え
@item |v_=| @tab @tab @{visual@}= @tab ビジュアルモードで選択された範囲を '@option{equalprg}'の結果出力に置き換え
@item |:s| @tab @tab :[range]s[ubstitute] /@{pattern@}/@{string@}/[g][c] @tab [range] の範囲の @{pattern@} を @{string@} に置換する。[g] を指定すると、見つかった全 @{pattern@} を置換。[c] を指定すると、各置換を確認する。
@item |:s| @tab @tab :[range]s[ubstitute] [g][c] @tab 直前の ":s" を新たな範囲とオプションで繰り返す
@item |&| @tab @tab & @tab 直前の ":s" を現在行について繰り返す。(オプションなし)
@item |:ret| @tab @tab :[range]ret[ab][!] [tabstop] @tab '@option{tabstop}' の値を変更し、それに従って空白、TABの類を適切な状態にする。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_vi*		Visual mode

|visual-index|	list of Visual mode commands.

|v|        v		start highlighting characters  }  move cursor and use
|V|        V		start highlighting linewise    }  operator to affect
|CTRL-V|   CTRL-V	start highlighting blockwise   }  highlighted text
|v_o|      o		exchange cursor position with start of highlighting
|gv|       gv		start highlighting on previous visual area
|v_v|      v		highlight characters or stop highlighting
|v_V|      V		highlight linewise or stop highlighting
|v_CTRL-V| CTRL-V	highlight blockwise or stop highlighting
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_vi}
@cindex Q_vi
@unnumberedsec ビジュアルモード

@unnumberedsubsec ビジュアルモードコマンドの目次 |visual-index|

@multitable @columnfractions .2 .2 .6
@item |v| @tab v @tab 文字単位のビジュアルモードを開始 @} カーソルを動かして
@item |V| @tab V @tab 行単位のビジュアルモードを開始 @} 選択した範囲に対し
@item |CTRL-V| @tab @kbd{CTRL-V} @tab 矩形ビジュアルモードを開始 @} コマンドを実行
@item |v_o| @tab o @tab カーソル位置と選択範囲の開始位置を入れ替え
@item |gv| @tab gv @tab 直前の選択範囲を選んだ状態でビジュアルモードを開始
@item |v_v| @tab v @tab 文字単位ビジュアルモードを開始、もしくは中断
@item |v_V| @tab V @tab 行単位ビジュアルモードを開始、もしくは中断
@item |v_CTRL-V| @tab @kbd{CTRL-V} @tab 矩形ビジュアルモードを開始、もしくは中断
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_to*		Text objects (only in Visual mode or after an operator)

|v_aw|	   N  aw	Select "a word"
|v_iw|	   N  iw	Select "inner word"
|v_aW|	   N  aW	Select "a |WORD|"
|v_iW|	   N  iW	Select "inner |WORD|"
|v_as|	   N  as	Select "a sentence"
|v_is|	   N  is	Select "inner sentence"
|v_ap|	   N  ap	Select "a paragraph"
|v_ip|	   N  ip	Select "inner paragraph"
|v_ab|	   N  ab	Select "a block" (from "[(" to "])")
|v_ib|	   N  ib	Select "inner block" (from "[(" to "])")
|v_aB|	   N  aB	Select "a Block" (from "[{" to "]}")
|v_iB|	   N  iB	Select "inner Block" (from "[{" to "]}")
|v_a>|	   N  a>	Select "a <> block"
|v_i>|	   N  i>	Select "inner <> block"
|v_at|	   N  at	Select "a tag block" (from <aaa> to </aaa>)
|v_it|	   N  it	Select "inner tag block" (from <aaa> to </aaa>)
|v_a'|	   N  a'	Select "a single quoted string"
|v_i'|	   N  i'	Select "inner single quoted string"
|v_aquote| N  a"	Select "a double quoted string"
|v_iquote| N  i"	Select "inner double quoted string"
|v_a`|	   N  a`	Select "a backward quoted string"
|v_i`|	   N  i`	Select "inner backward quoted string"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_to}
@cindex Q_to
@unnumberedsec 文字列オブジェクト (ビジュアルモードか、オペレータ指定後)

@multitable @columnfractions .2 .1 .1 .6
@item |v_aw| @tab N @tab aw @tab "a word" を選択(単語の前後の空白も削除)
@item |v_iw| @tab N @tab iw @tab "inner word" を選択(正味の単語だけを削除)
@item |v_aW| @tab N @tab aW @tab "a |WORD|" を選択
@item |v_iW| @tab N @tab iW @tab "inner |WORD|" を選択
@item |v_as| @tab N @tab as @tab "a sentence" を選択
@item |v_is| @tab N @tab is @tab "inner sentence" を選択
@item |v_ap| @tab N @tab ap @tab "a paragraph" を選択
@item |v_ip| @tab N @tab ip @tab "inner paragraph" を選択
@item |v_ab| @tab N @tab ab @tab "a block" ("[(" ～ "])" の範囲) を選択
@item |v_ib| @tab N @tab ib @tab "inner block" ("[(" ～ "])" の範囲) を選択
@item |v_aB| @tab N @tab aB @tab "a Block" ("[@{" ～ "]@}" の範囲) を選択
@item |v_iB| @tab N @tab iB @tab "inner Block" ("[@{" ～ "]@}" の範囲) を選択
@item |v_a>| @tab N @tab a> @tab "a <> block" を選択
@item |v_i>| @tab N @tab i> @tab "inner <> block" を選択
@item |v_at| @tab N @tab at @tab "a tag block" (<aaa> ～ </aaa>)を選択
@item |v_it| @tab N @tab it @tab "inner tag block" (<aaa> ～ </aaa>)を選択
@item |v_a'| @tab N @tab a' @tab "a single quoted string" を選択
@item |v_i'| @tab N @tab i' @tab "inner single quoted string" を選択
@item |v_aquote| @tab N @tab a" @tab "a double quoted string" を選択
@item |v_iquote| @tab N @tab i" @tab "inner double quoted string" を選択
@item |v_a`| @tab N @tab a` @tab "a backward quoted string" を選択
@item |v_i`| @tab N @tab i` @tab "inner backward quoted string" を選択
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN

------------------------------------------------------------------------------
*Q_re*		Repeating commands

|.|	   N  .		repeat last change (with count replaced with N)
|q|	      q{a-z}	record typed characters into register {a-z}
|q|	      q{A-Z}	record typed characters, appended to register {a-z}
|q|	      q		stop recording
|@|	   N  @{a-z}	execute the contents of register {a-z} (N times)
|@@|	   N  @@	   repeat previous @{a-z} (N times)
|:@|	   :@{a-z}	execute the contents of register {a-z} as an Ex
			   command
|:@@|	   :@@		repeat previous :@{a-z}
|:g|	   :[range]g[lobal]/{pattern}/[cmd]
			execute Ex command [cmd] (default: ":p") on the lines
			   within [range] where {pattern} matches
|:g|	   :[range]g[lobal]!/{pattern}/[cmd]
			execute Ex command [cmd] (default: ":p") on the lines
			   within [range] where {pattern} does NOT match
|:so|	   :so[urce] {file}
			read Ex commands from {file}
|:so|	   :so[urce]! {file}
			read Vim commands from {file}
|:sl|	   :sl[eep] [sec]
			don't do anything for [sec] seconds
|gs|	   N  gs	goto Sleep for N seconds
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_re}
@cindex Q_re
@unnumberedsec 繰り返しコマンド

@multitable @columnfractions .1 .1 .2 .6
@item |.| @tab N @tab . @tab 直前のコマンドを繰り返す。(回数はN回となる)
@item |q| @tab @tab q@{a-z@} @tab 入力された文字群をレジスタ @{a-z@} に記録
@item |q| @tab @tab q@{A-Z@} @tab 入力された文字群をレジスタ @{a-z@} に追加して記録
@item |q| @tab @tab q @tab 記録を終了
@item |@@| @tab N @tab @@@{a-z@} @tab レジスタ @{a-z@} の内容を N 回実行
@item |@@@@| @tab N @tab @@@@ @tab 直前の @@@{a-z@} を N 回実行
@item |:@@| @tab @tab :@@@{a-z@} @tab レジスタ @{a-z@} の内容を Ex コマンドとみなして、N 回実行
@item |:@@@@| @tab @tab :@@@@ @tab 直前の :@@@{a-z@} を N 回実行
@item |:g| @tab @tab :[range]g[lobal]/ @{pattern@}/[cmd] @tab [range] の中で、指定の @{pattern@} に合致する各行に対して [cmd]コマンド(デフォルトでは ":p")を実行する。
@item |:g| @tab @tab :[range]g[lobal]!/ @{pattern@}/[cmd] @tab [range]の中で、指定の @{pattern@} に合致@b{しない}各行に対して [cmd] コマンド(デフォルトでは ":p")を実行する。
@item |:so| @tab @tab :so[urce] @{file@} @tab @{file@} から Ex コマンドを読み出す。
@item |:so| @tab @tab :so[urce]! @{file@} @tab @{file@} から Vim コマンドを読み出す。
@item |:sl| @tab @tab :sl[eep] [sec] @tab [sec] 秒間の間、何もしない
@item |gs| @tab N @tab gs @tab N 秒間の間、何もしない
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_km*		Key mapping

|:map|       :ma[p] {lhs} {rhs}	  map {lhs} to {rhs} in Normal and Visual mode
|:map!|      :ma[p]! {lhs} {rhs}  map {lhs} to {rhs} in Insert and Command-line
				     mode
|:noremap|   :no[remap][!] {lhs} {rhs}
				  same as ":map", no remapping for this {rhs}
|:unmap|     :unm[ap] {lhs}	  remove the mapping of {lhs} for Normal and
				     Visual mode
|:unmap!|    :unm[ap]! {lhs}	  remove the mapping of {lhs} for Insert and
				     Command-line mode
|:map_l|     :ma[p] [lhs]	  list mappings (starting with [lhs]) for
				     Normal and Visual mode
|:map_l!|    :ma[p]! [lhs]	  list mappings (starting with [lhs]) for
				     Insert and Command-line mode
|:cmap|      :cmap/:cunmap/:cnoremap
				  like ":map!"/":unmap!"/":noremap!" but for
				     Command-line mode only
|:imap|      :imap/:iunmap/:inoremap
				  like ":map!"/":unmap!"/":noremap!" but for
				     Insert mode only
|:nmap|      :nmap/:nunmap/:nnoremap
				  like ":map"/":unmap"/":noremap" but for
				     Normal mode only
|:vmap|      :vmap/:vunmap/:vnoremap
				  like ":map"/":unmap"/":noremap" but for
				     Visual mode only
|:omap|      :omap/:ounmap/:onoremap
				  like ":map"/":unmap"/":noremap" but only for
				     when an operator is pending
|:mapc|      :mapc[lear]	  remove mappings for Normal and Visual mode
|:mapc|      :mapc[lear]!	  remove mappings for Insert and Cmdline mode
|:imapc|     :imapc[lear]	  remove mappings for Insert mode
|:vmapc|     :vmapc[lear]	  remove mappings for Visual mode
|:omapc|     :omapc[lear]	  remove mappings for Operator-pending mode
|:nmapc|     :nmapc[lear]	  remove mappings for Normal mode
|:cmapc|     :cmapc[lear]	  remove mappings for Cmdline mode
|:mkexrc|    :mk[exrc][!] [file]  write current mappings, abbreviations, and
				     settings to [file] (default: ".exrc";
				     use ! to overwrite)
|:mkvimrc|   :mkv[imrc][!] [file]
				  same as ":mkexrc", but with default ".vimrc"
|:mksession| :mks[ession][!] [file]
				  like ":mkvimrc", but store current files,
				     windows, etc. too, to be able to continue
				     this session later
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_km}
@cindex Q_km
@unnumberedsec キーマップ

@multitable @columnfractions .1 .3 .6
@item |:map| @tab :ma[p] @{lhs@} @{rhs@} @tab ノーマルモード/ビジュアルモードで @{lhs@} を @{rhs@} に割り付け
@item |:map!| @tab :ma[p]! @{lhs@} @{rhs@} @tab 挿入モード/コマンドラインモードで @{lhs@} を @{rhs@} に割り付け
@item |:noremap| @tab :no[remap][!] @{lhs@} @{rhs@} @tab "@command{:map}" と同じだが、@{rhs@} の再割り付けしない
@item |:unmap| @tab :unm[ap] @{lhs@} @tab ノーマルモード/ビジュアルモード用の @{lhs@} 定義を削除
@item |:unmap!| @tab :unm[ap]! @{lhs@} @tab 挿入モード/コマンドラインモード用の @{lhs@} 定義を削除
@item |:map_l| @tab :ma[p] [lhs] @tab ノーマルモード/ビジュアルモード用の ([lhs] で始まる) マップを一覧表示
@item |:map_l!| @tab :ma[p]! [lhs] @tab 挿入モード/コマンドラインモード用の ([lhs] で始まる) マップを一覧表示
@item |:cmap| @tab :cmap/:cunmap/:cnoremap @tab  "@command{:map!}"/"@command{:unmap!}"/"@command{:noremap!}" と同じだが、コマンドラインモードのみ対象となる。
@item |:imap| @tab :imap/:iunmap/:inoremap @tab  "@command{:map!}"/"@command{:unmap!}"/"@command{:noremap!}" と同じだが、挿入モードのみ対象となる。
@item |:nmap| @tab :nmap/:nunmap/:nnoremap @tab  "@command{:map!}"/"@command{:unmap!}"/"@command{:noremap!}" と同じだが、ノーマルモードのみ対象となる。
@item |:vmap| @tab :vmap/:vunmap/:vnoremap @tab  "@command{:map!}"/"@command{:unmap!}"/"@command{:noremap!}" と同じだが、ビジュアルモードのみ対象となる。
@item |:omap| @tab :omap/:ounmap/:onoremap @tab  "@command{:map!}"/"@command{:unmap!}"/"@command{:noremap!}" と同じだが、オペレータ待機モードのみ対象となる。
@item |:mapc| @tab :mapc[lear] @tab ノーマルモード/ビジュアルモード用のマップを削除
@item |:mapc| @tab :mapc[lear]! @tab 挿入モード/コマンドモード用のマップを削除
@item |:imapc| @tab :imapc[lear] @tab 挿入モード用のマップを削除
@item |:vmapc| @tab :vmapc[lear] @tab ビジュアルモード用のマップを削除
@item |:omapc| @tab :omapc[lear] @tab オペレータ待機モード用のマップを削除
@item |:nmapc| @tab :nmapc[lear] @tab ノーマルモード用のマップを削除
@item |:cmapc| @tab :cmapc[lear] @tab コマンドラインモード用のマップを削除
@item |:mkexrc| @tab :mk[exrc][!] [file] @tab 現在のマップ、短縮形、設定を [file] に書き出す。(デフォルトは "@file{.exrc}" で、[!] をつけると上書きとなる)
@item |:mkvimrc| @tab :mkv[imrc][!] [file] @tab "@command{:mkexrc}" と同じ。但しデフォルトは "@file{.vimrc}"
@item |:mksession| @tab :mks[ession][!] [file] @tab "@command{:mkvimrc}" と同じ。ただし、現在のセッションを後で続けられるように、現在のファイル名、ウィンドウ情報などもいっしょに書き出す。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_ab*		Abbreviations

|:abbreviate|	:ab[breviate] {lhs} {rhs}  add abbreviation for {lhs} to {rhs}
|:abbreviate|	:ab[breviate] {lhs}	   show abbr's that start with {lhs}
|:abbreviate|	:ab[breviate]		   show all abbreviations
|:unabbreviate|	:una[bbreviate] {lhs}	   remove abbreviation for {lhs}
|:noreabbrev|	:norea[bbrev] [lhs] [rhs]  like ":ab", but don't remap [rhs]
|:iabbrev|	:iab/:iunab/:inoreab	   like ":ab", but only for Insert mode
|:cabbrev|	:cab/:cunab/:cnoreab	   like ":ab", but only for
						Command-line mode
|:abclear|	:abc[lear]		   remove all abbreviations
|:cabclear|	:cabc[lear]		   remove all abbr's for Cmdline mode
|:iabclear|	:iabc[lear]		   remove all abbr's for Insert mode
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_ab}
@cindex Q_ab
@unnumberedsec 短縮入力

@multitable @columnfractions .2 .3 .5
@item |:abbreviate| @tab :ab[breviate] @{lhs@} @{rhs@} @tab 短縮形 @{lhs@} を @{rhs@} で定義
@item |:abbreviate| @tab :ab[breviate] @{lhs@} @tab @{lhs@} で始まる短縮形を一覧表示
@item |:abbreviate| @tab :ab[breviate] @tab 全短縮形を一覧表示
@item |:unabbreviate| @tab :una[bbreviate] @{lhs@} @tab @{lhs@} の短縮形を削除
@item |:noreabbrev| @tab :norea[bbrev] [lhs] [rhs] @tab "@command{:ab}" と同じだが、 [rhs]の再定義はしない
@item |:iabbrev| @tab :iab/:iunab/:inoreab @tab "@command{:ab}" と同じだが、挿入モード用のみが対象
@item |:cabbrev| @tab :cab/:cunab/:cnoreab @tab "@command{:ab}" と同じだが、コマンドラインモード用のみが対象
@item |:abclear| @tab :abc[lear] @tab 全短縮形を削除
@item |:cabclear| @tab :cabc[lear] @tab コマンドライン用の全短縮形を削除
@item |:iabclear| @tab :iabc[lear] @tab 挿入モード用の全短縮形を削除
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_op*		Options

|:set|		:se[t]			  show all modified options
|:set|		:se[t] all		  show all non-termcap options
|:set|		:se[t] termcap		  show all termcap options
|:set|		:se[t] {option}		  set boolean option (switch it on),
					  show string or number option
|:set|		:se[t] no{option}	  reset boolean option (switch it off)
|:set|		:se[t] inv{option}	  invert boolean option
|:set|		:se[t] {option}={value}	  set string/number option to {value}
|:set|		:se[t] {option}+={value}  append {value} to string option, add
					  {value} to number option
|:set|		:se[t] {option}-={value}  remove {value} to string option,
					  subtract {value} from number option
|:set|		:se[t] {option}?	  show value of {option}
|:set|		:se[t] {option}&	  reset {option} to its default value

|:setlocal|	:setl[ocal]		  like ":set" but set the local value
					  for options that have one
|:setglobal|	:setg[lobal]		  like ":set" but set the global value
					  of a local option

|:fix|		:fix[del]		  set value of 't_kD' according to
					  value of 't_kb'
|:options|	:opt[ions]		  open a new window to view and set
					  options, grouped by functionality,
					  a one line explanation and links to
					  the help

Short explanation of each option:		*option-list*
'aleph'		  'al'	    ASCII code of the letter Aleph (Hebrew)
'allowrevins'	  'ari'     allow CTRL-_ in Insert and Command-line mode
'altkeymap'	  'akm'     for default second language (Farsi/Hebrew)
'ambiwidth'	  'ambw'    what to do with Unicode chars of ambiguous width
'antialias'	  'anti'    Mac OS X: use smooth, antialiased fonts
'autochdir'	  'acd'     change directory to the file in the current window
'arabic'	  'arab'    for Arabic as a default second language
'arabicshape'	  'arshape' do shaping for Arabic characters
'autoindent'	  'ai'	    take indent for new line from previous line
'autoread'	  'ar'	    autom. read file when changed outside of Vim
'autowrite'	  'aw'	    automatically write file if changed
'autowriteall'	  'awa'     as 'autowrite', but works with more commands
'background'	  'bg'	    "dark" or "light", used for highlight colors
'backspace'	  'bs'	    how backspace works at start of line
'backup'	  'bk'	    keep backup file after overwriting a file
'backupcopy'	  'bkc'     make backup as a copy, don't rename the file
'backupdir'	  'bdir'    list of directories for the backup file
'backupext'	  'bex'     extension used for the backup file
'backupskip'	  'bsk'     no backup for files that match these patterns
'balloondelay'	  'bdlay'   delay in mS before a balloon may pop up
'ballooneval'	  'beval'   switch on balloon evaluation
'balloonexpr'	  'bexpr'   expression to show in balloon
'belloff'	  'bo'	    do not ring the bell for these reasons
'binary'	  'bin'     read/write/edit file in binary mode
'bioskey'	  'biosk'   MS-DOS: use bios calls for input characters
'bomb'			    prepend a Byte Order Mark to the file
'breakat'	  'brk'     characters that may cause a line break
'breakindent'	  'bri'     wrapped line repeats indent 
'breakindentopt'  'briopt'  settings for 'breakindent'
'browsedir'	  'bsdir'   which directory to start browsing in
'bufhidden'	  'bh'	    what to do when buffer is no longer in window
'buflisted'	  'bl'	    whether the buffer shows up in the buffer list
'buftype'	  'bt'	    special type of buffer
'casemap'	  'cmp'     specifies how case of letters is changed
'cdpath'	  'cd'	    list of directories searched with ":cd"
'cedit'			    key used to open the command-line window
'charconvert'	  'ccv'     expression for character encoding conversion
'cindent'	  'cin'     do C program indenting
'cinkeys'	  'cink'    keys that trigger indent when 'cindent' is set
'cinoptions'	  'cino'    how to do indenting when 'cindent' is set
'cinwords'	  'cinw'    words where 'si' and 'cin' add an indent
'clipboard'	  'cb'	    use the clipboard as the unnamed register
'cmdheight'	  'ch'	    number of lines to use for the command-line
'cmdwinheight'	  'cwh'     height of the command-line window
'colorcolumn'	  'cc'	    columns to highlight
'columns'	  'co'	    number of columns in the display
'comments'	  'com'     patterns that can start a comment line
'commentstring'   'cms'     template for comments; used for fold marker
'compatible'	  'cp'	    behave Vi-compatible as much as possible
'complete'	  'cpt'     specify how Insert mode completion works
'completefunc'	  'cfu'     function to be used for Insert mode completion
'completeopt'	  'cot'     options for Insert mode completion
'concealcursor'	  'cocu'    whether concealable text is hidden in cursor line
'conceallevel'	  'cole'    whether concealable text is shown or hidden
'confirm'	  'cf'	    ask what to do about unsaved/read-only files
'conskey'	  'consk'   get keys directly from console (MS-DOS only)
'copyindent'	  'ci'	    make 'autoindent' use existing indent structure
'cpoptions'	  'cpo'     flags for Vi-compatible behavior
'cryptmethod'	  'cm'	    type of encryption to use for file writing
'cscopepathcomp'  'cspc'    how many components of the path to show
'cscopeprg'       'csprg'   command to execute cscope
'cscopequickfix'  'csqf'    use quickfix window for cscope results
'cscoperelative'  'csre'    Use cscope.out path basename as prefix
'cscopetag'       'cst'     use cscope for tag commands
'cscopetagorder'  'csto'    determines ":cstag" search order
'cscopeverbose'   'csverb'  give messages when adding a cscope database
'cursorbind'	  'crb'     move cursor in window as it moves in other windows
'cursorcolumn'	  'cuc'	    highlight the screen column of the cursor
'cursorline'	  'cul'	    highlight the screen line of the cursor
'debug'			    set to "msg" to see all error messages
'define'	  'def'     pattern to be used to find a macro definition
'delcombine'	  'deco'    delete combining characters on their own
'dictionary'	  'dict'    list of file names used for keyword completion
'diff'			    use diff mode for the current window
'diffexpr'	  'dex'     expression used to obtain a diff file
'diffopt'	  'dip'     options for using diff mode
'digraph'	  'dg'	    enable the entering of digraphs in Insert mode
'directory'	  'dir'     list of directory names for the swap file
'display'	  'dy'	    list of flags for how to display text
'eadirection'	  'ead'     in which direction 'equalalways' works
'edcompatible'	  'ed'	    toggle flags of ":substitute" command
'emoji'		  'emo'	    emoji characters are considered full width
'encoding'	  'enc'     encoding used internally
'endofline'	  'eol'     write <EOL> for last line in file
'equalalways'	  'ea'	    windows are automatically made the same size
'equalprg'	  'ep'	    external program to use for "=" command
'errorbells'	  'eb'	    ring the bell for error messages
'errorfile'	  'ef'	    name of the errorfile for the QuickFix mode
'errorformat'	  'efm'     description of the lines in the error file
'esckeys'	  'ek'	    recognize function keys in Insert mode
'eventignore'	  'ei'	    autocommand events that are ignored
'expandtab'	  'et'	    use spaces when <Tab> is inserted
'exrc'		  'ex'	    read .vimrc and .exrc in the current directory
'fileencoding'	  'fenc'    file encoding for multi-byte text
'fileencodings'   'fencs'   automatically detected character encodings
'fileformat'	  'ff'	    file format used for file I/O
'fileformats'	  'ffs'     automatically detected values for 'fileformat'
'fileignorecase'  'fic'     ignore case when using file names
'filetype'	  'ft'	    type of file, used for autocommands
'fillchars'	  'fcs'     characters to use for displaying special items
'fixendofline'	  'fixeol'  make sure last line in file has <EOL>
'fkmap'		  'fk'	    Farsi keyboard mapping
'foldclose'	  'fcl'     close a fold when the cursor leaves it
'foldcolumn'	  'fdc'     width of the column used to indicate folds
'foldenable'	  'fen'     set to display all folds open
'foldexpr'	  'fde'     expression used when 'foldmethod' is "expr"
'foldignore'	  'fdi'     ignore lines when 'foldmethod' is "indent"
'foldlevel'	  'fdl'     close folds with a level higher than this
'foldlevelstart'  'fdls'    'foldlevel' when starting to edit a file
'foldmarker'	  'fmr'     markers used when 'foldmethod' is "marker"
'foldmethod'	  'fdm'     folding type
'foldminlines'	  'fml'     minimum number of lines for a fold to be closed
'foldnestmax'	  'fdn'     maximum fold depth
'foldopen'	  'fdo'     for which commands a fold will be opened
'foldtext'	  'fdt'     expression used to display for a closed fold
'formatexpr'	  'fex'     expression used with "gq" command
'formatlistpat'   'flp'     pattern used to recognize a list header
'formatoptions'   'fo'	    how automatic formatting is to be done
'formatprg'	  'fp'	    name of external program used with "gq" command
'fsync'		  'fs'	    whether to invoke fsync() after file write
'gdefault'	  'gd'	    the ":substitute" flag 'g' is default on
'grepformat'	  'gfm'     format of 'grepprg' output
'grepprg'	  'gp'	    program to use for ":grep"
'guicursor'	  'gcr'     GUI: settings for cursor shape and blinking
'guifont'	  'gfn'     GUI: Name(s) of font(s) to be used
'guifontset'	  'gfs'     GUI: Names of multi-byte fonts to be used
'guifontwide'	  'gfw'     list of font names for double-wide characters
'guiheadroom'	  'ghr'     GUI: pixels room for window decorations
'guioptions'	  'go'	    GUI: Which components and options are used
'guipty'		    GUI: try to use a pseudo-tty for ":!" commands
'guitablabel'	  'gtl'     GUI: custom label for a tab page
'guitabtooltip'   'gtt'     GUI: custom tooltip for a tab page
'helpfile'	  'hf'	    full path name of the main help file
'helpheight'	  'hh'	    minimum height of a new help window
'helplang'	  'hlg'     preferred help languages
'hidden'	  'hid'     don't unload buffer when it is |abandon|ed
'highlight'	  'hl'	    sets highlighting mode for various occasions
'history'	  'hi'	    number of command-lines that are remembered
'hkmap'		  'hk'	    Hebrew keyboard mapping
'hkmapp'	  'hkp'     phonetic Hebrew keyboard mapping
'hlsearch'	  'hls'     highlight matches with last search pattern
'icon'			    let Vim set the text of the window icon
'iconstring'		    string to use for the Vim icon text
'ignorecase'	  'ic'	    ignore case in search patterns
'imactivatefunc'  'imaf'    function to enable/disable the X input method
'imactivatekey'   'imak'    key that activates the X input method
'imcmdline'	  'imc'     use IM when starting to edit a command line
'imdisable'	  'imd'     do not use the IM in any mode
'iminsert'	  'imi'     use :lmap or IM in Insert mode
'imsearch'	  'ims'     use :lmap or IM when typing a search pattern
'imstatusfunc'    'imsf'    function to obtain X input method status
'imstyle'	  'imst'    specifies the input style of the input method
'include'	  'inc'     pattern to be used to find an include file
'includeexpr'	  'inex'    expression used to process an include line
'incsearch'	  'is'	    highlight match while typing search pattern
'indentexpr'	  'inde'    expression used to obtain the indent of a line
'indentkeys'	  'indk'    keys that trigger indenting with 'indentexpr'
'infercase'	  'inf'     adjust case of match for keyword completion
'insertmode'	  'im'	    start the edit of a file in Insert mode
'isfname'	  'isf'     characters included in file names and pathnames
'isident'	  'isi'     characters included in identifiers
'iskeyword'	  'isk'     characters included in keywords
'isprint'	  'isp'     printable characters
'joinspaces'	  'js'	    two spaces after a period with a join command
'key'			    encryption key
'keymap'	  'kmp'     name of a keyboard mapping
'keymodel'	  'km'	    enable starting/stopping selection with keys
'keywordprg'	  'kp'	    program to use for the "K" command
'langmap'	  'lmap'    alphabetic characters for other language mode
'langmenu'	  'lm'	    language to be used for the menus
'langremap'	  'lrm'	    do apply 'langmap' to mapped characters
'laststatus'	  'ls'	    tells when last window has status lines
'lazyredraw'	  'lz'	    don't redraw while executing macros
'linebreak'	  'lbr'     wrap long lines at a blank
'lines'			    number of lines in the display
'linespace'	  'lsp'     number of pixel lines to use between characters
'lisp'			    automatic indenting for Lisp
'lispwords'	  'lw'	    words that change how lisp indenting works
'list'			    show <Tab> and <EOL>
'listchars'	  'lcs'     characters for displaying in list mode
'loadplugins'	  'lpl'     load plugin scripts when starting up
'luadll'		    name of the Lua dynamic library
'macatsui'		    Mac GUI: use ATSUI text drawing
'magic'			    changes special characters in search patterns
'makeef'	  'mef'     name of the errorfile for ":make"
'makeencoding'	  'menc'    encoding of external make/grep commands
'makeprg'	  'mp'	    program to use for the ":make" command
'matchpairs'	  'mps'     pairs of characters that "%" can match
'matchtime'	  'mat'     tenths of a second to show matching paren
'maxcombine'	  'mco'     maximum nr of combining characters displayed
'maxfuncdepth'	  'mfd'     maximum recursive depth for user functions
'maxmapdepth'	  'mmd'     maximum recursive depth for mapping
'maxmem'	  'mm'	    maximum memory (in Kbyte) used for one buffer
'maxmempattern'   'mmp'     maximum memory (in Kbyte) used for pattern search
'maxmemtot'	  'mmt'     maximum memory (in Kbyte) used for all buffers
'menuitems'	  'mis'     maximum number of items in a menu
'mkspellmem'	  'msm'     memory used before |:mkspell| compresses the tree
'modeline'	  'ml'	    recognize modelines at start or end of file
'modelines'	  'mls'     number of lines checked for modelines
'modifiable'	  'ma'	    changes to the text are not possible
'modified'	  'mod'     buffer has been modified
'more'			    pause listings when the whole screen is filled
'mouse'			    enable the use of mouse clicks
'mousefocus'	  'mousef'  keyboard focus follows the mouse
'mousehide'	  'mh'	    hide mouse pointer while typing
'mousemodel'	  'mousem'  changes meaning of mouse buttons
'mouseshape'	  'mouses'  shape of the mouse pointer in different modes
'mousetime'	  'mouset'  max time between mouse double-click
'mzquantum'	  'mzq'     the interval between polls for MzScheme threads
'nrformats'	  'nf'	    number formats recognized for CTRL-A command
'number'	  'nu'	    print the line number in front of each line
'numberwidth'	  'nuw'     number of columns used for the line number
'omnifunc'	  'ofu'     function for filetype-specific completion
'opendevice'	  'odev'    allow reading/writing devices on MS-Windows
'operatorfunc'	  'opfunc'  function to be called for |g@| operator
'osfiletype'	  'oft'     no longer supported
'packpath'	  'pp'      list of directories used for packages
'paragraphs'	  'para'    nroff macros that separate paragraphs
'paste'			    allow pasting text
'pastetoggle'	  'pt'	    key code that causes 'paste' to toggle
'patchexpr'	  'pex'     expression used to patch a file
'patchmode'	  'pm'	    keep the oldest version of a file
'path'		  'pa'	    list of directories searched with "gf" et.al.
'perldll'		    name of the Perl dynamic library
'preserveindent'  'pi'	    preserve the indent structure when reindenting
'previewheight'   'pvh'     height of the preview window
'previewwindow'   'pvw'     identifies the preview window
'printdevice'	  'pdev'    name of the printer to be used for :hardcopy
'printencoding'   'penc'    encoding to be used for printing
'printexpr'	  'pexpr'   expression used to print PostScript for :hardcopy
'printfont'	  'pfn'     name of the font to be used for :hardcopy
'printheader'	  'pheader' format of the header used for :hardcopy
'printmbcharset'  'pmbcs'   CJK character set to be used for :hardcopy
'printmbfont'	  'pmbfn'   font names to be used for CJK output of :hardcopy
'printoptions'	  'popt'    controls the format of :hardcopy output
'prompt'	  'prompt'  enable prompt in Ex mode
'pumheight'	  'ph'	    maximum height of the popup menu
'pythondll'		    name of the Python 2 dynamic library
'pythonthreedll'	    name of the Python 3 dynamic library
'pyxversion'	  'pyx'	    Python version used for pyx* commands
'quoteescape'	  'qe'	    escape characters used in a string
'readonly'	  'ro'	    disallow writing the buffer
'redrawtime'	  'rdt'     timeout for 'hlsearch' and |:match| highlighting
'regexpengine'	  're'	    default regexp engine to use
'relativenumber'  'rnu'	    show relative line number in front of each line
'remap'			    allow mappings to work recursively
'renderoptions'	  'rop'	    options for text rendering on Windows
'report'		    threshold for reporting nr. of lines changed
'restorescreen'   'rs'	    Win32: restore screen when exiting
'revins'	  'ri'	    inserting characters will work backwards
'rightleft'	  'rl'	    window is right-to-left oriented
'rightleftcmd'	  'rlc'     commands for which editing works right-to-left
'rubydll'		    name of the Ruby dynamic library
'ruler'		  'ru'	    show cursor line and column in the status line
'rulerformat'	  'ruf'     custom format for the ruler
'runtimepath'	  'rtp'     list of directories used for runtime files
'scroll'	  'scr'     lines to scroll with CTRL-U and CTRL-D
'scrollbind'	  'scb'     scroll in window as other windows scroll
'scrolljump'	  'sj'	    minimum number of lines to scroll
'scrolloff'	  'so'	    minimum nr. of lines above and below cursor
'scrollopt'	  'sbo'     how 'scrollbind' should behave
'sections'	  'sect'    nroff macros that separate sections
'secure'		    secure mode for reading .vimrc in current dir
'selection'	  'sel'     what type of selection to use
'selectmode'	  'slm'     when to use Select mode instead of Visual mode
'sessionoptions'  'ssop'    options for |:mksession|
'shell'		  'sh'	    name of shell to use for external commands
'shellcmdflag'	  'shcf'    flag to shell to execute one command
'shellpipe'	  'sp'	    string to put output of ":make" in error file
'shellquote'	  'shq'     quote character(s) for around shell command
'shellredir'	  'srr'     string to put output of filter in a temp file
'shellslash'	  'ssl'     use forward slash for shell file names
'shelltemp'	  'stmp'    whether to use a temp file for shell commands
'shelltype'	  'st'	    Amiga: influences how to use a shell
'shellxescape'	  'sxe'     characters to escape when 'shellxquote' is (
'shellxquote'	  'sxq'     like 'shellquote', but include redirection
'shiftround'	  'sr'	    round indent to multiple of shiftwidth
'shiftwidth'	  'sw'	    number of spaces to use for (auto)indent step
'shortmess'	  'shm'     list of flags, reduce length of messages
'shortname'	  'sn'	    non-MS-DOS: Filenames assumed to be 8.3 chars
'showbreak'	  'sbr'     string to use at the start of wrapped lines
'showcmd'	  'sc'	    show (partial) command in status line
'showfulltag'	  'sft'     show full tag pattern when completing tag
'showmatch'	  'sm'	    briefly jump to matching bracket if insert one
'showmode'	  'smd'     message on status line to show current mode
'showtabline'	  'stal'    tells when the tab pages line is displayed
'sidescroll'	  'ss'	    minimum number of columns to scroll horizontal
'sidescrolloff'   'siso'    min. nr. of columns to left and right of cursor
'signcolumn'	  'scl'	    when to display the sign column
'smartcase'	  'scs'     no ignore case when pattern has uppercase
'smartindent'	  'si'	    smart autoindenting for C programs
'smarttab'	  'sta'     use 'shiftwidth' when inserting <Tab>
'softtabstop'	  'sts'     number of spaces that <Tab> uses while editing
'spell'			    enable spell checking
'spellcapcheck'   'spc'     pattern to locate end of a sentence
'spellfile'	  'spf'     files where |zg| and |zw| store words
'spelllang'	  'spl'     language(s) to do spell checking for
'spellsuggest'	  'sps'     method(s) used to suggest spelling corrections
'splitbelow'	  'sb'	    new window from split is below the current one
'splitright'	  'spr'     new window is put right of the current one
'startofline'	  'sol'     commands move cursor to first non-blank in line
'statusline'	  'stl'     custom format for the status line
'suffixes'	  'su'	    suffixes that are ignored with multiple match
'suffixesadd'	  'sua'     suffixes added when searching for a file
'swapfile'	  'swf'     whether to use a swapfile for a buffer
'swapsync'	  'sws'     how to sync the swap file
'switchbuf'	  'swb'     sets behavior when switching to another buffer
'synmaxcol'	  'smc'     maximum column to find syntax items
'syntax'	  'syn'     syntax to be loaded for current buffer
'tabline'	  'tal'     custom format for the console tab pages line
'tabpagemax'	  'tpm'     maximum number of tab pages for |-p| and "tab all"
'tabstop'	  'ts'	    number of spaces that <Tab> in file uses
'tagbsearch'	  'tbs'     use binary searching in tags files
'tagcase'	  'tc'      how to handle case when searching in tags files
'taglength'	  'tl'	    number of significant characters for a tag
'tagrelative'	  'tr'	    file names in tag file are relative
'tags'		  'tag'     list of file names used by the tag command
'tagstack'	  'tgst'    push tags onto the tag stack
'tcldll'		    name of the Tcl dynamic library
'term'			    name of the terminal
'termbidi'	  'tbidi'   terminal takes care of bi-directionality
'termencoding'	  'tenc'    character encoding used by the terminal
'termguicolors'	  'tgc'     use GUI colors for the terminal
'termkey'	  'tk'	    key that precedes a Vim command in a terminal
'termsize'	  'tms'	    size of a terminal window
'terse'			    shorten some messages
'textauto'	  'ta'	    obsolete, use 'fileformats'
'textmode'	  'tx'	    obsolete, use 'fileformat'
'textwidth'	  'tw'	    maximum width of text that is being inserted
'thesaurus'	  'tsr'     list of thesaurus files for keyword completion
'tildeop'	  'top'     tilde command "~" behaves like an operator
'timeout'	  'to'	    time out on mappings and key codes
'timeoutlen'	  'tm'	    time out time in milliseconds
'title'			    let Vim set the title of the window
'titlelen'		    percentage of 'columns' used for window title
'titleold'		    old title, restored when exiting
'titlestring'		    string to use for the Vim window title
'toolbar'	  'tb'	    GUI: which items to show in the toolbar
'toolbariconsize' 'tbis'    size of the toolbar icons (for GTK 2 only)
'ttimeout'		    time out on mappings
'ttimeoutlen'	  'ttm'     time out time for key codes in milliseconds
'ttybuiltin'	  'tbi'     use built-in termcap before external termcap
'ttyfast'	  'tf'	    indicates a fast terminal connection
'ttymouse'	  'ttym'    type of mouse codes generated
'ttyscroll'	  'tsl'     maximum number of lines for a scroll
'ttytype'	  'tty'     alias for 'term'
'undodir'	  'udir'    where to store undo files
'undofile'	  'udf'	    save undo information in a file
'undolevels'	  'ul'	    maximum number of changes that can be undone
'undoreload'	  'ur'	    max nr of lines to save for undo on a buffer reload
'updatecount'	  'uc'	    after this many characters flush swap file
'updatetime'	  'ut'	    after this many milliseconds flush swap file
'verbose'	  'vbs'     give informative messages
'verbosefile'	  'vfile'   file to write messages in
'viewdir'	  'vdir'    directory where to store files with :mkview
'viewoptions'	  'vop'     specifies what to save for :mkview
'viminfo'	  'vi'	    use .viminfo file upon startup and exiting
'viminfofile'	  'vif'	    file name used for the viminfo file
'virtualedit'	  've'	    when to use virtual editing
'visualbell'	  'vb'	    use visual bell instead of beeping
'warn'			    warn for shell command when buffer was changed
'weirdinvert'	  'wiv'	    for terminals that have weird inversion method
'whichwrap'	  'ww'	    allow specified keys to cross line boundaries
'wildchar'	  'wc'	    command-line character for wildcard expansion
'wildcharm'	  'wcm'     like 'wildchar' but also works when mapped
'wildignore'	  'wig'     files matching these patterns are not completed
'wildignorecase'  'wic'     ignore case when completing file names
'wildmenu'	  'wmnu'    use menu for command line completion
'wildmode'	  'wim'     mode for 'wildchar' command-line expansion
'wildoptions'	  'wop'     specifies how command line completion is done
'winaltkeys'	  'wak'     when the windows system handles ALT keys
'window'	  'wi'	    nr of lines to scroll for CTRL-F and CTRL-B
'winheight'	  'wh'	    minimum number of lines for the current window
'winfixheight'	  'wfh'     keep window height when opening/closing windows
'winfixwidth'	  'wfw'     keep window width when opening/closing windows
'winminheight'	  'wmh'     minimum number of lines for any window
'winminwidth'	  'wmw'     minimal number of columns for any window
'winptydll'		    name of the winpty dynamic library
'winwidth'	  'wiw'     minimal number of columns for current window
'wrap'			    long lines wrap and continue on the next line
'wrapmargin'	  'wm'	    chars from the right where wrapping starts
'wrapscan'	  'ws'	    searches wrap around the end of the file
'write'			    writing to a file is allowed
'writeany'	  'wa'	    write to file with no need for "!" override
'writebackup'	  'wb'	    make a backup before overwriting a file
'writedelay'	  'wd'	    delay this many msec for each char (for debug)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_op}
@cindex Q_op
@unnumberedsec オプション

@multitable @columnfractions .1 .3 .6
@item |:set| @tab :se[t] @tab 変更した全オプションを表示
@item |:set| @tab :se[t] all @tab termcap 以外の全オプションを表示
@item |:set| @tab :se[t] termcap @tab termcap オプションを表示
@item |:set| @tab :se[t] @{option@} @tab 論理値タイプの場合はオプション設定 (ON になる) 文字列、数値タイプでは内容を表示
@item |:set| @tab :se[t] no@{option@} @tab 論理値タイプのオプションを OFF に
@item |:set| @tab :se[t] inv@{option@} @tab 論理値タイプのオプションを反転。
@item |:set| @tab :se[t] @{option@}=@{value@} @tab 文字列/数値タイプのオプションの値を @{value@} に
@item |:set| @tab :se[t] @{option@}+=@{value@} @tab 文字列タイプのオプションに@{value@} を追加数値タイプなら加算
@item |:set| @tab :se[t] @{option@}-=@{value@} @tab 文字列タイプのオプションから@{value@} を除去数値タイプなら @{value@} を減算
@item |:set| @tab :se[t] @{option@}? @tab @{option@} の値を表示
@item |:set| @tab :se[t] @{option@}& @tab @{option@} の値をデフォルト値に
@item
@item |:setlocal| @tab :setl[ocal] @tab ":set" と同じ、ただしローカル値を設定する。
@item |:setglobal| @tab :setg[lobal] @tab ":set" と同じ、ただしローカルオプションのグローバル値を設定する。
@item
@item |:fix| @tab :fix[del] @tab 't_kb' の値に従って、't_kD' の値をセットする。
@item |:options| @tab :opt[ions] @tab オプションの閲覧と設定を行うために新たなウィンドウを開く。一覧は機能順に並べられ、各行にはオプションの説明とヘルプへのリンクをつけてある。
@end multitable

@anchor{option-list}
@cindex option-list
@unnumberedsubsec 各オプションの簡易説明:

@multitable @columnfractions .2 .15 .65
@item 'aleph' @tab 'al' @tab Aleph 文字(ヘブライ語)用の ASCII コードとする
@item 'allowrevins' @tab 'ari' @tab 挿入モードとコマンドラインモードで、@kbd{CTRL-_} を使うことを認める。
@item 'altkeymap' @tab 'akm' @tab デフォルトの第 2 言語(ペルシア/ヘブライ)
@item 'ambiwidth' @tab 'ambw' @tab Unicode 文字の不明瞭な文字幅を決定する
@item 'antialias' @tab 'anti' @tab Mac OS X: フォントを滑らかに表示する。
@item 'autochdir' @tab 'acd' @tab 現在編集中のファイルのディレクトリに変更する
@item 'arabic' @tab 'arab' @tab デフォルトでアラビア語を2番目の言語にする
@item 'arabicshape' @tab 'arshape' @tab アラビア文字を整える
@item 'autoindent' @tab 'ai' @tab 直前の行から新しい行のインデントを得る
@item 'autoread' @tab 'ar' @tab Vim 以外でファイル変更した時に自動再読み込みする
@item 'autowrite' @tab 'aw' @tab 変更があったら、自動的に書き出す
@item 'autowriteall' @tab 'awa' @tab '@option{autowrite}' と同様だが、より多くのコマンドと連動
@item 'background' @tab 'bg' @tab "dark"/"light": ハイライト色の指定に使用
@item 'backspace' @tab 'bs' @tab 行頭でのバックスペースの振る舞いをカスタマイズ
@item 'backup' @tab 'bk' @tab 上書きした時にバックアップを作成する。
@item 'backupcopy' @tab 'bkc' @tab ファイルをリネームするのではなく、コピーする。
@item 'backupdir' @tab 'bdir' @tab バックアップファイル用のディレクトリを指定
@item 'backupext' @tab 'bex' @tab バックアップファイル用の拡張子
@item 'backupskip' @tab 'bsk' @tab 指定のパターンに合致するファイルはバックアップしない。
@item 'balloondelay' @tab 'bdlay' @tab バルーンウィンドウが出るまでの遅延時間(ms)
@item 'ballooneval' @tab 'beval' @tab バルーン評価の ON/OFF
@item 'balloonexpr' @tab 'bexpr' @tab バルーンウィンドウに表示する式
@item 'belloff' @tab 'bo' @tab 指定した場合にベルを鳴らさない
@item 'binary' @tab 'bin' @tab バイナリモードで、読み/書き/編集する
@item 'bioskey' @tab 'biosk' @tab MS-DOS専用: 文字入力に BIOS コールを使う
@item 'bomb' @tab  @tab ファイルの先頭に BOM を付加する
@item 'breakat' @tab 'brk' @tab '@option{linebreak}' がオンのとき、改行を引き起こす文字
@item 'breakindent' @tab 'bri' @tab 折り返された行でインデントを繰り返す
@item 'breakindentopt' @tab 'briopt' @tab '@option{breakindent}' のための設定
@item 'browsedir' @tab 'bsdir' @tab ブラウズを始めるディレクトリ
@item 'bufhidden' @tab 'bh' @tab ウィンドウに繋がったバッファがなくなった時の動作
@item 'buflisted' @tab 'bl' @tab バッファリストにバッファを表示するかどうか
@item 'buftype' @tab 'bt' @tab バッファのタイプ
@item 'casemap' @tab 'cmp' @tab 文字の大小の変換方法を決める
@item 'cdpath' @tab 'cd' @tab ":cd" コマンドで検索するディレクトリ
@item 'cedit' @tab  @tab コマンドラインウィンドウを開くためのキー
@item 'charconvert' @tab 'ccv' @tab 文字コードの変換に使用する式
@item 'cindent' @tab 'cin' @tab C言語用のインデントを行う
@item 'cinkeys' @tab 'cink' @tab '@option{cindent}' が有効な際に押すとインデントするキー
@item 'cinoptions' @tab 'cino' @tab '@option{cindent}' が有効な際のインデント方法
@item 'cinwords' @tab 'cinw' @tab '@option{si}'、'@option{cin}' によるインデントの開始文字
@item 'clipboard' @tab 'cb' @tab 無名レジスタ操作でクリップボードを使う
@item 'cmdheight' @tab 'ch' @tab コマンドラインの行数
@item 'cmdwinheight' @tab 'cwh' @tab コマンドラインウィンドウの行数
@item 'colorcolumn' @tab 'cc' @tab 列を強調表示する
@item 'columns' @tab 'co' @tab 画面上の桁数
@item 'comments' @tab 'com' @tab コメント行の開始を示すパターン
@item 'commentstring' @tab 'cms' @tab コメント用テンプレート(foldマーカー用)
@item 'compatible' @tab 'cp' @tab 可能な限りVi互換で動く
@item 'complete' @tab 'cpt' @tab 挿入モードでの補完の動きを指定する
@item 'completefunc' @tab 'cfu' @tab 挿入モードでの補完に使われる関数
@item 'completeopt' @tab 'cot' @tab 挿入モードでの補完のオプション
@item 'concealcursor' @tab 'cocu' @tab カーソル行の Conceal テキストを表示するかどうか
@item 'conceallevel' @tab 'cole' @tab Conceal テキストを表示するかどうか
@item 'confirm' @tab 'cf' @tab 未保存ファイル、リードオンリーファイルの確認方法
@item 'conskey' @tab 'consk' @tab コンソールからの直接キー検出(MS-DOSのみ)
@item 'copyindent' @tab 'ci' @tab '@option{autoindent}' がすでにあるインデントを参考にする
@item 'cpoptions' @tab 'cpo' @tab vi 互換な振る舞いのフラグ集
@item 'cryptmethod' @tab 'cm' @tab ファイルの保存に使用する暗号化の種類
@item 'cscopepathcomp' @tab 'cspc' @tab 表示するファイルパスの深さ
@item 'cscopeprg' @tab 'csprg' @tab cscope の実行ファイル
@item 'cscopequickfix' @tab 'csqf' @tab cscope の結果の表示に QuickFix ウィンドウを使う
@item 'cscoperelative' @tab 'csre' @tab cscope.out のディレクトリパスをプリフィックスとして使う
@item 'cscopetag' @tab 'cst' @tab タグコマンドで cscope を使う
@item 'cscopetagorder' @tab 'csto' @tab |@command{:cstag}| が検索する順番を決める
@item 'cscopeverbose' @tab 'csverb' @tab cscope データベースに追加時にメッセージを表示
@item 'cursorbind' @tab 'crb' @tab カーソルを移動させたときに他のウィンドウ内でもカーソルを移動させる
@item 'cursorcolumn' @tab 'cuc' @tab カーソルがある桁を強調表示する
@item 'cursorline' @tab 'cul' @tab カーソルがある行を強調表示する
@item 'debug' @tab  @tab "msg" と設定すると全てのエラーが表示される
@item 'define' @tab 'def' @tab マクロ定義検索パターン
@item 'delcombine' @tab 'deco' @tab 合成文字の削除時に構成要素を全て消す
@item 'dictionary' @tab 'dict' @tab キーワード補完に使うファイルのリスト
@item 'diff' @tab  @tab そのウィンドウで差分モードを使う
@item 'diffexpr' @tab 'dex' @tab 差分取得に使う式
@item 'diffopt' @tab 'dip' @tab 差分モードに使うオプション
@item 'digraph' @tab 'dg' @tab 挿入モードでダイグラフの入力を有効にする
@item 'directory' @tab 'dir' @tab スワップファイル用のディレクトリのリスト
@item 'display' @tab 'dy' @tab テキストの表示方法を指定する
@item 'eadirection' @tab 'ead' @tab '@option{equalalways}' の適用方向を決める
@item 'edcompatible' @tab 'ed' @tab |@command{:substitute}|のフラグを切替える
@item 'emoji' @tab 'emo' @tab 絵文字を全角として扱う
@item 'encoding' @tab 'enc' @tab 内部で使用する文字コード
@item 'endofline' @tab 'eol' @tab ファイル末尾に<EOL>を書く
@item 'equalalways' @tab 'ea' @tab ウィンドウを自動で同じ大きさに調整する
@item 'equalprg' @tab 'ep' @tab |=|で使用する外部プログラム
@item 'errorbells' @tab 'eb' @tab エラー表示時にベルを鳴らす
@item 'errorfile' @tab 'ef' @tab QuickFix モードで使うファイルの名前
@item 'errorformat' @tab 'efm' @tab エラーファイルの書式の定義
@item 'esckeys' @tab 'ek' @tab 挿入モードでファンクションキーを有効にする
@item 'eventignore' @tab 'ei' @tab 無視するオートコマンドイベント
@item 'expandtab' @tab 'et' @tab @key{<Tab>}入力でスペースを入力する
@item 'exrc' @tab 'ex' @tab カレントディレクトリの @file{.vimrc} と @file{.exrc} を読み込む
@item 'fileencoding' @tab 'fenc' @tab ファイルの文字コード指定
@item 'fileencodings' @tab 'fencs' @tab 自動認識する '@option{fileencoding}' のリスト
@item 'fileformat' @tab 'ff' @tab ファイル入出力時のファイルのフォーマット
@item 'fileformats' @tab 'ffs' @tab 自動認識する '@option{fileformat}' のリスト
@item 'fileignorecase' @tab 'fic' @tab ファイル名の大文字と小文字を区別するかどうか
@item 'filetype' @tab 'ft' @tab オートコマンドで使うファイルタイプ名
@item 'fillchars' @tab 'fcs' @tab 特殊な表示に使う文字
@item 'fixendofline' @tab 'fixeol' @tab ファイル末尾に <EOL> を必ずつける
@item 'fkmap' @tab 'fk' @tab ペルシア語のキーボードマッピング
@item 'foldclose' @tab 'fcl' @tab カーソル下以外の折畳みを閉じる
@item 'foldcolumn' @tab 'fdc' @tab 折畳みを示すのに使う列幅
@item 'foldenable' @tab 'fen' @tab 全ての折畳みの開閉を設定する
@item 'foldexpr' @tab 'fde' @tab '@option{foldmethod}' が "@var{expr}" の時に使う式
@item 'foldignore' @tab 'fdi' @tab '@option{foldmethod}' が "@var{indent}" の時に無視する行
@item 'foldlevel' @tab 'fdl' @tab この値より高いレベルの折畳みを閉じる
@item 'foldlevelstart' @tab 'fdls' @tab '@option{foldlevel}' の初期値
@item 'foldmarker' @tab 'fmr' @tab '@option{foldmethod}' が "@var{marker}" の時に使うマーカー
@item 'foldmethod' @tab 'fdm' @tab 折畳みの種類
@item 'foldminlines' @tab 'fml' @tab 閉じることのできる折畳みの最小行数
@item 'foldnestmax' @tab 'fdn' @tab 折畳みの深さの制限
@item 'foldopen' @tab 'fdo' @tab 折畳みを開くことのできるコマンド
@item 'foldtext' @tab 'fdt' @tab 閉じた折畳みの表示に使う式
@item 'formatexpr' @tab 'fex' @tab |gq|で使う式
@item 'formatlistpat' @tab 'flp' @tab リストのヘッダーを認識するためのパターン
@item 'formatoptions' @tab 'fo' @tab 自動整形の動作定義
@item 'formatprg' @tab 'fp' @tab |gq|で使う外部プログラム
@item 'fsync' @tab 'fs' @tab ファイルを書き込んだ後に fsync() を呼ぶかどうか
@item 'gdefault' @tab 'gd' @tab |@command{:substitute}|で "@var{g}" を既定で有効にする
@item 'grepformat' @tab 'gfm' @tab '@option{grepprg}' の出力の書式
@item 'grepprg' @tab 'gp' @tab |@command{:grep}|で使う外部プログラム
@item 'guicursor' @tab 'gcr' @tab GUI: カーソルの形と点滅を設定する
@item 'guifont' @tab 'gfn' @tab GUI: 使用するフォント(複数可)
@item 'guifontset' @tab 'gfs' @tab GUI: マルチバイト用のフォント
@item 'guifontwide' @tab 'gfw' @tab 全角文字用のフォントのリスト
@item 'guiheadroom' @tab 'ghr' @tab GUI: ウィンドウ装飾用の余地。ピクセル単位
@item 'guioptions' @tab 'go' @tab GUI: GUIに特化したオプション
@item 'guipty' @tab  @tab GUI: |@command{:!}|で pseudo-tty の使用を試みる
@item 'guitablabel' @tab 'gtl' @tab GUI: タブページのラベル設定
@item 'guitabtooltip' @tab 'gtt' @tab GUI: タブページのツールチップ設定
@item 'helpfile' @tab 'hf' @tab メインのヘルプファイルのフルパス指定
@item 'helpheight' @tab 'hh' @tab ヘルプウィンドウの最小高さ
@item 'helplang' @tab 'hlg' @tab 優先するヘルプ用の言語
@item 'hidden' @tab 'hid' @tab バッファが |abandon| (捨て)られても破棄しない
@item 'highlight' @tab 'hl' @tab 様々な対象に対する強調表示モードの設定
@item 'history' @tab 'hi' @tab コマンドライン履歴の記録数
@item 'hkmap' @tab 'hk' @tab ヘブライ語のキーボードマッピング
@item 'hkmapp' @tab 'hkp' @tab 発音に即したヘブライ語のキーボードマッピング
@item 'hlsearch' @tab 'hls' @tab 最後に検索したパターンを強調表示する
@item 'icon' @tab  @tab Vim のアイコン表示でテキストを変更するようにする
@item 'iconstring' @tab  @tab Vim のアイコン表示に使用するテキスト
@item 'ignorecase' @tab 'ic' @tab 検索パターンで大文字と小文字を区別しない
@item 'imactivatefunc' @tab 'imaf' @tab X のインプットメソッドをオン/オフにする関数
@item 'imactivatekey' @tab 'imak' @tab X のインプットメソッドをオンにするキー
@item 'imcmdline' @tab 'imc' @tab コマンドライン入力時に IM を有効にする
@item 'imdisable' @tab 'imd' @tab どのモードでも IM を使わない
@item 'iminsert' @tab 'imi' @tab 挿入モードで |@command{:lmap}| や IM を使う
@item 'imsearch' @tab 'ims' @tab 検索パターン入力時に |@command{:lmap}| や IM を使う
@item 'imstatusfunc' @tab 'imsf' @tab X のインプットメソッドの状態を得る関数
@item 'imstyle' @tab 'imst' インプットメソッドの入力スタイルを明記する
@item 'include' @tab 'inc' @tab インクルードファイルの検索パターン
@item 'includeexpr' @tab 'inex' @tab インクルード行を処理する式
@item 'incsearch' @tab 'is' @tab 検索パターン入力中にその文字を強調表示する
@item 'indentexpr' @tab 'inde' @tab 行をインデントする式
@item 'indentkeys' @tab 'indk' @tab '@option{indentexpr}' でインデントを開始するキー
@item 'infercase' @tab 'inf' @tab キーワード補完で大文字小文字を調整する
@item 'insertmode' @tab 'im' @tab 挿入モードで編集を開始する
@item 'isfname' @tab 'isf' @tab ファイル名、パス名に含まれる文字
@item 'isident' @tab 'isi' @tab 識別子に含まれる文字
@item 'iskeyword' @tab 'isk' @tab キーワードに含まれる文字
@item 'isprint' @tab 'isp' @tab 視覚可能な文字
@item 'joinspaces' @tab 'js' @tab 行連結時にピリオドの後に空白を2つ入れる
@item 'key' @tab  @tab 暗号鍵
@item 'keymap' @tab 'kmp' @tab キーボードマッピングの名前
@item 'keymodel' @tab 'km' @tab 範囲選択を開始/終了するキー
@item 'keywordprg' @tab 'kp' @tab |K| で使う外部プログラム
@item 'langmap' @tab 'lmap' @tab 他の言語モードでの文字
@item 'langmenu' @tab 'lm' @tab メニュー表示用言語
@item 'langremap' @tab 'lrm' @tab マッピングされた文字に '@option{langmap}' を適用する
@item 'laststatus' @tab 'ls' @tab 最下ウィンドウにいつステータス行を表示するか
@item 'lazyredraw' @tab 'lz' @tab マクロ実行中に表示を更新しない
@item 'linebreak' @tab 'lbr' @tab 長い行を空白で折り返す
@item 'lines' @tab  @tab 表示行数
@item 'linespace' @tab 'lsp' @tab 行間のピクセル数
@item 'lisp' @tab  @tab Lisp 用自動インデント
@item 'lispwords' @tab 'lw' @tab Lisp 用インデントの動作定義
@item 'list' @tab  @tab <Tab> や <EOL> を表示する
@item 'listchars' @tab 'lcs' @tab '@option{list}' オン時に使う文字
@item 'loadplugins' @tab 'lpl' @tab 起動時にプラグインスクリプトを読み込む
@item 'luadll' @tab  @tab Lua 動的ライブラリの名前
@item 'macatsui' @tab  @tab Mac GUI: ATSUI テキスト描画を使う
@item 'magic' @tab  @tab 検索パターン内の特殊文字を変更する
@item 'makeef' @tab 'mef' @tab |@command{:make}| 用のエラーファイル
@item 'makeencoding' @tab 'menc' @tab 外部 make/grep コマンドのエンコーディング
@item 'makeprg' @tab 'mp' @tab |@command{:make}| で使う外部プログラム
@item 'matchpairs' @tab 'mps' @tab |@command{%}| で探す文字ペア
@item 'matchtime' @tab 'mat' @tab '@option{showmatch}' で対応カッコを表示する時間。0.1秒単位
@item 'maxcombine' @tab 'mco' @tab 表示できる文字の組合せの最大数
@item 'maxfuncdepth' @tab 'mfd' @tab ユーザー定義関数の再帰呼び出しの最大数
@item 'maxmapdepth' @tab 'mmd' @tab マッピングの再帰定義の最大数
@item 'maxmem' @tab 'mm' @tab 1 つのバッファに使える最大メモリ(Kbyte単位)
@item 'maxmempattern' @tab 'mmp' @tab 検索に使える最大メモリ(Kbyte単位)
@item 'maxmemtot' @tab 'mmt' @tab 全てのバッファに使える最大メモリ(Kbyte単位)
@item 'menuitems' @tab 'mis' @tab メニューに登録できる項目の最大数
@item 'mkspellmem' @tab 'msm' @tab |@command{:mkspell}|がツリーを圧縮する前に使われるメモリ
@item 'modeline' @tab 'ml' @tab ファイルの先頭や末尾のモードラインを許可する
@item 'modelines' @tab 'mls' @tab モードラインをチェックする行数
@item 'modifiable' @tab 'ma' @tab ファイルの変更許可
@item 'modified' @tab 'mod' @tab バッファが変更されているか
@item 'more' @tab  @tab スクリーンを埋めるような出力で一時停止するか
@item 'mouse' @tab  @tab マウスを使うか
@item 'mousefocus' @tab 'mousef' @tab マウスの移動でキーボードのフォーカスを移動する
@item 'mousehide' @tab 'mh' @tab 入力時にマウスポインタを非表示にする
@item 'mousemodel' @tab 'mousem' @tab マウスボタンの機能を変える
@item 'mouseshape' @tab 'mouses' @tab モード別にマウスポインタの形を変える
@item 'mousetime' @tab 'mouset' @tab ダブルクリックの間隔時間
@item 'mzquantum' @tab 'mzq' @tab MzScheme スレッドに切り替える間隔
@item 'nrformats' @tab 'nf' @tab @kbd{CTRL-A} 用の数値書式
@item 'number' @tab 'nu' @tab 行番号を表示する
@item 'numberwidth' @tab 'nuw' @tab 行番号に使われる桁数
@item 'omnifunc' @tab 'ofu' @tab ファイルタイプごとの補完に使われる
@item 'opendevice' @tab 'odev' @tab MS-Windows 上でデバイスの読み書きを許可する
@item 'operatorfunc' @tab 'opfunc' @tab オペレータ |g@@| で呼ばれる関数
@item 'osfiletype' @tab 'oft' @tab もうサポートされていない
@item 'packpath' @tab 'pp' @tab パッケージのために使われるディレクトリのリスト
@item 'paragraphs' @tab 'para' @tab 段落を分けるための nroff のマクロ
@item 'paste' @tab  @tab Pasteモードに移行
@item 'pastetoggle' @tab 'pt' @tab '@option{paste}' を切替えるキー
@item 'patchexpr' @tab 'pex' @tab パッチを適用するための式
@item 'patchmode' @tab 'pm' @tab 最初のバージョンを保全する
@item 'path' @tab 'pa' @tab  |gf| などでファイルを検索するディレクトリのリスト
@item 'perldll' @tab  @tab Perl 動的ライブラリの名前
@item 'preserveindent' @tab 'pi' @tab 再インデント時にインデントの構造を保つ
@item 'previewheight' @tab 'pvh' @tab プレビューウィンドウの高さ
@item 'previewwindow' @tab 'pvw' @tab プレビューウィンドウかどうか
@item 'printdevice' @tab 'pdev' @tab |@command{:hardcopy}| で使うプリンタの名前
@item 'printencoding' @tab 'penc' @tab 印刷で使う文字コード
@item 'printexpr' @tab 'pexpr' @tab |@command{:hardcopy}| で PostScript を印刷するための式
@item 'printfont' @tab 'pfn' @tab |@command{:hardcopy}| で使用するフォント
@item 'printheader' @tab 'pheader' @tab |@command{:hardcopy}| で使用するヘッダー
@item 'printmbcharset' @tab 'pmbcs' @tab |@command{:hardcopy}| に使われるCJK文字集合
@item 'printmbfont' @tab 'pmbfn' @tab |@command{:hardcopy}| の出力に使われるフォント名
@item 'printoptions' @tab 'popt' @tab |@command{:hardcopy}| の出力をコントロールする
@item 'pumheight' @tab 'ph' @tab ポップアップメニューの高さの最大値
@item 'prompt' @tab 'prompt' @tab Ex モードでプロンプトを有効にする
@item 'pythondll' @tab @tab Python 2 動的ライブラリの名前
@item 'pythonthreedll' @tab @tab Python 3 動的ライブラリの名前
@item 'pyxversion' @tab 'pyx' @tab pyx* コマンドに使用される Python のバージョン
@item 'quoteescape' @tab 'qe' @tab 文字列中に使われるエスケープ文字
@item 'readonly' @tab 'ro' @tab バッファの書き込みを制限する
@item 'redrawtime' @tab 'rdt' @tab '@option{hlsearch}' と |@command{:match}| のハイライトのタイムアウト
@item 'regexpengine' @tab 're' @tab デフォルトで使用する正規表現エンジン
@item 'relativenumber' @tab 'rnu' @tab 相対行番号を表示する
@item 'remap' @tab @tab 再帰的マッピングを有効にする
@item 'renderoptions' @tab 'rop' @tab Windows でのテキストレンダリングの設定
@item 'report' @tab @tab 変更された行の数の方向が出る最小値
@item 'restorescreen' @tab 'rs' @tab Win32: 終了時スクリーンを更新する
@item 'revins' @tab 'ri' @tab 挿入モードで入力方向が逆になる
@item 'rightleft' @tab 'rl' @tab "右から左" 指向のウィンドウ
@item 'rightleftcmd' @tab 'rlc' @tab "右から左" に入力するコマンド
@item 'rubydll' @tab @tab Ruby 動的ライブラリの名前
@item 'ruler' @tab 'ru' @tab ステータスラインにカーソルが位置する場所を表示する
@item 'rulerformat' @tab 'ruf' @tab '@option{ruler}' 用のフォーマット
@item 'runtimepath' @tab 'rtp' @tab ランタイムファイル用のディレクトリのリスト
@item 'scroll' @tab 'scr' @tab @kbd{CTRL-U} や @kbd{CTRL-D} でスクロールする行数
@item 'scrollbind' @tab 'scb' @tab 他のウィンドウと同期してスクロールする
@item 'scrolljump' @tab 'sj' @tab スクロールする行数の最小値
@item 'scrolloff' @tab 'so' @tab カーソルの上下に確保する表示行
@item 'scrollopt' @tab 'sbo' @tab '@option{scrollbind}' がどのように振舞うか
@item 'sections' @tab 'sect' @tab 節を分けるための nroff のマクロ
@item 'secure' @tab @tab カレントディレクトリの @file{.vimrc} を安全に読む
@item 'selection' @tab 'sel' @tab 選択時の動作を設定する
@item 'selectmode' @tab 'slm' @tab ビジュアルモードでなく選択モードを開始する条件
@item 'sessionoptions' @tab 'ssop' @tab |@command{:mksession}|用のオプション
@item 'shell' @tab 'sh' @tab 外部プログラム使用時のシェル
@item 'shellcmdflag' @tab 'shcf' @tab シェル実行時のフラグ
@item 'shellpipe' @tab 'sp' @tab |@command{:make}|の出力をエラーファイルに入れるのに使う文字
@item 'shellquote' @tab 'shq' @tab シェルで使う引用符
@item 'shellredir' @tab 'srr' @tab フィルタの出力を一時ファイルに入れるのに使う文字
@item 'shellslash' @tab 'ssl' @tab シェルで使うファイルのパス区切りに使う
@item 'shelltemp' @tab 'stmp' @tab シェルコマンドに一時ファイルを使うかどうか
@item 'shelltype' @tab 'st' @tab Amiga: シェルの使い方に影響する
@item 'shellxescape' @tab 'sxe' @tab '@option{shellxquote}' が '@var{(}' のときにエスケープする文字
@item 'shellxquote' @tab 'sxq' @tab '@option{shellquote}' に似ているがリダイレクションを含む
@item 'shiftround' @tab 'sr' @tab インデントを '@option{shiftwidth}' の倍数に丸める
@item 'shiftwidth' @tab 'sw' @tab (自動的な)インデントに使うシフト幅
@item 'shortmess' @tab 'shm' @tab メッセージを短縮するフラグのリスト
@item 'shortname' @tab 'sn' @tab MS-DOS 以外: ファイル名が 8.3 形式であると仮定する
@item 'showbreak' @tab 'sbr' @tab 折り返し表示された行の最初に表示する文字
@item 'showcmd' @tab 'sc' @tab (未完の)コマンドをステータス行に表示する
@item 'showfulltag' @tab 'sft' @tab タグで補完する時完全なタグのパターンを表示する
@item 'showmatch' @tab 'sm' @tab 括弧入力時に対応する括弧を知らせる
@item 'showmode' @tab 'smd' @tab ステータスラインに現在のモードを表示する
@item 'showtabline' @tab 'stal' @tab いつタブページ行を表示するか
@item 'sidescroll' @tab 'ss' @tab 水平スクロールの刻み幅
@item 'sidescrolloff' @tab 'siso' @tab カーソルの左右に確保する表示幅
@item 'smartcase' @tab 'scs' @tab パターンが大文字を含むときは文字の大小を区別する
@item 'signcolumn' @tab 'scl' @tab 目印用の桁をどう表示するか
@item 'smartindent' @tab 'si' @tab C 言語用の高度な自動インデント
@item 'smarttab' @tab 'sta' @tab @key{<Tab>}入力時に '@option{shiftwidth}' を使う
@item 'softtabstop' @tab 'sts' @tab @key{<Tab>}で入力する空白の数
@item 'spell' @tab  @tab スペルチェッキングを有効にする
@item 'spellcapcheck' @tab 'spc' @tab スペルチェッキングを有効にする
@item 'spellfile' @tab 'spf' @tab |zg| と |zw| が単語を保存するファイル
@item 'spelllang' @tab 'spl' @tab スペルチェックをする言語
@item 'spellsuggest' @tab 'sps' @tab スペリング訂正をするのに使われるメソッド
@item 'splitbelow' @tab 'sb' @tab ウィンドウの横分割で新規ウィンドウを下に作る
@item 'splitright' @tab 'spr' @tab ウィンドウの縦分割で新規ウィンドウを右に作る
@item 'startofline' @tab 'sol' @tab カーソル移動コマンドで行の最初の非空白へ移動する
@item 'statusline' @tab 'stl' @tab ステータスラインの表示内容を設定する
@item 'suffixes' @tab 'su' @tab ファイルが複数マッチした時に無視する拡張子
@item 'suffixesadd' @tab 'sua' @tab 検索対象のファイルの拡張子
@item 'swapfile' @tab 'swf' @tab スワップファイルを使うかどうか
@item 'swapsync' @tab 'sws' @tab スワップファイルの同期方法
@item 'switchbuf' @tab 'swb' @tab バッファ切替え時の動作
@item 'synmaxcol' @tab 'sws' @tab この桁までしか構文アイテムを探さない
@item 'syntax' @tab 'syn' @tab カレントバッファの構文強調表示の定義
@item 'tabline' @tab 'tal' @tab コンソールのタブページラインのカスタムフォーマット
@item 'tabpagemax' @tab 'tpm' @tab タブページの最大数。|-p|と "tab all" に使われる
@item 'tabstop' @tab 'ts' @tab @key{<Tab>}の表示幅
@item 'tagbsearch' @tab 'tbs' @tab タグファイル内の検索に二分探索を使う
@item 'tagcase' @tab 'tc' @tab タグファイル内検索で大文字小文字の扱いを指定する
@item 'taglength' @tab 'tl' @tab タグ名はこの文字数までしか意味を持たない
@item 'tagrelative' @tab 'tr' @tab タグファイル内のファイル名が相対的になる
@item 'tags' @tab 'tag' @tab タグコマンドで使うファイルのリスト
@item 'tagstack' @tab 'tgst' @tab タグスタックにタグをプッシュする
@item 'tcldll' @tab  @tab Tcl 動的ライブラリの名前
@item 'term' @tab  @tab ターミナルの名前
@item 'termbidi' @tab 'tbidi' @tab ターミナルが双方向性を持っている
@item 'termencoding' @tab 'tenc' @tab ターミナルが使用する文字コード
@item 'termguicolors' @tab 'tgc' @tab ターミナルで GUI カラーを使う
@item 'termkey' @tab 'tk' @tab ターミナルで Vim コマンドの前に使う文字
@item 'termsize' @tab 'tms' @tab ターミナルウィンドウのサイズ
@item 'terse' @tab  @tab いくつかのメッセージを省略する
@item 'textauto' @tab 'ta' @tab 廃止。今は '@option{fileformats}' を使う
@item 'textmode' @tab 'tx' @tab 廃止。今は '@option{fileformat}' を使う
@item 'textwidth' @tab 'tw' @tab 入力されているテキストの最大幅
@item 'thesaurus' @tab 'tsr' @tab キーワード補完に使う thesaurus ファイルのリスト
@item 'tildeop' @tab 'top' @tab "~" がオペレータのように振舞う
@item 'timeout' @tab 'to' @tab マッピングやキーコード入力の時間制限
@item 'timeoutlen' @tab 'tm' @tab 入力をタイムアウトにするミリ秒単位の時間
@item 'title' @tab  @tab ウィンドウのタイトルを変更するようにする
@item 'titlelen' @tab  @tab ウィンドウのタイトルの '@option{columns}' (列幅)の割合
@item 'titleold' @tab  @tab 終了時に戻す古いタイトル
@item 'titlestring' @tab  @tab ウィンドウのタイトル
@item 'toolbar' @tab 'tb' @tab GUI: ツールバーに表示する内容
@item 'toolbariconsize' @tab 'tbis' @tab ツールバーアイコンのサイズ(GTK2だけ)
@item 'ttimeout' @tab  @tab マッピング入力の時間制限
@item 'ttimeoutlen' @tab 'ttm' @tab キーコード入力をタイムアウトにするミリ秒単位の時間
@item 'ttybuiltin' @tab 'tbi' @tab 外部の termcap の前に組込みの termcap を探す
@item 'ttyfast' @tab 'tf' @tab 高速ターミナル接続を行う
@item 'ttymouse' @tab 'ttym' @tab マウスコードの種類
@item 'ttyscroll' @tab 'tsl' @tab 画面をスクロールする行数の最大値
@item 'ttytype' @tab 'tty' @tab 'term' の別名
@item 'undodir' @tab 'udir' @tab アンドゥファイルの保存場所
@item 'undofile' @tab 'udf' @tab アンドゥ情報をファイルに保存する
@item 'undolevels' @tab 'ul' @tab アンドゥ可能な回数の最大値
@item 'undoreload' @tab 'ur' @tab バッファ再読み込み時にアンドゥを保存するかどうかを行数で制限する
@item 'updatecount' @tab 'uc' @tab この回数だけ入力するとスワップファイルを更新する
@item 'updatetime' @tab 'ut' @tab この時間だけ入力がなければスワップファイルを更新
@item 'verbose' @tab 'vbs' @tab 有益なメッセージを表示する
@item 'verbosefile' @tab 'vfile' @tab メッセージを書き込むファイル
@item 'viewdir' @tab 'vdir' @tab |@command{:mkview}| によるファイルを格納するディレクトリ
@item 'viewoptions' @tab 'vop' @tab |@command{:mkview}| の保存内容を決める
@item 'viminfo' @tab 'vi' @tab 起動時と終了時に @file{.viminfo} ファイルを使う
@item 'viminfofile' @tab 'vif' @tab viminfo ファイルに使うファイル名
@item 'virtualedit' @tab 've' @tab フリーカーソルモードを使う場面
@item 'visualbell' @tab 'vb' @tab ビープの代わりに Visual ベル(画面フラッシュ)を使用
@item 'warn' @tab  @tab バッファ変更済み時にシェル使用で警告する
@item 'weirdinvert' @tab 'wiv' @tab 変な強調表示方法を持つターミナル用
@item 'whichwrap' @tab 'ww' @tab 行を越えて機能するキーを設定する
@item 'wildchar' @tab 'wc' @tab コマンドラインでワイルドカードの展開に使うキー
@item 'wildcharm' @tab 'wcm' @tab '@option{wildchar}' に似た、マッピング内で使うもの
@item 'wildignore' @tab 'wig' @tab リスト内のどれかにマッチしたファイル名は補完しない
@item 'wildignorecase' @tab 'wic' @tab ファイル名を補完するときに大文字と小文字を無視する
@item 'wildmenu' @tab 'wmnu' @tab コマンドラインで補完候補をメニュー表示する
@item 'wildmode' @tab 'wim' @tab 'wildchar' の補完モード
@item 'wildoptions' @tab 'wop' @tab コマンドライン補完をどう行うか指定する
@item 'winaltkeys' @tab 'wak' @tab GUIでのALTキーの使い方
@item 'window' @tab 'wi' @tab @kbd{CTRL-F} と @kbd{CTRL-B} でスクロールする行数
@item 'winheight' @tab 'wh' @tab カレントウィンドウの行数の最小値
@item 'winfixheight' @tab 'wfh' @tab ウィンドウの高さをキープする
@item 'winfixwidth' @tab 'wfh' @tab ウィンドウの幅をキープする
@item 'winminheight' @tab 'wmh' @tab カレントウィンドウ以外のウィンドウの高さの最小値
@item 'winminwidth' @tab 'wmw' @tab カレントウィンドウ以外のウィンドウの幅の最小値
@item 'winptydll' @tab @tab winpty ダイナミックライブラリの名前
@item 'winwidth' @tab 'wiw' @tab カレントウィンドウの幅の最小値
@item 'wrap' @tab  @tab 長い行を折り返して表示する
@item 'wrapmargin' @tab 'wm' @tab 折り返しを開始する右端からの文字数
@item 'wrapscan' @tab 'ws' @tab 検索がファイル末尾まで進んだら先頭から再検索
@item 'write' @tab  @tab ファイルへの保存を許可する
@item 'writeany' @tab 'wa' @tab ファイルへの保存時は "!" がなくても上書きする。
@item 'writebackup' @tab 'wb' @tab 上書きする時にはバックアップを作る。
@item 'writedelay' @tab 'wd' @tab 入力の延滞時間を1/1000秒単位で指定(デバッグ用)
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_ur*		Undo/Redo commands

|u|       N  u		undo last N changes
|CTRL-R|  N  CTRL-R	redo last N undone changes
|U|          U		restore last changed line
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_ur}
@cindex Q_ur
@unnumberedsec Undo/Redo コマンド

@multitable @columnfractions .2 .1 .2 .5
@item |u| @tab N @tab u @tab 最後の N 回分の作業をアンドゥ
@item |CTRL-R| @tab N @tab @kbd{CTRL-R} @tab 最後の N 回分のアンドゥを取り消す(redo)
@item |U| @tab @tab U @tab 行全体への変更を取り消す
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_et*		External commands

|:shell|	:sh[ell]	start a shell
|:!|		:!{command}	execute {command} with a shell
|K|		   K		lookup keyword under the cursor with
				   'keywordprg' program (default: "man")
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_et}
@cindex Q_et
@unnumberedsec 外部コマンド

@multitable @columnfractions .1 .2 .7
@item |:shell| @tab :sh[ell] @tab シェルを起動する
@item |:!| @tab :!@{command@} @tab @{command@} をシェルで起動する
@item |K| @tab K @tab カーソル下にある単語を '@option{keywordprg}' 外部コマンドで調べる。(デフォルトは "man")
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_qf*		Quickfix commands

|:cc|		:cc [nr]	display error [nr] (default is the same again)
|:cnext|	:cn		display the next error
|:cprevious|	:cp		display the previous error
|:clist|	:cl		list all errors
|:cfile|	:cf		read errors from the file 'errorfile'
|:cgetbuffer|	:cgetb		like :cbuffer but don't jump to the first error
|:cgetfile|	:cg		like :cfile but don't jump to the first error
|:cgetexpr|	:cgete		like :cexpr but don't jump to the first error
|:caddfile|	:caddf		add errors from the error file to the current
				   quickfix list
|:caddexpr|	:cad		add errors from an expression to the current
				   quickfix list
|:cbuffer|	:cb		read errors from text in a buffer
|:cexpr|	:cex		read errors from an expression
|:cquit|	:cq		quit without writing and return error code (to
				   the compiler)
|:make|		:make [args]	start make, read errors, and jump to first
				   error
|:grep|		:gr[ep] [args]	execute 'grepprg' to find matches and jump to
				   the first one
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_qf}
@cindex Q_qf
@unnumberedsec Quickfix コマンド

@multitable @columnfractions .2 .1 .7
@item |:cc| @tab :cc [nr] @tab [nr] 番のエラーを表示(省略すると再表示)
@item |:cnext| @tab :cn @tab 次のエラーを表示
@item |:cprevious| @tab :cp @tab 1 つ前のエラーを表示
@item |:clist| @tab :cl @tab 全エラーの一覧を表示
@item |:cfile| @tab :cf @tab '@option{errorfile}' からエラーを読み込む
@item |:cgetbuffer| @tab :cgetb @tab @command{:cbuffer} と同様だが最初のエラーにジャンプしない
@item |:cgetfile| @tab :cg @tab @command{:cfile} と同様だが最初のエラーにジャンプしない
@item |:cgetexpr| @tab :cgete @tab @command{:cexpr} と同様だが最初のエラーにジャンプしない
@item |:caddfile| @tab :caddf @tab エラーファイルから現在の QuickFix リストにエラーを追加する
@item |:caddexpr| @tab :cad @tab 式から現在の QuickFix リストにエラーを追加する
@item |:cbuffer| @tab :cb @tab バッファ内のテキストからエラーを読み込む
@item |:cexpr| @tab :cex @tab 式からエラーを読み込む
@item |:cquit| @tab :cq @tab ファイルを保存せずに、(コンパイラに)エラーコードを戻して終了する
@item |:make| @tab :make [args] @tab makeする。エラーを開き最初のコンパイルエラーにジャンプ
@item |:grep| @tab :gr[ep] [args] @tab 'grepprg' を実行し、合致する最初の行にジャンプ
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_vc*		Various commands

|CTRL-L|	   CTRL-L	clear and redraw the screen
|CTRL-G|	   CTRL-G	show current file name (with path) and cursor
				   position
|ga|		   ga		show ascii value of character under cursor in
				   decimal, hex, and octal
|g8|		   g8		for utf-8 encoding: show byte sequence for
				   character under cursor in hex
|g_CTRL-G|	   g CTRL-G	show cursor column, line, and character
				   position
|CTRL-C|	   CTRL-C	during searches: Interrupt the search
|dos-CTRL-Break|   CTRL-Break	MS-DOS: during searches: Interrupt the search
|<Del>|		   <Del>	while entering a count: delete last character
|:version|	:ve[rsion]	show version information
|:mode|		:mode N		MS-DOS: set screen mode to N (number, C80,
				   C4350, etc.)
|:normal|	:norm[al][!] {commands}
				execute Normal mode commands
|Q|		   Q		switch to "Ex" mode

|:redir|	:redir >{file}		redirect messages to {file}
|:silent|	:silent[!] {command}	execute {command} silently
|:confirm|	:confirm {command}	quit, write, etc., asking about
					unsaved changes or read-only files
|:browse|	:browse {command}	open/read/write file, using a
					file selection dialog
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_vc}
@cindex Q_vc
@unnumberedsec さまざまなコマンド

@multitable @columnfractions .2 .25 .55
@item |CTRL-L| @tab @kbd{CTRL-L} @tab 画面の再描画
@item |CTRL-G| @tab @kbd{CTRL-G} @tab 現在の(パス名＋)ファイル名とカーソル位置を表示
@item |ga| @tab ga @tab カーソル位置の ASCII 文字コードを 10 進、16 進、8 進で表示
@item |g8| @tab g8 @tab utf-8 エンコーディング用: カーソル下の文字のバイト列を 16 進で表示する。
@item |g_CTRL-G| @tab g @kbd{CTRL-G} @tab カーソル桁数、行数、単語数、文字数を表示
@item |CTRL-C| @tab @kbd{CTRL-C} @tab 検索中: 検索を中止
@item |dos-CTRL-Break| @tab CTRL-Break @tab MS-DOS: 検索中: 検索を中止
@item |<Del>| @tab @key{<Del>} @tab 回数指定中: 最後の文字を削除
@item |:version| @tab :ve[rsion] @tab バージョン情報を表示
@item |:mode| @tab :mode N @tab MS-DOS: 画面モードを N (数字,C80,C4350,など)に
@item
@item |:normal| @tab :norm[al][!] @{commands@} @tab ノーマルモードコマンドを実行
@item |Q| @tab Q @tab "Ex" モードに移行
@item
@item |:redir| @tab :redir >@{file@} @tab メッセージを @{file@} にリダイレクト
@item |:silent| @tab :silent[!] @{command@} @tab @{command@} を寡黙に実行
@item |:confirm| @tab :confirm @{command@} @tab 終了時、保存時などに保存していない変更やリードオンリーの確認をする
@item |:browse| @tab :browse @{command@} @tab ファイルを開く時や保存する時に選択ダイアログ画面を使う。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_ce*		Command-line editing

|c_<Esc>|	<Esc>		   abandon command-line (if 'wildchar' is
				      <Esc>, type it twice)

|c_CTRL-V|	CTRL-V {char}	   insert {char} literally
|c_CTRL-V|	CTRL-V {number}    enter decimal value of character (up to
				      three digits)
|c_CTRL-K|	CTRL-K {char1} {char2}
				   enter digraph (See |Q_di|)
|c_CTRL-R|	CTRL-R {0-9a-z"%#:-=}
				   insert the contents of a register

|c_<Left>|	<Left>/<Right>	   cursor left/right
|c_<S-Left>|	<S-Left>/<S-Right> cursor one word left/right
|c_CTRL-B|	CTRL-B/CTRL-E	   cursor to beginning/end of command-line

|c_<BS>|	<BS>		   delete the character in front of the cursor
|c_<Del>|	<Del>		   delete the character under the cursor
|c_CTRL-W|	CTRL-W		   delete the word in front of the cursor
|c_CTRL-U|	CTRL-U		   remove all characters

|c_<Up>|	<Up>/<Down>	   recall older/newer command-line that starts
				      with current command
|c_<S-Up>|	<S-Up>/<S-Down>	   recall older/newer command-line from history
|c_CTRL-G|	CTRL-G		   next match when 'incsearch' is active
|c_CTRL-T|	CTRL-T		   previous match when 'incsearch' is active
|:history|	:his[tory]	   show older command-lines

Context-sensitive completion on the command-line:

|c_wildchar|	'wildchar'  (default: <Tab>)
				do completion on the pattern in front of the
				   cursor; if there are multiple matches,
				   beep and show the first one; further
				   'wildchar' will show the next ones
|c_CTRL-D|	CTRL-D		list all names that match the pattern in
				   front of the cursor
|c_CTRL-A|	CTRL-A		insert all names that match pattern in front
				   of cursor
|c_CTRL-L|	CTRL-L		insert longest common part of names that
				   match pattern
|c_CTRL-N|	CTRL-N		after 'wildchar' with multiple matches: go
				   to next match
|c_CTRL-P|	CTRL-P		after 'wildchar' with multiple matches: go
				   to previous match
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_ce}
@cindex Q_ce
@unnumberedsec コマンドラインの編集

@multitable @columnfractions .2 .25 .55
@item |c_<Esc>| @tab @key{<Esc>} @tab コマンドラインを破棄する('wildchar' が @key{<Esc>} の場合は 2 回押す)
@item
@item |c_CTRL-V| @tab @kbd{CTRL-V} @{char@} @tab @{char@} を文字として挿入する(CTRL 文字など)
@item |c_CTRL-V| @tab @kbd{CTRL-V} @{number@} @tab 文字コードを 10 進数入力する(最大 3 桁まで)
@item |c_CTRL-K| @tab @kbd{CTRL-K} @{char1@} @{char2@} @tab ダイグラフを入力する(|Q_di|参照)
@item |c_CTRL-R| @tab @kbd{CTRL-R} @{0-9a-z"%#:-=@} @tab レジスタの内容を挿入する
@item
@item |c_<Left>| @tab @key{<Left>}/@key{<Right>} @tab カーソルを左右に移動
@item |c_<S-Left>| @tab <S-Left>/<S-Right> @tab カーソルを単語単位で左右に移動
@item |c_CTRL-B| @tab @kbd{CTRL-B}/@kbd{CTRL-E} @tab カーソルを行頭、行末に移動
@item
@item |c_<BS>| @tab @key{<BS>} @tab カーソルの直前の文字を削除
@item |c_<Del>| @tab @key{<Del>} @tab カーソル位置の文字を削除
@item |c_CTRL-W| @tab @kbd{CTRL-W} @tab カーソルの直前の文字を削除
@item |c_CTRL-U| @tab @kbd{CTRL-U} @tab 全文字を削除
@item
@item |c_<Up>| @tab @key{<Up>}/@key{<Down>} @tab 現在のコマンドで始まるコマンドラインの履歴を呼び出す
@item |c_<S-Up>| @tab <S-Up>/<S-Down> @tab コマンドラインの履歴を呼び出す
@item |c_CTRL-G| @tab @kbd{CTRL-G} @tab '@option{incsearch}' が有効時、次のマッチへ
@item |c_CTRL-T| @tab @kbd{CTRL-T} @tab '@option{incsearch}' が有効時、前のマッチへ
@item |:history| @tab :his[tory] @tab コマンドライン履歴を表示
@end multitable

文脈依存の補完機能

@multitable @columnfractions .2 .2 .6
@item |c_wildchar| @tab 'wildchar' @tab (デフォルト: <Tab>)	カーソルの直前のパターンに合せた補完を実施合致するものが複数ある場合は、ビープを鳴らし最初に合致したものを表示。さらに '@option{wildchar}' を押すと次に合致したものを表示。
@item |c_CTRL-D| @tab @kbd{CTRL-D} @tab 現在のカーソルの直前のパターンに合致する全ての名前の一覧を表示
@item |c_CTRL-A| @tab @kbd{CTRL-A} @tab 現在のカーソルの直前のパターンに合致する全ての名前を挿入
@item |c_CTRL-L| @tab @kbd{CTRL-L} @tab 現在のカーソルの直前のパターンに合致するもののうち、共通部分を挿入
@item |c_CTRL-N| @tab @kbd{CTRL-N} @tab '@option{wildchar}' にて複数候補があるとき次の候補へ
@item |c_CTRL-P| @tab @kbd{CTRL-P} @tab '@option{wildchar}' にて複数候補があるとき前の候補へ
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_ra*		Ex ranges

|:range|	,		separates two line numbers
|:range|	;		idem, set cursor to the first line number
				before interpreting the second one

|:range|	{number}	an absolute line number
|:range|	.		the current line
|:range|	$		the last line in the file
|:range|	%		equal to 1,$ (the entire file)
|:range|	*		equal to '<,'> (visual area)
|:range|	't		position of mark t
|:range|	/{pattern}[/]	the next line where {pattern} matches
|:range|	?{pattern}[?]	the previous line where {pattern} matches

|:range|	+[num]		add [num] to the preceding line number
				   (default: 1)
|:range|	-[num]		subtract [num] from the preceding line
				   number (default: 1)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_ra}
@cindex Q_ra
@unnumberedsec Ex コマンドの範囲

@multitable @columnfractions .2 .2 .6
@item |:range| @tab , @tab 2 つの行の範囲
@item |:range| @tab ; @tab 同上。最初の指定行から次の指定範囲まで
@item
@item |:range| @tab @{number@} @tab ファイル中の行番号
@item |:range| @tab . @tab 現在行
@item |:range| @tab $ @tab ファイルの最終行
@item |:range| @tab % @tab 1,$ と同じ(＝ファイル全体)
@item |:range| @tab * @tab '<,'> と同じ(＝ビジュアルモードの選択範囲)
@item |:range| @tab 't @tab マーク t の行
@item |:range| @tab /@{pattern@}[/] @tab @{pattern@} に合致する行の次の行
@item |:range| @tab ?@{pattern@}[?] @tab @{pattern@} に合致する行の前の行
@item
@item |:range| @tab +[num] @tab 直前の行指定(デフォルト:1)に[num]を加算したもの
@item |:range| @tab -[num] @tab 直前の行指定(デフォルト:1)から[num]を減算したもの
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_ex*		Special Ex characters

|:bar|      |		separates two commands (not for ":global" and ":!")
|:quote|    "		begins comment

|:_%|       %		current file name (only where a file name is expected)
|:_#|       #[num]	alternate file name [num] (only where a file name is
			   expected)
	Note: The next seven are typed literally; these are not special keys!
|:<abuf>|   <abuf>	buffer number, for use in an autocommand (only where a
			   file name is expected)
|:<afile>|  <afile>	file name, for use in an autocommand (only where a
			   file name is expected)
|:<amatch>| <amatch>	what matched with the pattern, for use in an
			   autocommand (only where a file name is expected)
|:<cword>|  <cword>	word under the cursor (only where a file name is
			   expected)
|:<cWORD>|  <cWORD>	WORD under the cursor (only where a file name is
			   expected) (see |WORD|)
|:<cfile>|  <cfile>	file name under the cursor (only where a file name is
			   expected)
|:<sfile>|  <sfile>	file name of a ":source"d file, within that file (only
			   where a file name is expected)

		After "%", "#", "<cfile>", "<sfile>" or "<afile>"
		|::p|	    :p		full path
		|::h|	    :h		head (file name removed)
		|::t|	    :t		tail (file name only)
		|::r|	    :r		root (extension removed)
		|::e|	    :e		extension
		|::s|	    :s/{pat}/{repl}/	substitute {pat} with {repl}
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_ex}
@cindex Q_ex
@unnumberedsec 特殊な Ex 文字

@multitable @columnfractions .2 .1 .7
@item |:bar| @tab | @tab コマンドを 2 つに分割 (":global" と ":!" では使用不可)
@item |:quote| @tab " @tab コメントの開始
@item
@item |:_%| @tab % @tab 現在のファイル名(ファイル名を使うべき場所でのみ可)
@item |:_#| @tab #[num] @tab 別のファイル名 [num] (ファイル名を使うべき場所でのみ可)
@end multitable

@quotation
Note:
以下の 7 つについては、そのまま打ち込みます。特殊キーの表記ではありません。
@end quotation

@multitable @columnfractions .15 .15 .7
@item |:<abuf>| @tab <abuf> @tab バッファ番号。自動コマンドで使われる (ファイル名を使うべき場所でのみ可)
@item |:<afile>| @tab <afile> @tab ファイル名。自動コマンドで使われる (ファイル名を使うべき場所でのみ可)
@item |:<amatch>| @tab <amatch> @tab パターンにマッチしたもの。自動コマンドで使われる (ファイル名を使うべき場所でのみ可)
@item |:<cword>| @tab <cword> @tab カーソル下の単語(ファイル名を使うべき場所でのみ可)
@item |:<cWORD>| @tab <cWORD> @tab カーソル下の大単語(ファイル名を使うべき場所でのみ可) ※ 大単語については|WORD|を参照)
@item |:<cfile>| @tab <cfile> @tab カーソルのあるファイルの名前(ファイル名を使うべき場所でのみ使用可)
@item |:<sfile>| @tab <sfile> @tab そのファイルで "@command{:source}" を使ったファイルの名前(ファイル名を使うべき場所でのみ使用可)
@end multitable

"%", "#", "<cfile>", "<sfile>" , "<afile>" の後に以下の指定が可能
@multitable @columnfractions .1 .3 .6
@item |::p| @tab :p @tab フルパス
@item |::h| @tab :h @tab ディレクトリ部(ファイル名を削除)
@item |::t| @tab :t @tab ファイル名のみ
@item |::r| @tab :r @tab ルート (ファイル名の拡張子のみ削除)
@item |::e| @tab :e @tab 拡張子のみ
@item |::s| @tab :s/@{pat@}/@{repl@}/ @tab @{pat@}を@{repl@}に置換
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_st*		Starting Vim

|-vim|	   vim [options]		start editing with an empty buffer
|-file|	   vim [options] {file} ..	start editing one or more files
|--|	   vim [options] -		read file from stdin
|-tag|	   vim [options] -t {tag}	edit the file associated with {tag}
|-qf|	   vim [options] -q [fname]	start editing in QuickFix mode,
					   display the first error

	Most useful Vim arguments (for full list see |startup-options|)

|-gui|	-g		    start GUI (also allows other options)

|-+|	+[num]		    put the cursor at line [num] (default: last line)
|-+c|	+{command}	    execute {command} after loading the file
|-+/|	+/{pat} {file} ..   put the cursor at the first occurrence of {pat}
|-v|	-v		    Vi mode, start ex in Normal mode
|-e|	-e		    Ex mode, start vim in Ex mode
|-R|	-R		    Read-only mode, implies -n
|-m|	-m		    modifications not allowed (resets 'write' option)
|-d|	-d		    diff mode |diff|
|-b|	-b		    binary mode
|-l|	-l		    lisp mode
|-A|	-A		    Arabic mode ('arabic' is set)
|-F|	-F		    Farsi mode ('fkmap' and 'rightleft' are set)
|-H|	-H		    Hebrew mode ('hkmap' and 'rightleft' are set)
|-V|	-V		    Verbose, give informative messages
|-C|	-C		    Compatible, set the 'compatible' option
|-N|	-N		    Nocompatible, reset the 'compatible' option
|-r|	-r		    give list of swap files
|-r|	-r {file} ..	    recover aborted edit session
|-n|	-n		    do not create a swap file
|-o|	-o [num]	    open [num] windows (default: one for each file)
|-f|	-f		    GUI: foreground process, don't fork
			    Amiga: do not restart Vim to open a window (for
				e.g., mail)
|-s|	-s {scriptin}	    first read commands from the file {scriptin}
|-w|	-w {scriptout}	    write typed chars to file {scriptout} (append)
|-W|	-W {scriptout}	    write typed chars to file {scriptout} (overwrite)
|-T|	-T {terminal}	    set terminal name
|-d|	-d {device}	    Amiga: open {device} to be used as a console
|-u|	-u {vimrc}	    read inits from {vimrc} instead of other inits
|-U|	-U {gvimrc}	    idem, for when starting the GUI
|-i|	-i {viminfo}	    read info from {viminfo} instead of other files
|---|	--		    end of options, other arguments are file names
|--help|    --help	    show list of arguments and exit
|--version| --version	    show version info and exit
|--|	-		    read file from stdin
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_st}
@cindex Q_st
@unnumberedsec Vim の起動方法

@multitable @columnfractions .1 .3 .6
@item |-vim| @tab vim [options] @tab 空バッファで編集を開始する
@item |-file| @tab vim [options] @{file@} .. @tab 1 つ以上のファイルの編集を開始する
@item |--| @tab vim [options] - @tab ファイルを標準入力から読み込む
@item |-tag| @tab vim [options] -t @{tag@} @tab @{tag@} に関連付けられたファイルを編集
@item |-qf| @tab vim [options] -q [fname] @tab QuickFixモードで編集を開始する。最初のエラーを表示する。
@end multitable

最も有用なVimの引数(完全なリストは|startup-options|を参照)

@multitable @columnfractions .2 .2 .6
@item |-gui| @tab -g @tab GUI を開始する(他のオプションも併用できる)
@item
@item |-+| @tab +[num] @tab カーソルを [num] 行に移動する(デフォルト:最後の行)
@item |-+c| @tab +@{command@} @tab ファイルを読み込んだ後に @{command@} を実行する
@item |-+/| @tab +/@{pat@} @{file@} .. @tab 最初に @{pat@} が現れる場所にカーソルを移動する
@item |-v| @tab -v @tab Vi モード。ex をノーマルモードで起動する
@item |-e| @tab -e @tab Ex モード。Vim を Ex モードで起動する
@item |-R| @tab -R @tab 読み込み専用モード。-n もセットする
@item |-m| @tab -m @tab 修正不可能にする。(オプション '@option{write}' をオフにする)
@item |-d| @tab -d @tab 差分モード |diff|
@item |-b| @tab -b @tab バイナリモード
@item |-l| @tab -l @tab Lisp モード
@item |-A| @tab -A @tab アラビア語モード ('@option{arabic}' がセットされる)
@item |-F| @tab -F @tab ペルシア語モード ('@option{fkmap}' と '@option{rightleft}' をセット)
@item |-H| @tab -H @tab ヘブライ語モード ('@option{hkmap}' と '@option{rightleft}' をセット)
@item |-V| @tab -V @tab 冗長。役に立つメッセージを表示する
@item |-C| @tab -C @tab 互換。'@option{compatible}' をセットする
@item |-N| @tab -N @tab 非互換。'@option{compatible}' をオフにする
@item |-r| @tab -r @tab スワップファイルの一覧を表示する
@item |-r| @tab -r @{file@} .. @tab 破棄された編集セッションを復元する
@item |-n| @tab -n @tab スワップファイルを作らない
@item |-o| @tab -o [num] @tab [num] 個のウィンドウを開く。(デフォルト:各ファイルに対して 1 個)
@item |-f| @tab -f @tab GUI: foreground process。forkしない Amiga: Vim を新しいウィンドウで起動しない (メールなど用)
@item |-s| @tab -s @{scriptin@} @tab 最初にファイル @{scriptin@} からコマンドを読み込む
@item |-w| @tab -w @{scriptout@} @tab 入力された文字を @{scriptout@} に書き込む(追加)
@item |-W| @tab -W @{scriptout@} @tab 入力された文字を @{scriptout@} に書き込む(上書き)
@item |-T| @tab -T @{terminal@} @tab 端末の名前を設定する
@item |-d| @tab -d @{device@} @tab Amiga: @{device@} をコンソールとして開く
@item |-u| @tab -u @{vimrc@} @tab @{vimrc@} を初期化ファイルとして読み込む
@item |-U| @tab -U @{gvimrc@} @tab 同上。GUI を起動するときに使われる。
@item |-i| @tab -i @{viminfo@} @tab @{@file{viminfo}@} から情報を読み込む
@item |@minus{}@minus{}@minus{}| @tab @minus{}@minus{} @tab オプション終了。以降の引数はファイル名になる
@item |@minus{}@minus{}help| @tab @minus{}@minus{}help @tab 引数の一覧を表示して終了する
@item |@minus{}@minus{}version| @tab @minus{}@minus{}version @tab バージョン情報を表示して終了する
@item |@minus{}@minus{}| @tab @minus{} @tab 標準入力からファイルを読み込む
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_ed*		Editing a file

	   Without !: Fail if changes have been made to the current buffer.
	      With !: Discard any changes to the current buffer.
|:edit_f|  :e[dit][!] {file}	edit {file}
|:edit|    :e[dit][!]		reload the current file
|:enew|    :ene[w][!]		edit a new, unnamed buffer
|:find|    :fin[d][!] {file}	find {file} in 'path' and edit it

|CTRL-^|   N  CTRL-^		edit alternate file N (equivalent to ":e #N")
|gf|          gf  or ]f		edit the file whose name is under the cursor
|:pwd|     :pwd			print the current directory name
|:cd|      :cd [path]		change the current directory to [path]
|:cd-|     :cd -		back to previous current directory
|:file|    :f[ile]		print the current file name and the cursor
				   position
|:file|    :f[ile] {name}	set the current file name to {name}
|:files|   :files		show alternate file names
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_ed}
@cindex Q_ed
@unnumberedsec ファイルの編集

@itemize
@item ! なしの場合: 現バッファに変更が加わっている場合はコマンド失敗
@item ! ありの場合: 現在のバッファに対する変更は破棄してコマンド実行
@end itemize
@multitable @columnfractions .2 .2 .6
@item |:edit_f| @tab :e[dit][!] @{file@} @tab @{file@} を編集
@item |:edit| @tab :e[dit][!] @tab 現在のバッファ内容を再読み込み
@item |:enew| @tab :ene[w][!] @tab 新たな名前なしバッファを編集
@item |:find| @tab :fin[d][!] @{file@} @tab @{file@} を '@option{path}' から探し、編集
@item
@item |CTRL-^| @tab N @kbd{CTRL-^} @tab 別ファイル N を編集(":e #N" と同じ)
@item |gf| @tab gf or ]f @tab カーソル下にある名前のファイルを編集
@item |:pwd| @tab :pwd @tab カレントディレクトリを表示
@item |:cd| @tab :cd [path] @tab カレントディレクトリを [path] に変更
@item |:cd-| @tab :cd - @tab 直前のカレントディレクトリに戻る
@item |:file| @tab :f[ile] @tab 現在のファイル名とカーソル位置を表示
@item |:file| @tab :f[ile] @{name@} @tab 現在のファイル名を @{name@} に変更
@item |:files| @tab :files @tab 別ファイル一覧を表示
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_fl*		Using the argument list			|argument-list|

|:args|	   :ar[gs]		print the argument list, with the current file
				   in "[]"
|:all|	   :all  or :sall	open a window for every file in the arg list
|:wn|	   :wn[ext][!]		write file and edit next file
|:wn|	   :wn[ext][!] {file}	write to {file} and edit next file, unless
				   {file} exists; With !, overwrite existing
				   file
|:wN|	   :wN[ext][!] [file]	write file and edit previous file

	     in current window    in new window	~
|:argument|  :argu[ment] N	  :sar[gument] N	edit file N
|:next|      :n[ext]		  :sn[ext]		edit next file
|:next_f|    :n[ext] {arglist}	  :sn[ext] {arglist}	define new arg list
							   and edit first file
|:Next|      :N[ext]		  :sN[ext]		edit previous file
|:first|     :fir[st]		  :sfir[st]		edit first file
|:last|      :la[st]		  :sla[st]		edit last file
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_fl}
@cindex Q_fl
@unnumberedsec 引数リストの使い方 |argument-list|

@multitable @columnfractions .1 .2 .7
@item |:args| @tab :ar[gs] @tab 引数一覧を表示。現在のファイルは [ ]で囲む
@item |:all| @tab :all  or :sall @tab 引数一覧にある全ファイルをウィンドウで表示
@item |:wn| @tab :wn[ext][!] @tab 現在のファイルを保存し、次のファイルを編集
@item |:wn| @tab :wn[ext][!] @{file@} @tab @{file@} がなければ、現在のバッファを @{file@} に保存し、次のファイルを編集。"!" を使えば、既存ファイルを上書き保存
@item |:wN| @tab :wN[ext][!] [file] @tab 現在のファイルを保存し、1 つ前のファイルを編集
@end multitable

カレントウィンドウで   新しいウィンドウで
@multitable @columnfractions .15 .2 .2 .45
@item |:argument| @tab :argu[ment] N @tab :sar[gument] N @tab ファイル N を編集
@item |:next| @tab :n[ext] @tab :sn[ext] @tab 次のファイルを編集
@item |:next_f| @tab :n[ext] @{arglist@} @tab :sn[ext] @{arglist@} @tab 新たな引数リストを作り最初のファイルを編集
@item |:Next| @tab :N[ext] @tab :sN[ext] @tab 1 つ前のファイルを編集
@item |:first| @tab :fir[st] @tab :sfir[st] @tab 最初のファイルを編集
@item |:last| @tab :la[st] @tab :sla[st] @tab 最後のファイルを編集
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_wq*		Writing and quitting

|:w|	  :[range]w[rite][!]		write to the current file
|:w_f|	  :[range]w[rite] {file}	write to {file}, unless it already
					   exists
|:w_f|	  :[range]w[rite]! {file}	write to {file}.  Overwrite an existing
					   file
|:w_a|	  :[range]w[rite][!] >>		append to the current file
|:w_a|	  :[range]w[rite][!] >> {file}	append to {file}
|:w_c|	  :[range]w[rite] !{cmd}	execute {cmd} with [range] lines as
					   standard input
|:up|	  :[range]up[date][!]		write to current file if modified
|:wall|	  :wa[ll][!]			write all changed buffers

|:q|	  :q[uit]		quit current buffer, unless changes have been
				   made; Exit Vim when there are no other
				   non-help buffers
|:q|	  :q[uit]!		quit current buffer always, discard any
				   changes.  Exit Vim when there are no other
				   non-help buffers
|:qa|	  :qa[ll]		exit Vim, unless changes have been made
|:qa|	  :qa[ll]!		exit Vim always, discard any changes
|:cq|	  :cq			quit without writing and return error code

|:wq|	  :wq[!]		write the current file and exit
|:wq|	  :wq[!] {file}		write to {file} and exit
|:xit|	  :x[it][!] [file]	like ":wq" but write only when changes have
				   been made
|ZZ|	     ZZ			same as ":x"
|ZQ|	     ZQ			same as ":q!"
|:xall|	  :xa[ll][!]  or :wqall[!]
				write all changed buffers and exit

|:stop|	  :st[op][!]		suspend Vim or start new shell; if 'aw' option
				   is set and [!] not given write the buffer
|CTRL-Z|     CTRL-Z		same as ":stop"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_wq}
@cindex Q_wq
@unnumberedsec 保存と終了

@multitable @columnfractions .1 .3 .6
@item |:w| @tab :[range]w[rite][!] @tab 現在のファイルに保存
@item |:w_f| @tab :[range]w[rite] @{file@} @tab @{file@} がなければ、@{file@} に保存。
@item |:w_f| @tab :[range]w[rite]! @{file@} @tab @{file@} に保存。ファイルがあれば上書き。
@item |:w_a| @tab :[range]w[rite][!] >> @tab 現在のファイルに追記
@item |:w_a| @tab :[range]w[rite][!] >> @{file@} @tab @{file@} に追記
@item |:w_c| @tab :[range]w[rite] !@{cmd@} @tab [range]の行を標準入力として @{cmd@}を実行。
@item |:up| @tab :[range]up[date][!] @tab 変更されていれば、上書き保存
@item |:wall| @tab :wa[ll][!] @tab 変更のある全バッファを上書き保存
@item
@item |:q| @tab :q[uit] @tab 変更がなければ、現在のバッファを終了。他にヘルプ以外のバッファがなければvimを終了。
@item |:q| @tab :q[uit]! @tab 変更を破棄して、現在のバッファを終了。他にヘルプ以外のバッファがなければvimを終了。
@item |:qa| @tab :qa[ll] @tab 変更がない限り Vim を終了
@item |:qa| @tab :qa[ll]! @tab 変更があっても Vim を強制終了
@item |:cq| @tab :cq @tab 保存せずに終了し、エラーコードを返す。
@item
@item |:wq| @tab :wq[!] @tab 現ファイルを保存して終了
@item |:wq| @tab :wq[!] @{file@} @tab @{file@} に保存して終了
@item |:xit| @tab :x[it][!] [file] @tab "@command{:wq}" と同様だが、変更が加わっている場合のみ保存
@item |ZZ| @tab ZZ @tab "@command{:x}" と同じ
@item |ZQ| @tab ZQ @tab "@command{:q!}" と同じ
@item |:xall| @tab :xa[ll][!] or :wqall[!] @tab 変更のある全バッファを保存して終了
@item
@item |:stop| @tab :st[op][!] @tab Vim をサスペンドし、新たなシェルを起動。'@option{aw}' オプションがONで、[!]も指定していない場合はバッファを保存
@item |CTRL-Z| @tab @kbd{CTRL-Z} "@option{:stop}" と同じ。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_ac*		Automatic Commands

|viminfo-file|	read registers, marks, history at startup, save when exiting.

|:rviminfo|	:rv[iminfo] [file]	read info from viminfo file [file]
|:rviminfo|	:rv[iminfo]! [file]	idem, overwrite existing info
|:wviminfo|	:wv[iminfo] [file]	add info to viminfo file [file]
|:wviminfo|	:wv[iminfo]! [file]	write info to viminfo file [file]

|modeline|	Automatic option setting when editing a file

|modeline|	vim:{set-arg}: ..	In the first and last lines of the
					file (see 'ml' option), {set-arg} is
					given as an argument to ":set"

|autocommand|	Automatic execution of commands on certain events.

|:autocmd|	:au			  list all autocommands
|:autocmd|	:au {event}		  list all autocommands for {event}
|:autocmd|	:au {event} {pat}	  list all autocommands for {event}
					  with {pat}
|:autocmd|	:au {event} {pat} {cmd}	  enter new autocommands for {event}
					  with {pat}
|:autocmd|	:au!			  remove all autocommands
|:autocmd|	:au! {event}		  remove all autocommands for {event}
|:autocmd|	:au! * {pat}		  remove all autocommands for {pat}
|:autocmd|	:au! {event} {pat}	  remove all autocommands for {event}
					  with {pat}
|:autocmd|	:au! {event} {pat} {cmd}  remove all autocommands for {event}
					  with {pat} and enter new one
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_ac}
@cindex Q_ac
@unnumberedsec 自動コマンド

|viminfo-file|	起動時にレジスタ、マーク、ヒストリを読み込み、終了時に保存

@multitable @columnfractions .2 .3 .5
@item |:rviminfo| @tab :rv[iminfo] [file] @tab viminfoファイル [file] から情報を読む
@item |:rviminfo| @tab :rv[iminfo]! [file] @tab 同上。既存情報を破棄して読む
@item |:wviminfo| @tab :wv[iminfo] [file] @tab viminfoファイル [file] に情報を追記
@item |:wviminfo| @tab :wv[iminfo]! [file] @tab viminfoファイル [file] に情報を上書き
@end multitable

@multitable @columnfractions .2 .8
@item |modeline| @tab ファイルを編集する時に自動的にオプションを設定
@end multitable

@multitable @columnfractions .2 .2 .6
@item |modeline| @tab vim:@{set-arg@}: .. @tab ファイルの最初か最後の行にあれば、('ml' オプションを参照) @{set-arg@} の内容を ":set" への引数として与える。
@end multitable

@multitable @columnfractions .3 .7
@item |autocommand| @tab 特定のイベントで自動的にコマンドを実行
@end multitable

@multitable @columnfractions .2 .3 .5
@item |:autocmd| @tab :au @tab 自動コマンドの一覧表示
@item |:autocmd| @tab :au @{event@} @tab @{event@}用の自動コマンドの一覧表示
@item |:autocmd| @tab :au @{event@} @{pat@} @tab @{event@} 用の自動コマンドのうち、@{pat@} に合致するコマンドの一覧表示
@item |:autocmd| @tab :au @{event@} @{pat@} @{cmd@} @tab @{event@} と @{pat@} 用の新たな自動コマンドを @{cmd@} として登録
@item |:autocmd| @tab :au! @tab 全ての自動コマンドを削除
@item |:autocmd| @tab :au! @{event@} @tab @{event@} 用の自動コマンドを削除
@item |:autocmd| @tab :au! * @{pat@} @tab @{pat@} に合致する自動コマンドを削除
@item |:autocmd| @tab :au! @{event@} @{pat@} @tab @{event@} と @{pat@} に合致する自動コマンドを削除
@item |:autocmd| @tab :au! @{event@} @{pat@} @{cmd@} @tab @{event@} と @{pat@} に合致する自動コマンドを削除後、@{cmd@} として再登録
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_wi*		Multi-window commands

|CTRL-W_s|	CTRL-W s  or  :split	split window into two parts
|:split_f|	:split {file}		split window and edit {file} in one of
					   them
|:vsplit|	:vsplit {file}		same, but split vertically
|:vertical|	:vertical {cmd}		make {cmd} split vertically

|:sfind|	:sf[ind] {file}		split window, find {file} in 'path'
					   and edit it
|:terminal|	:terminal {cmd}		open a terminal window
|CTRL-W_]|	CTRL-W ]		split window and jump to tag under
					   cursor
|CTRL-W_f|	CTRL-W f		split window and edit file name under
					   the cursor
|CTRL-W_^|	CTRL-W ^		split window and edit alternate file
|CTRL-W_n|	CTRL-W n  or  :new	create new empty window
|CTRL-W_q|	CTRL-W q  or  :q[uit]	quit editing and close window
|CTRL-W_c|	CTRL-W c  or  :cl[ose]	make buffer hidden and close window
|CTRL-W_o|	CTRL-W o  or  :on[ly]	make current window only one on the
					   screen

|CTRL-W_j|	CTRL-W j		move cursor to window below
|CTRL-W_k|	CTRL-W k		move cursor to window above
|CTRL-W_CTRL-W|	CTRL-W CTRL-W		move cursor to window below (wrap)
|CTRL-W_W|	CTRL-W W		move cursor to window above (wrap)
|CTRL-W_t|	CTRL-W t		move cursor to top window
|CTRL-W_b|	CTRL-W b		move cursor to bottom window
|CTRL-W_p|	CTRL-W p		move cursor to previous active window

|CTRL-W_r|	CTRL-W r		rotate windows downwards
|CTRL-W_R|	CTRL-W R		rotate windows upwards
|CTRL-W_x|	CTRL-W x		exchange current window with next one

|CTRL-W_=|	CTRL-W =		make all windows equal height & width
|CTRL-W_-|	CTRL-W -		decrease current window height
|CTRL-W_+|	CTRL-W +		increase current window height
|CTRL-W__|	CTRL-W _		set current window height (default:
					   very high)

|CTRL-W_<|	CTRL-W <		decrease current window width
|CTRL-W_>|	CTRL-W >		increase current window width
|CTRL-W_bar|	CTRL-W |		set current window width (default:
					   widest possible)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_wi}
@cindex Q_wi
@unnumberedsec 複数ウィンドウコマンド

@multitable @columnfractions .3 .3 .4
@item |CTRL-W_s| @tab @kbd{CTRL-W} s  or  :split @tab ウィンドウを 2 つに分割
@item |:split_f| @tab :split @{file@} @tab ウィンドウを 2 つに分割し、片方で @{file@} を開く
@item |:vsplit| @tab :vsplit @{file@} @tab 同上。ウィンドウは縦分割。
@item |:vertical| @tab :vertical @{cmd@} @tab @{cmd@} が縦分割するようにする
@item |:sfind| @tab :sf[ind] @{file@} @tab ウィンドウを分割し、@{file@}を 'path' 中で探し、それを編集
@item |:terminal| @tab :terminal @{cmd@} @tab ターミナルウィンドウを開く
@item |CTRL-W_]| @tab @kbd{CTRL-W} ] @tab ウィンドウを分割し、カーソル下のタグにジャンプ
@item |CTRL-W_f| @tab @kbd{CTRL-W} f @tab ウィンドウを分割し、カーソル下のファイルにジャンプ
@item |CTRL-W_^| @tab @kbd{CTRL-W} ^ @tab ウィンドウを分割し、別ファイルにジャンプ
@item |CTRL-W_n| @tab @kbd{CTRL-W} n  or  :new @tab 新たな空ウィンドウを作成
@item |CTRL-W_q| @tab @kbd{CTRL-W} q  or  :q[uit] @tab 編集を終了しウィンドウを閉じる
@item |CTRL-W_c| @tab @kbd{CTRL-W} c  or  :cl[ose] @tab バッファを隠しウィンドウを閉じる
@item |CTRL-W_o| @tab @kbd{CTRL-W} o  or  :on[ly] @tab 画面を現在ウィンドウ 1 つだけにする
@item 
@item |CTRL-W_j| @tab @kbd{CTRL-W} j @tab カーソルを下のウィンドウに移動
@item |CTRL-W_k| @tab @kbd{CTRL-W} k @tab カーソルを上のウィンドウに移動
@item |CTRL-W_CTRL-W| @tab @kbd{CTRL-W} @kbd{CTRL-W} @tab カーソルを下のウィンドウに移動(wrap)
@item |CTRL-W_W| @tab @kbd{CTRL-W} W @tab カーソルを上のウィンドウに移動(wrap)
@item |CTRL-W_t| @tab @kbd{CTRL-W} t @tab カーソルを一番上のウィンドウに移動
@item |CTRL-W_b| @tab @kbd{CTRL-W} b @tab カーソルを一番下のウィンドウに移動
@item |CTRL-W_p| @tab @kbd{CTRL-W} p @tab カーソルを直前のアクティブウィンドウに移動
@item 
@item |CTRL-W_r| @tab @kbd{CTRL-W} r @tab ウィンドウを下側にローテートする
@item |CTRL-W_R| @tab @kbd{CTRL-W} R @tab ウィンドウを上側にローテートする
@item |CTRL-W_x| @tab @kbd{CTRL-W} x @tab 現在のウィンドウを次のウィンドウと入れ換え
@item 
@item |CTRL-W_=| @tab @kbd{CTRL-W} = @tab 全ウィンドウの高さと幅を同一に
@item |CTRL-W_-| @tab @kbd{CTRL-W} - @tab 現在のウィンドウの高さを減らす
@item |CTRL-W_+| @tab @kbd{CTRL-W} + @tab 現在のウィンドウの高さを増やす
@item |CTRL-W__| @tab @kbd{CTRL-W} _ @tab 現在のウィンドウの高さを変更する(既定値: 可能な限り高く)
@item
@item |CTRL-W_<| @tab @kbd{CTRL-W} < @tab 現在のウィンドウの幅を減らす
@item |CTRL-W_>| @tab @kbd{CTRL-W} > @tab 現在のウィンドウの幅を増やす
@item |CTRL-W_bar| @tab @kbd{CTRL-W} | @tab 現在のウィンドウの幅を変更する(既定値: 可能な限り広く)
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_bu*		Buffer list commands

|:buffers|	:buffers  or  :files	list all known buffer and file names

|:ball|		:ball	  or  :sball	edit all args/buffers
|:unhide|	:unhide   or  :sunhide	edit all loaded buffers

|:badd|		:badd {fname}		add file name {fname} to the list
|:bunload|	:bunload[!] [N]		unload buffer [N] from memory
|:bdelete|	:bdelete[!] [N]		unload buffer [N] and delete it from
					   the buffer list

		in current window  in new window       ~
|:buffer|	:[N]buffer [N]     :[N]sbuffer [N]     to arg/buf N
|:bnext|	:[N]bnext [N]      :[N]sbnext [N]      to Nth next arg/buf
|:bNext|	:[N]bNext [N]      :[N]sbNext [N]      to Nth previous arg/buf
|:bprevious|	:[N]bprevious [N]  :[N]sbprevious [N]  to Nth previous arg/buf
|:bfirst|	:bfirst	           :sbfirst            to first arg/buf
|:blast|	:blast	           :sblast             to last arg/buf
|:bmodified|	:[N]bmod [N]       :[N]sbmod [N]       to Nth modified buf
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_bu}
@cindex Q_bu
@unnumberedsec バッファ管理コマンド

@multitable @columnfractions .2 .3 .5
@item |:buffers| @tab :buffers or :files @tab 全バッファとファイル名の一覧
@item
@item |:ball| @tab :ball or :sball @tab 全引数/バッファを編集
@item |:unhide| @tab :unhide or:sunhide @tab 読み込み中の全バッファを編集
@item
@item |:badd| @tab :badd @{fname@} @tab ファイル名 @{fname@} をバッファ一覧に追加
@item |:bunload| @tab :bunload[!] [N] @tab [N] 番バッファをメモリから開放
@item |:bdelete| @tab :bdelete[!] [N] @tab [N] 番バッファを開放してバッファ一覧から削除
@end multitable

@unnumberedsubsec カレントウィンドウで 新しいウィンドウで
@multitable @columnfractions .2 .2 .2 .4
@item |:buffer| @tab :[N]buffer [N] @tab :[N]sbuffer [N] @tab N 番バッファ /arg へ
@item |:bnext| @tab :[N]bnext [N] @tab :[N]sbnext [N] @tab N 番分、次のバッファ /arg へ
@item |:bNext| @tab :[N]bNext [N] @tab :[N]sbNext [N] @tab N 番分、次のバッファ /arg へ
@item |:bprevious| @tab :[N]bprevious [N] @tab :[N]sbprevious [N] @tab 同上
@item |:bfirst| @tab :bfirst @tab :sbfirst @tab 最初のバッファ /arg へ
@item |:blast| @tab :blast @tab :sblast @tab 最後のバッファ /arg へ
@item |:bmodified| @tab :[N]bmod [N] @tab :[N]sbmod [N] @tab N 番分、更新したバッファへ
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_sy*		Syntax Highlighting

|:syn-on|	:syntax on		start using syntax highlighting
|:syn-off|	:syntax off		stop using syntax highlighting

|:syn-keyword|	:syntax keyword {group-name} {keyword} ..
					add a syntax keyword item
|:syn-match|	:syntax match {group-name} {pattern} ...
					add syntax match item
|:syn-region|	:syntax region {group-name} {pattern} ...
					add syntax region item
|:syn-sync|	:syntax sync [ccomment | lines {N} | ...]
					tell syntax how to sync
|:syntax|	:syntax [list]		list current syntax items
|:syn-clear|	:syntax clear		clear all syntax info

|:highlight|	:highlight clear	clear all highlight info
|:highlight|	:highlight {group-name} {key}={arg} ..
					set highlighting for {group-name}

|:filetype|	:filetype on		switch on file type detection, without
					syntax highlighting
|:filetype|	:filetype plugin indent on
					switch on file type detection, with
					automatic indenting and settings
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_sy}
@cindex Q_sy
@unnumberedsec シンタックスハイライト

@multitable @columnfractions .2 .4 .4
@item |:syn-on| @tab :syntax on @tab シンタックスハイライトの使用開始
@item |:syn-off| @tab :syntax off @tab シンタックスハイライトの使用停止
@item
@item |:syn-keyword| @tab :syntax keyword @{group-name@} @{keyword@} .. @tab シンタックスにキーワードを加える
@item |:syn-match| @tab :syntax match @{group-name@} @{pattern@} ... @tab シンタックスにマッチを加える
@item |:syn-region| @tab :syntax region @{group-name@} @{pattern@} ... @tab シンタックスにリージョンを加える
@item |:syn-sync| @tab :syntax sync [ccomment | lines @{N@} | ...] @tab 同期方法を指示する
@item |:syntax| @tab :syntax [list] @tab 現在のシンタックスのアイテムを一覧する
@item |:syn-clear| @tab :syntax clear @tab 全てのシンタックスを削除する
@item
@item |:highlight| @tab :highlight clear @tab 全てのハイライトを削除する
@item |:highlight| @tab :highlight @{group-name@} @{key@}=@{arg@} .. @tab @{group-name@} にハイライトを設定する
@item
@item |:filetype| @tab :filetype on @tab ファイルタイプの検出を有効にする。シンタックスハイライトは有効にならない
@item |:filetype| @tab :filetype plugin indent on @tab ファイルタイプの検出を有効にする。各設定とオートインデントを有効にする
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_gu*		GUI commands

|:gui|		:gui			UNIX: start the GUI
|:gui|		:gui {fname} ..		idem, and edit {fname} ..

|:menu|		:menu			list all menus
|:menu|		:menu {mpath}		list menus starting with {mpath}
|:menu|		:menu {mpath} {rhs}	add menu {mpath}, giving {rhs}
|:menu|		:menu {pri} {mpath} {rhs}
					idem, with priorities {pri}
|:menu|		:menu ToolBar.{name} {rhs}
					add toolbar item, giving {rhs}
|:tmenu|	:tmenu {mpath} {text}	add tooltip to menu {mpath}
|:unmenu|	:unmenu {mpath}		remove menu {mpath}
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_gu}
@cindex Q_gu
@unnumberedsec GUI コマンド

@multitable @columnfractions .2 .4 .4
@item |:gui| @tab :gui @tab UNIX: GUI 版を起動
@item |:gui| @tab :gui @{fname@} .. @tab 同上、さらに @{fname@} .. を編集

@item |:menu| @tab :menu @tab 全メニューを表示
@item |:menu| @tab :menu @{mpath@} @tab @{mpath@} で始まる全メニューを表示
@item |:menu| @tab :menu @{mpath@} @{rhs@} @tab @{mpath@} にメニューを加える。@{mpath@} 選択で @{rhs@} 実行。
@item |:menu| @tab :menu @{pri@} @{mpath@} @{rhs@} @tab 同上、さらに @{pri@} による優先度指定
@item |:menu| @tab :menu ToolBar.@{name@} @{rhs@} @tab ツールバーの項目を加える。@{name@} 選択で @{rhs@} 実行。
@item |:tmenu| @tab :tmenu @{mpath@} @{text@} @tab @{mpath@} のメニューにツールチップを加える
@item |:unmenu| @tab :unmenu @{mpath@} @tab @{mpath@} のメニューを削除する
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
------------------------------------------------------------------------------
*Q_fo*		Folding

|'foldmethod'|	set foldmethod=manual	manual folding
		set foldmethod=indent	folding by indent
		set foldmethod=expr	folding by 'foldexpr'
		set foldmethod=syntax	folding by syntax regions
		set foldmethod=marker	folding by 'foldmarker'

|zf|		zf{motion}		operator: Define a fold manually
|:fold|		:{range}fold		define a fold for {range} lines
|zd|		zd			delete one fold under the cursor
|zD|		zD			delete all folds under the cursor

|zo|		zo			open one fold under the cursor
|zO|		zO			open all folds under the cursor
|zc|		zc			close one fold under the cursor
|zC|		zC			close all folds under the cursor

|zm|		zm			fold more: decrease 'foldlevel'
|zM|		zM			close all folds: make 'foldlevel' zero
|zr|		zr			reduce folding: increase 'foldlevel'
|zR|		zR			open all folds: make 'foldlevel' max.

|zn|		zn			fold none: reset 'foldenable'
|zN|		zN			fold normal set 'foldenable'
|zi|		zi			invert 'foldenable'
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Q_fo}
@cindex Q_fo
@unnumberedsec 折り畳みコマンド

@multitable @columnfractions .2 .4 .4
@item |'foldmethod'| @tab set foldmethod=manual @tab 手動で折畳み
@item @tab set foldmethod=indent @tab インデントで折畳み
@item @tab set foldmethod=expr @tab '@option{foldexpr}' で折畳み
@item @tab set foldmethod=syntax @tab シンタックスのリージョンで折畳み
@item @tab set foldmethod=marker @tab '@option{foldmarker}' で折畳み
@end multitable

@multitable @columnfractions .2 .2 .6
@item |zf| @tab zf@{motion@} @tab 手動で折畳みを定義する
@item |:fold| @tab :@{range@}fold @tab @{range@} 範囲の行を折畳む
@item |zd| @tab zd @tab カーソル下の1つの折畳みを削除する
@item |zD| @tab zD @tab カーソル下の全ての折畳みを削除する
@item
@item |zo| @tab zo @tab カーソル下の折畳みを 1 段開く
@item |zO| @tab zO @tab カーソル下の折畳みを全段開く
@item |zc| @tab zc @tab カーソル下の折畳みを 1 段閉じる
@item |zC| @tab zC @tab カーソル下の折畳みを全段閉じる
@item
@item |zm| @tab zm @tab '@option{foldlevel}' を減らし、折畳みを増やす
@item |zM| @tab zM @tab '@option{foldlevel}' を 0 にし、全て折畳む
@item |zr| @tab zr @tab '@option{foldlevel}' を増やし、折畳を減らす
@item |zR| @tab zR @tab '@option{foldlevel}' を最大にし、全て開く
@item
@item |zn| @tab zn @tab '@option{foldenable}' を無効にし、折畳み無し
@item |zN| @tab zN @tab '@option{foldenable}' を有効にし、折畳む
@item |zi| @tab zi @tab '@option{foldenable}' を反転させる
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 vim:tw=78:ts=8:ft=help:norl:
@end ifset
