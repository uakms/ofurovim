@ifset JA  @c ----------- v -----------  JA  -*- tab-width: 8 -*-
@node workshop.txt, , , 目次
@unnumbered Sun Visual Workshop インターフェイス
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
*workshop.txt*  For Vim version 8.0.  Last change: 2013 Jul 06


		  VIM REFERENCE MANUAL    by Gordon Prieur
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
*workshop.txt*  For Vim バージョン 8.0.  Last change: 2013 Jul 06


                VIM リファレンスマニュアル    by Gordon Prieur
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Sun Visual WorkShop Features			*workshop* *workshop-support*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{workshop}
@anchor{workshop-support}
@cindex workshop
@cindex workshop-support
Sun Visual WorkShop との連携機能
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
1. Introduction						|workshop-intro|
2. Commands						|workshop-commands|
3. Compiling vim/gvim for WorkShop			|workshop-compiling|
4. Configuring gvim for a WorkShop release tree		|workshop-configure|
5. Obtaining the latest version of the XPM library	|workshop-xpm|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .5 .5
@item 1. 機能紹介 @tab |@ref{workshop-intro}|
@item 2. コマンド @tab |@ref{workshop-commands}|
@item 3. WorkShop 用 vim/gvim のコンパイル @tab |@ref{workshop-compiling}|
@item 4. WorkShop リリースツリー用 gvim の configure @tab |@ref{workshop-configure}|
@item 5. 最新の XPM ライブラリの取得方法 @tab |@ref{workshop-xpm}|
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
{Vi does not have any of these features}
{only available when compiled with the |+sun_workshop| feature}
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{Vi にはこれらの機能はない@}

@{|@ref{+sun_workshop}| 機能を付けてコンパイルしたときのみ利用可能@}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
1. Introduction						*workshop-intro*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{workshop-intro}
@cindex workshop-intro
@section 1. 機能紹介
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Sun Visual WorkShop has an "Editor of Choice" feature designed to let users
debug using their favorite editors.  For the 6.0 release we have added support
for gvim.  A workshop debug session will have a debugging window and an editor
window (possibly others as well).  The user can do many debugging operations
from the editor window, minimizing the need to switch from window to window.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Sun Visual WorkShop ではデバッグに使用するエディタを "Editor of Choice" @{訳注: エディタの選択@} によってユーザーの好みのものに変更できる。バージョン 6.0 のリリースにあたり gvim はこれに対応した。WorkShop のデバッグセッションにはデバッグウィンドウとエディタウィンドウが表示される (同じように他のウィンドウが表示される可能性もある)。ウィンドウを切換える必要は最低限で良く、ユーザーはエディタウィンドウから多くのデバッグ操作を行うことができる。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The version of vim shipped with Sun Visual WorkShop 6 (also called Forte
Developer 6) is vim 5.3.  The features in this release are much more reliable
than the vim/gvim shipped with Visual WorkShop.  VWS users wishing to use vim
as their editor should compile these sources and install them in their
workshop release tree.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Sun Visual WorkShop 6 (Forte Developer 6 とも呼ばれる) に付属する Vim のバージョンは 5.3 である。このリリース @{訳注: Vim 6@} の機能は Visual WorkShop に付属する vim/gvim よりもかなり頼りになる。vim をエディタとして選択している VWS @{訳注: Visual WorkShop の略@} のユーザーは、@{訳注: Vim 6 の@} ソースをコンパイルし WorkShop のリリースツリーへインストールするべきだ。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
2. Commands						*workshop-commands*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{workshop-commands}
@cindex workshop-commands
@section 2. コマンド
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*:ws* *:wsverb*
:ws[verb] verb			Pass the verb to the verb executor
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@anchor{:ws}
@anchor{:wsverb}
@cindex :ws
@cindex :wsverb
@item :ws[verb] verb
@{verb@} を命令実行エンジンに渡す
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Pass the verb to a workshop function which gathers some arguments and
sends the verb and data to workshop over an IPC connection.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
WorkShop 関数に @{verb@} を渡し、関数は幾つかの引数を集めて @{verb@} とデータを IPC 接続を通じて WorkShop へ送る。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
3. Compiling vim/gvim for WorkShop			*workshop-compiling*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{workshop-compiling}
@cindex workshop-compiling
@section 3. WorkShop 用 vim/gvim のコンパイル
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Compiling vim with FEAT_SUN_WORKSHOP turns on all compile time flags necessary
for building a vim to work with Visual WorkShop.  The features required for VWS
have been built and tested using the Sun compilers from the VWS release.  They
have not been built or tested using Gnu compilers.  This does not mean the
features won't build and run if compiled with gcc, just that nothing is
guaranteed with gcc!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
コンパイル時に FEAT_SUN_WORKSHOP を指定すると、Visual WorkShop に対応した Vim を構築するのに必要なコンパイルフラグが全て有効化される。VWS のリリースに含まれる Sun のコンパイラを使って、VWS に必要な機能が構築されテストされる。GNU のコンパイラを使っている場合は構築もテストもされない。これは gcc では決して構築し実行することができないのではなく、単に保証ができないという意味である。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
4. Configuring gvim for a WorkShop release tree		*workshop-configure*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{workshop-configure}
@cindex workshop-configure
@section 4. WorkShop リリースツリー用 gvim の configure
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
There are several assumptions which must be met in order to compile a gvim for
use with Sun Visual WorkShop 6.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim を Sun Visual WorkShop 6 と共に使えるようにするためには、幾つかの仮定をしなければならない。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    o You should use the compiler in VWS rather than gcc.  We have neither
      built nor tested with gcc and cannot guarantee it will build properly.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item gcc ではなく VWS に付属のコンパイラを使わなければならない。gcc では構築もテストもしていないので正しく構築できるかは保証できない。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    o You must supply your own XPM library.  See |workshop-xpm| below for
      details on obtaining the latest version of XPM.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item XPM ライブラリを自分で用意しなければならない。最新の XPM の入手方法の詳細は下記の |@ref{workshop-xpm}| を参照すること。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    o Edit the Makefile in the src directory and uncomment the lines for Sun
      Visual WorkShop.  You can easily find these by searching for the string
      FEAT_SUN_WORKSHOP
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item ディレクトリ src/ の中の Makefile を編集し、Sun Visual WorkShop のための何行かのコメントを解除する。文字列 FEAT_SUN_WORKSHOP を検索すれば簡単に見つけることができる。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    o We also suggest you use Motif for your gui.  This will provide gvim with
      the same look-and-feel as the rest of Sun Visual WorkShop.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item GUI には Motif を使用することを提案する。そうすれば gvim の外見と感触が Sun Visual WorkShop の他の部分と同じようなものになる。
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The following configuration line can be used to configure vim to build for use
with Sun Visual WorkShop:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
下のコマンドは Sun Visual WorkShop に対応した vim を構築するよう構成したい時に使用できる:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    $ CC=cc configure --enable-workshop --enable-gui=motif \
	-prefix=<VWS-install-dir>/contrib/contrib6/<vim-version>
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
$ CC=cc configure --enable-workshop --enable-gui=motif \
    -prefix=<VWS-install-dir>/contrib/contrib6/<vim-version>
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The VWS-install-dir should be the base directory where your Sun Visual WorkShop
was installed.  By default this is /opt/SUNWspro.  It will normally require
root permissions to install the vim release.  You will also need to change the
symlink <VWS-install-dir>/bin/gvim to point to the vim in your newly installed
directory.  The <vim-version> should be a unique version string.  I use "vim"
concatenated with the equivalent of version.h's VIM_VERSION_SHORT.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
<VWS-install-dir> には Sun Visual WorkShop をインストールしたベースディレクトリを指定する。デフォルトでは /opt/SUNWspro である。通常 Vim をインストールするには管理者権限が必要になる。<VWS-install-dir>/bin/gvim が新しくインストールした gvim を指すように symlink を変更する必要もある。<vim-version> にはバージョンを示す文字列を指定する。著者は "vim" に version.h の中の VIM_VERSION_SHORT と同じ物を付加して使っている。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
5. Obtaining the latest version of the XPM library	*workshop-xpm*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{workshop-xpm}
@cindex workshop-xpm
@section 5. 最新のXPMライブラリの取得方法
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The XPM library is required to show images within Vim with Motif or Athena.
Without it the toolbar and signs will be disabled.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
XPM ライブラリは Vim で (Motif か Athena を使って) 画像を表示するために必要とされる。それ無しではツールバーと目印が利用できなくなる。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The XPM library is provided by Arnaud Le Hors of the French National Institute
for Research in Computer Science and Control.  It can be downloaded from
http://cgit.freedesktop.org/xorg/lib/libXpm.  The current release, as of this
writing, is xpm-3.4k-solaris.tgz, which is a gzip'ed tar file.  If you create
the directory /usr/local/xpm and untar the file there you can use the
uncommented lines in the Makefile without changing them.  If you use another
xpm directory you will need to change the XPM_DIR in src/Makefile.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
XPM ライブラリは French National Institute for Research in Computer Science and Control @{訳注: フランス国立コンピュータ科学/制御研究所---通称 INRIA@} の Arnaud Le Hors によって提供されている。@url{http://cgit.freedesktop.org/xorg/lib/libXpm} よりダウンロードできる。これを書いている時点での最新版は xpm-3.4k-solaris.tgz で gzip された tar ファイルである。

ディレクトリ /usr/local/xpm を作成してそこにファイルを伸長展開したならば、Makefile 内のコメントアウトされた行を内容は変更せずにコメントを解除するだけで使うことができる。もしも xpm を他のディレクトリに置いたならば src/Makefile 内の XPM_DIR を変更する必要がある。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 vim:tw=78:ts=8:ft=help:norl:
@end ifset
