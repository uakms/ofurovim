@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@node Vim のインストール, , 言語を選択する, 目次
@unnumbered Vim のインストール
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
*usr_90.txt*	For Vim version 8.0.  Last change: 2008 Sep 10

		     VIM USER MANUAL - by Bram Moolenaar

				Installing Vim
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{usr_90.txt}
@cindex usr_90.txt
@verbatim
*usr_90.txt*	For Vim バージョン 8.0.  Last change: 2008 Sep 10

		     VIM USER MANUAL - by Bram Moolenaar

			      Vim のインストール
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*install*
Before you can use Vim you have to install it.  Depending on your system it's
simple or easy.  This chapter gives a few hints and also explains how
upgrading to a new version is done.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{install}
@cindex install
Vim を使うにはまずインストールする必要があります。システムにも依りますが、とても簡単な作業です。本章では、若干のヒントと、新しいバージョンへのアップグレード手順を説明します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
|90.1|	Unix
|90.2|	MS-Windows
|90.3|	Upgrading
|90.4|	Common installation issues
|90.5|	Uninstalling Vim

 Previous chapter: |usr_45.txt|  Select your language
Table of contents: |usr_toc.txt|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@menu
* Unix::             90.1
* MS-Windows.::      90.2
* アップグレード::   90.3
* よくある問題::     90.4
* アンインストール:: 90.5
@end menu
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
*90.1*	Unix
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{90.1}
@node Unix
@section Unix
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
First you have to decide if you are going to install Vim system-wide or for a
single user.  The installation is almost the same, but the directory where Vim
is installed in differs.
   For a system-wide installation the base directory "/usr/local" is often
used.  But this may be different for your system.  Try finding out where other
packages are installed.
   When installing for a single user, you can use your home directory as the
base.  The files will be placed in subdirectories like "bin" and "shared/vim".
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
最初に、Vim をシステム全体で使うのか、自分一人で使うのかを決めてください。インストール方法はほぼ同じですが、インストールするディレクトリが異なります。

システムにインストールするときは、ベースディレクトリとして大抵は "/usr/local" が使われます。ただし、これはシステムによって異なります。インストールされている他のパッケージを参考にするなどして調べてください。

自分一人で使う場合は、例えばホームディレクトリをベースディレクトリにします。ファイルはその下の "bin" や "shared/vim" などに置かれます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
FROM A PACKAGE
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec パッケージからインストール
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
You can get precompiled binaries for many different UNIX systems.  There is a
long list with links on this page:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Unix システムごとにコンパイル済みバイナリが用意されています。次のページにパッケージへのリンクが一覧されています:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	http://www.vim.org/binaries.html ~
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@url{http://www.vim.org/binaries.html}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Volunteers maintain the binaries, so they are often out of date.  It is a
good idea to compile your own UNIX version from the source.  Also, creating
the editor from the source allows you to control which features are compiled.
This does require a compiler though.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
バイナリのメンテナンスはボランティアベースなので、古いままになっていることが多々あります。自分でソースからコンパイルする方が無難です。自分でコンパイルすることによって組み込む機能をコントロールできるようにもなります。それが必要な場合はどのみちコンパイルが必要です。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If you have a Linux distribution, the "vi" program is probably a minimal
version of Vim.  It doesn't do syntax highlighting, for example.  Try finding
another Vim package in your distribution, or search on the web site.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Linux を使っている場合、"vi" はおそらく最小構成の Vim です。それには例えば構文強調表示などの機能はありません。そのディストリビューションから別の Vim パッケージが配布されていないか、あるいは Web サイトで公開されていないか調べてみてください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
FROM SOURCES
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec ソースからインストール
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To compile and install Vim, you will need the following:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim をコンパイルしてインストールするには、次のものが必要です:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	-  A C compiler (GCC preferred)
	-  The GZIP program (you can get it from www.gnu.org)
	-  The Vim source and runtime archives
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize @minus
@item C コンパイラ (GCCが望ましい)
@item GZIP プログラム (www.gnu.org から入手可能)
@item Vim のソースとランタイムのアーカイブ
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To get the Vim archives, look in this file for a mirror near you, this should
provide the fastest download:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim のアーカイブを入手するには、次のファイルを見てダウンロード速度が最も早いであろう近くのミラーを探してください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	ftp://ftp.vim.org/pub/vim/MIRRORS ~
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@url{ftp://ftp.vim.org/pub/vim/MIRRORS}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Or use the home site ftp.vim.org, if you think it's fast enough.  Go to the
"unix" directory and you'll find a list of files there.  The version number is
embedded in the file name.  You will want to get the most recent version.
   You can get the files for Unix in two ways: One big archive that contains
everything, or four smaller ones that each fit on a floppy disk.  For version
6.1 the single big one is called:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim のホームサイト ftp.vim.org で十分な速度が出るならそれでも構いません。"unix" ディレクトリにファイルが入っています。バージョン番号はファイル名に埋め込まれています。特に事情がなければ最新のバージョンをダウンロードしてください。

ファイルの入手方法は 2 通りあります。すべてのファイルが含まれた 1 つの大きなアーカイブをダウンロードするか、フロッピーサイズの 4 つの小さなアーカイブをダウンロードします。例えば、バージョン 6.1 の大きなアーカイブは次の名前です:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	vim-6.1.tar.bz2 ~
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
vim-6.1.tar.bz2
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
You need the bzip2 program to uncompress it.  If you don't have it, get the
four smaller files, which can be uncompressed with gzip.  For Vim 6.1 they are
called:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
このアーカイブの展開には "bzip2" が必要です。それがない場合は 4 つの小さなファイルをダウンロードしてください。それらは gzip で展開できます。Vim 6.1 なら次のような名前になっています:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	vim-6.1-src1.tar.gz ~
	vim-6.1-src2.tar.gz ~
	vim-6.1-rt1.tar.gz ~
	vim-6.1-rt2.tar.gz ~
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
vim-6.1-src1.tar.gz
vim-6.1-src2.tar.gz
vim-6.1-rt1.tar.gz
vim-6.1-rt2.tar.gz
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
COMPILING
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec コンパイル
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
First create a top directory to work in, for example: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
まず作業用のディレクトリを作成します。例:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	mkdir ~/vim
	cd ~/vim
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
mkdir ~/vim
cd ~/vim
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Then unpack the archives there.  If you have the one big archive, you unpack
it like this: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
この場所でアーカイブを展開します。大きなアーカイブを使う場合は、次のようにします:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	bzip2 -d -c path/vim-6.1.tar.bz2 | tar xf -
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
bzip2 -d -c path/vim-6.1.tar.bz2 | tar xf -
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Change "path" to where you have downloaded the file. >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"path" の部分は適当に変更してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	gzip -d -c path/vim-6.1-src1.tar.gz | tar xf -
	gzip -d -c path/vim-6.1-src2.tar.gz | tar xf -
	gzip -d -c path/vim-6.1-rt1.tar.gz | tar xf -
	gzip -d -c path/vim-6.1-rt2.tar.gz | tar xf -
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
gzip -d -c path/vim-6.1-src1.tar.gz | tar xf -
gzip -d -c path/vim-6.1-src2.tar.gz | tar xf -
gzip -d -c path/vim-6.1-rt1.tar.gz | tar xf -
gzip -d -c path/vim-6.1-rt2.tar.gz | tar xf -
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If you are satisfied with getting the default features, and your environment
is setup properly, you should be able to compile Vim with just this: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
欲しいのがデフォルトの機能だけで、環境が適切に設定されているのであれば、次のコマンドを実行するだけでコンパイルできます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	cd vim61/src
	make
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
cd vim61/src
make
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The make program will run configure and compile everything.  Further on we
will explain how to compile with different features.
   If there are errors while compiling, carefully look at the error messages.
There should be a hint about what went wrong.  Hopefully you will be able to
correct it.  You might have to disable some features to make Vim compile.
Look in the Makefile for specific hints for your system.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
make プログラムによって configure とコンパイルが実行されます。設定を変更してコンパイルする方法については後で説明します。

コンパイル中にエラーが発生した場合は、エラーメッセージをよく見てください。何が悪かったのかを知るヒントが出ているはずです。可能ならそれを修正してください。もしかしたら何かの機能を無効にする必要があるかもしれません。Makefile を見て自分のシステム特有のヒントがないか確認してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
TESTING
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec テスト
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Now you can check if compiling worked OK: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
コンパイルが正しくできたかどうか確認します:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	make test
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
make test
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
This will run a sequence of test scripts to verify that Vim works as expected.
Vim will be started many times and all kinds of text and messages flash by.
If it is alright you will finally see:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim が期待した動作をするかどうかをテストスクリプトを使って検査します。Vim が何度も実行され、様々なテキストやメッセージが表示されます。最後に次のように表示されたら検査は合格です:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	test results: ~
	ALL DONE ~
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
test results:
ALL DONE
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If you get "TEST FAILURE" some test failed.  If there are one or two messages
about failed tests, Vim might still work, but not perfectly.  If you see a lot
of error messages or Vim doesn't finish until the end, there must be something
wrong.  Either try to find out yourself, or find someone who can solve it.
You could look in the |maillist-archive| for a solution.  If everything else
fails, you could ask in the vim |maillist| if someone can help you.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
テストが失敗すると "TEST FAILURE" と表示されます。失敗メッセージが一つか二つ表示された場合は、Vim はとりあえず動作していますが完全ではありません。エラーメッセージがたくさん表示されたり、テストが最後まで完了しなかった場合は、何か問題があります。自分で解決するか、誰かに聞いてください。メーリングリストの過去ログ (|maillist-archive|) に答えがあるかもしれません。どうしても解決できない場合はVim のメーリングリスト (|maillist|) で質問してみてください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
INSTALLING
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{install-home}
@cindex install-home
@unnumberedsubsec インストール
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
							*install-home*
If you want to install in your home directory, edit the Makefile and search
for a line:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ホームディレクトリにインストールする場合は、Makefile を開いて次の行を探してください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	#prefix = $(HOME) ~
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
#prefix = $(HOME)
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Remove the # at the start of the line.
   When installing for the whole system, Vim has most likely already selected
a good installation directory for you.  You can also specify one, see below.
You need to become root for the following.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
行頭の # を削除します。

システムにインストールする場合は、適切なディレクトリが自動的に選択されます。自分でディレクトリを指定する方法は後述します。以下の作業は root で実行する必要があります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To install Vim do: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
次のコマンドで Vim をインストールします:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	make install
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
make install
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
That should move all the relevant files to the right place.  Now you can try
running vim to verify that it works.  Use two simple tests to check if Vim can
find its runtime files: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
必要なファイルが適切な場所にコピーされます。Vim を起動してみて正しくインストールできたかどうかを確認してください。二つの簡単なテストで、Vim がランタイムファイルを検出できているかどうかを確認します:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	:help
	:syntax enable
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
:help
:syntax enable
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If this doesn't work, use this command to check where Vim is looking for the
runtime files: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
うまく動作しない場合は、次のコマンドで、Vim がどこからランタイムファイルを探しているのか確認してください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	:echo $VIMRUNTIME
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
:echo $VIMRUNTIME
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
You can also start Vim with the "-V" argument to see what happens during
startup: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
また、Vim の起動時に "-V" 引数を付けることで、起動中に起きていることを見ることができます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	vim -V
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
vim -V
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Don't forget that the user manual assumes you Vim in a certain way.  After
installing Vim, follow the instructions at |not-compatible| to make Vim work
as assumed in this manual.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ユーザーマニュアルは Vim が適切に動作することを前提に書かれています。Vim のインストールが終ったら、|@ref{not-compatible, , not-compatible}| の説明に従って、Vim を適切に設定してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
SELECTING FEATURES
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec 機能を選択する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Vim has many ways to select features.  One of the simple ways is to edit the
Makefile.  There are many directions and examples.  Often you can enable or
disable a feature by uncommenting a line.
   An alternative is to run "configure" separately.  This allows you to
specify configuration options manually.  The disadvantage is that you have to
figure out what exactly to type.
   Some of the most interesting configure arguments follow.  These can also be
enabled from the Makefile.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
機能を選択する方法はいろいろあります。最も簡単なのは Makefile を編集する方法です。Makefile には多くの説明やサンプルが書かれています。大抵は行をコメントアウトすることで機能を有効/無効にできます。

make とは別に "configure" を実行する方法もあります。オプションを個別に設定することができます。ただし、オプションを正しく理解して、正確に指定する必要があります。

よく使われる引数を次に示します。これらは Makefile からでも有効にできます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	--prefix={directory}		Top directory where to install Vim.

	--with-features=tiny		Compile with many features disabled.
	--with-features=small		Compile with some features disabled.
	--with-features=big		Compile with more features enabled.
	--with-features=huge		Compile with most features enabled.
					See |+feature-list| for which feature
					is enabled in which case.

	--enable-perlinterp		Enable the Perl interface.  There are
					similar arguments for ruby, python and
					tcl.

	--disable-gui			Do not compile the GUI interface.
	--without-x			Do not compile X-windows features.
					When both of these are used, Vim will
					not connect to the X server, which
					makes startup faster.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .05 .35 .6
@item @tab --prefix=@{directory@} @tab Vim をインストールするトップディレクトリ
@item @tab --with-features=tiny @tab 多くの機能を無効にしてコンパイル
@item @tab --with-features=small @tab 一部の機能を無効にしてコンパイル
@item @tab --with-features=big @tab 多くの機能を有効にしてコンパイル
@item @tab --with-features=huge @tab ほとんどの機能を有効にしてコンパイル。いつどの機能が有効になるのかは |+feature-list| を参照してください。
@item
@item @tab --enable-perlinterp @tab Perl インターフェイスを有効にする。同様に、ruby、python、tclなどもあります。
@item
@item @tab --disable-gui @tab GUI インターフェイスをコンパイルしない。
@item @tab --without-x @tab X-windows の機能をコンパイルしない。これら二つが指定された場合、Vim は X サーバーに接続しません。起動が早くなります。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To see the whole list use: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
オプションの一覧を見るには次のようにします:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	./configure --help
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
./configure --help
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
You can find a bit of explanation for each feature, and links for more
information here: |feature-list|.
   For the adventurous, edit the file "feature.h".  You can also change the
source code yourself!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
各機能の簡単な説明と、より詳しい情報へのリンクは |feature-list| にあります

。冒険野郎な人は "feature.h" を開いてみてください。自分でソースコードを改造することもできますよ！
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
*90.2*	MS-Windows
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{90.2}
@anchor{MS-Windows}
@cindex MS-Windows
@node MS-Windows.
@section MS-Windows
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
There are two ways to install the Vim program for Microsoft Windows.  You can
uncompress several archives, or use a self-installing big archive.  Most users
with fairly recent computers will prefer the second method.  For the first
one, you will need:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim を Microsoft Windows にインストールする方法は 2 つあります。複数のアーカイブを展開するか、インストーラ形式の大きなアーカイブを使います。最近のコンピュータを使っているほとんどのユーザーはインストーラを使います。複数のアーカイブを展開する方法には次のものが必要です:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	- An archive with binaries for Vim.
	- The Vim runtime archive.
	- A program to unpack the zip files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize @minus
@item Vim のバイナリが入ったアーカイブ
@item Vim のランタイムアーカイブ
@item zip ファイルを展開できるプログラム
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To get the Vim archives, look in this file for a mirror near you, this should
provide the fastest download:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim のアーカイブを入手するには、次のファイルを見てダウンロード速度が最も早いであろう近くのミラーを探してください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	ftp://ftp.vim.org/pub/vim/MIRRORS ~
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@url{ftp://ftp.vim.org/pub/vim/MIRRORS}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Or use the home site ftp.vim.org, if you think it's fast enough.  Go to the
"pc" directory and you'll find a list of files there.  The version number is
embedded in the file name.  You will want to get the most recent version.
We will use "61" here, which is version 6.1.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim のホームサイト ftp.vim.org で十分な速度が出るならそれでも構いません。"pc" ディレクトリにファイルが入っています。バージョン番号はファイル名に埋め込まれています。特に事情がなければ最新のバージョンをダウンロードしてください。ここでは "61" (バージョン6.1) を使って説明します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	gvim61.exe		The self-installing archive.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
gvim61.exe    インストーラ
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
This is all you need for the second method.  Just launch the executable, and
follow the prompts.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
必要なのはこのファイルだけです。ファイルを実行し、表示される指示に従ってください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
For the first method you must chose one of the binary archives.  These are
available:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
アーカイブを自分で展開する方法の場合、使用するアーカイブを選択する必要があります。次のものがあります:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	gvim61.zip		The normal MS-Windows GUI version.
	gvim61ole.zip		The MS-Windows GUI version with OLE support.
				Uses more memory, supports interfacing with
				other OLE applications.
	vim61w32.zip		32 bit MS-Windows console version.  For use in
				a Win NT/2000/XP console.  Does not work well
				on Win 95/98.
	vim61d32.zip		32 bit MS-DOS version.  For use in the
				Win 95/98 console window.
	vim61d16.zip		16 bit MS-DOS version.  Only for old systems.
				Does not support long filenames.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .05 .35 .6
@item @tab gvim61.zip @tab 普通の MS-Windows GUI バージョン。
@item @tab gvim61ole.zip @tab OLE サポート付きの MS-Windows GUI バージョン。メモリを食いますが、他の OLE アプリケーションとの通信をサポートしています。
@item @tab vim61w32.zip @tab 32 ビット MS-Windows コンソールバージョン。Win NT/2000/XP コンソール用。Win 95/98 では適切に動作しません。
@item @tab vim61d32.zip @tab 32 ビット MS-DOS バージョン。Win 95/98 コンソール用。
@item @tab vim61d16.zip @tab 16 ビット MS-DOS バージョン。古いシステム用。ロングファイルネームはサポートされてません。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
You only need one of them.  Although you could install both a GUI and a
console version.  You always need to get the archive with runtime files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
必要なのはどれか一つだけです。GUI バージョンとコンソールバージョンを両方インストールすることもできます。いずれの場合でも、さらにランタイムファイルのアーカイブをダウンロードする必要があります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	vim61rt.zip		The runtime files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
vim61rt.zip             ランタイムファイルのアーカイブ
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Use your un-zip program to unpack the files.  For example, using the "unzip"
program: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
zip 展開プログラムを使ってファイルを展開してください。例えば、"unzip" プログラムを使う場合は次のようにします:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	cd c:\
	unzip path\gvim61.zip
	unzip path\vim61rt.zip
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
cd c:\
unzip path\gvim61.zip
unzip path\vim61rt.zip
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
This will unpack the files in the directory "c:\vim\vim61".  If you already
have a "vim" directory somewhere, you will want to move to the directory just
above it.
   Now change to the "vim\vim61" directory and run the install program: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
この例では "c:\vim\vim61" にファイルが展開されます。既にどこかに vim というディレクトリがある場合は、その親ディレクトリで実行してください。

"vim\vim61" に移動して、install プログラムを実行します:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	install
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
install
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Carefully look through the messages and select the options you want to use.
If you finally select "do it" the install program will carry out the actions
you selected.
   The install program doesn't move the runtime files.  They remain where you
unpacked them.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
メッセージをよく読んでオプションを選択してください。最後に "do it" を選択すると、それまでの選択に従ってインストールが実行されます。

インストールプログラムはランタイムファイルを移動しません。それらは展開した場所にあるままです。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
In case you are not satisfied with the features included in the supplied
binaries, you could try compiling Vim yourself.  Get the source archive from
the same location as where the binaries are.  You need a compiler for which a
makefile exists.  Microsoft Visual C works, but is expensive.  The Free
Borland command-line compiler 5.5 can be used, as well as the free MingW and
Cygwin compilers.  Check the file src/INSTALLpc.txt for hints.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
提供されているバイナリに、必要な機能が不足している場合は、自分で Vim をコンパイルしてみてください。ソースのアーカイブはバイナリと同じ場所にあります。対応する Makefile が用意されているコンパイラも必要です。Microsoft Visual C は使えますが高価です。Borland のコマンドラインコンパイラ 5.5 は無料で使えます。MingW と Cygwin のコンパイラも無料です。詳しくは "src/INSTALLpc.txt" を見てください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
*90.3*	Upgrading
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{90.3}
@node アップグレード
@section アップグレード
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If you are running one version of Vim and want to install another, here is
what to do.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
既に Vim がインストールされているところに新たに Vim をインストールする方法を説明します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
UNIX
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec UNIX
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
When you type "make install" the runtime files will be copied to a directory
which is specific for this version.  Thus they will not overwrite a previous
version.  This makes it possible to use two or more versions next to
each other.
   The executable "vim" will overwrite an older version.  If you don't care
about keeping the old version, running "make install" will work fine.  You can
delete the old runtime files manually.  Just delete the directory with the
version number in it and all files below it.  Example: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"make install" を実行すると、ランタイムファイルはバージョンごとのディレクトリにコピーされます。つまり以前のバージョンは上書きされません。複数のバージョンを同時に使うことができます。

古いバージョンの "vim" 実行ファイルは上書きされます。古い実行ファイルが必要ない場合は単に "make install" を実行してください。ランタイムファイルは手動で削除します。古いバージョンのランタイムディレクトリを削除するだけです。例:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	rm -rf /usr/local/share/vim/vim58
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
rm -rf /usr/local/share/vim/vim58
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
There are normally no changed files below this directory.  If you did change
the "filetype.vim" file, for example, you better merge the changes into the
new version before deleting it.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
普通はこのディレクトリ以下のファイルが変更されることはありません。しかし、例えば "filetype.vim" などを変更した場合は、削除する前にその変更を新バージョンの方にマージしてください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If you are careful and want to try out the new version for a while before
switching to it, install the new version under another name.  You need to
specify a configure argument.  For example: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
新しいバージョンに切り替える前に試用期間を設けたい場合は、新しいバージョンを違う名前でインストールしてください。configure に引数を設定する必要があります。例:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	./configure --with-vim-name=vim6
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
./configure --with-vim-name=vim6
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Before running "make install", you could use "make -n install" to check that
no valuable existing files are overwritten.
   When you finally decide to switch to the new version, all you need to do is
to rename the binary to "vim".  For example: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"make install" を実行する前に "make -n install" を実行し、大事なファイルが上書きされないか確認してください。

評価の結果、新しいバージョンに切り替えると決めたら、実行ファイルの名前を変更します。例:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	mv /usr/local/bin/vim6 /usr/local/bin/vim
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
mv /usr/local/bin/vim6 /usr/local/bin/vim
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MS-WINDOWS
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec MS-WINDOWS
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Upgrading is mostly equal to installing a new version.  Just unpack the files
in the same place as the previous version.  A new directory will be created,
e.g., "vim61", for the files of the new version.  Your runtime files, vimrc
file, viminfo, etc. will be left alone.
   If you want to run the new version next to the old one, you will have to do
some handwork.  Don't run the install program, it will overwrite a few files
of the old version.  Execute the new binaries by specifying the full path.
The program should be able to automatically find the runtime files for the
right version.  However, this won't work if you set the $VIMRUNTIME variable
somewhere.
   If you are satisfied with the upgrade, you can delete the files of the
previous version.  See |90.5|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
アップグレードは新しいバージョンをインストールするのとほぼ同じです。古いバージョンと同じ場所にファイルを展開してください。新しいディレクトリ (例えば "vim61") が作成され、その下に新しいバージョンがコピーされます。ランタイムファイル、vimrc、viminfo などはそのまま残ります。

古いものをそのままにして新しいバージョンを実行したい場合は、多少の手作業が必要です。install プログラムを実行すると、古いバージョンのためのファイルがいくつか上書きされてしまいます。新しいバイナリをフルパス指定で実行してください。正しいバージョンのランタイムファイルが自動的に検出されます。ただし、$VIMRUNTIME 変数が定義されている場合はうまく機能しません。

アップグレードが満足のいくものであったなら、旧バージョンのファイルを削除してください。|@ref{90.5, , 90.5}| 参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
*90.4*	Common installation issues
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{90.4}
@node よくある問題
@section よくある問題
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
This section describes some of the common problems that occur when installing
Vim and suggests some solutions.  It also contains answers to many
installation questions.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim のインストール時に起こる問題と、その解決方法を説明します。インストールに関する質問にも答えます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Q: I Do Not Have Root Privileges.  How Do I Install Vim? (Unix)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Q: 私には root 権限がありません。Vim をインストールできますか？ (Unix)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Use the following configuration command to install Vim in a directory called
$HOME/vim: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
次のような引数を付けて configure を実行してください。この例では $HOME/vim に Vim がインストールされます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	./configure --prefix=$HOME
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
./configure --prefix=$HOME
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
This gives you a personal copy of Vim.  You need to put $HOME/bin in your
path to execute the editor.  Also see |install-home|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
自分のディレクトリに Vim がコピーされます。エディタを実行するには $HOME/bin にパスを通す必要があります。|@ref{install-home, , install-home}| も参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Q: The Colors Are Not Right on My Screen. (Unix)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Q: 私の画面では表示される色が正しくありません (Unix)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Check your terminal settings by using the following command in a shell: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
端末の設定を確認してください。シェルの上で次のコマンドを使います:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	echo $TERM
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
echo $TERM
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If the terminal type listed is not correct, fix it.  For more hints, see
|06.2|.  Another solution is to always use the GUI version of Vim, called
gvim.  This avoids the need for a correct terminal setup.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
表示された端末タイプが正しくない場合はそれを修正します。詳しくは |@ref{06.2, , 06.2}| を参照してください。あるいは、gvim と呼ばれる GUI 版の Vim を使ってください。GUI なら端末を正しく設定する必要はありません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Q: My Backspace And Delete Keys Don't Work Right
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Q: Backspace キーと Delete キーが正しく動いていないようです
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The definition of what key sends what code is very unclear for backspace <BS>
and Delete <Del> keys.  First of all, check your $TERM setting.  If there is
nothing wrong with it, try this: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
キーが押されたときに送信されるコードが Backspace @key{<BS>} と Delete @key{<Del>} についてはとてもあいまいです。まず、@env{$TERM} の設定を確認してください。それが問題なければ、次の設定を試してください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	:set t_kb=^V<BS>
	:set t_kD=^V<Del>
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
:set t_kb=^V<BS>
:set t_kD=^V<Del>
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
In the first line you need to press CTRL-V and then hit the backspace key.
In the second line you need to press CTRL-V and then hit the Delete key.
You can put these lines in your vimrc file, see |05.1|.  A disadvantage is
that it won't work when you use another terminal some day.  Look here for
alternate solutions: |:fixdel|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
1 行目の ^V<BS> は @kbd{CTRL-V} を押してから @key{Backspace} キーを押します。2 行目の ^V<Del> は @kbd{CTRL-V} を押してから @key{Delete} キーを押します。この二行を vimrc ファイルに書いておくこともできます (|@ref{05.1, , 05.1}|参照)。ただし、この方法は端末を変更すると機能しなくなります。これ以外の解決方法は |:fixdel| を参照してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Q: I Am Using RedHat Linux.  Can I Use the Vim That Comes with the System?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Q: 私は RedHat Linux を使っています。システム付属の Vim は使えますか？
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
By default RedHat installs a minimal version of Vim.  Check your RPM packages
for something named "Vim-enhanced-version.rpm" and install that.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
RedHat にはデフォルトで最小構成の Vim がインストールされます。"Vim-enhanced-version.rpm" のような名前の RPM パッケージを探して、それをインストールしてください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Q: How Do I Turn Syntax Coloring On?  How do I make plugins work?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Q: テキストを色付きで表示するには？ プラグインを動かすには？
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Use the example vimrc script.  You can find an explanation on how to use it
here: |not-compatible|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
サンプルの vimrc スクリプトを使ってください。説明は |@ref{not-compatible, , not-compatible}| にあります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
See chapter 6 for information about syntax highlighting: |usr_06.txt|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
構文強調表示については第 6 章を参照してください: |@ref{usr_06.txt, , usr_06.txt}|。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Q: What Is a Good vimrc File to Use?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Q: 便利な vimrc ファイルの例はありますか？
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
See the www.vim.org Web site for several good examples.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Web サイト (www.vim.org) に良い例がいくつかあります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Q: Where Do I Find a Good Vim Plugin?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Q: 便利な Vim プラグインはどこにありますか？
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
See the Vim-online site: http://vim.sf.net.  Many users have uploaded useful
Vim scripts and plugins there.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim-online サイト (@url{http://vim.sf.net}) を参照してください。多くのユーザーが便利な Vim script やプラグインをアップロードしています。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
Q: Where Do I Find More Tips?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Q: 便利な Tips はどこにありますか？
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
See the Vim-online site: http://vim.sf.net.  There is an archive with hints
from Vim users.  You might also want to search in the |maillist-archive|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim-online サイト (@url{http://vim.sf.net}) を参照してください。Vim のユーザーから寄せられたヒントが集められています。メーリングリスト (|maillist-archive|) を検索するのもいいでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
*90.5*	Uninstalling Vim
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{90.5}
@node アンインストール
@section アンインストール
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
In the unlikely event you want to uninstall Vim completely, this is how you do
it.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim をアンインストールする機会はあまりないと思いますが、その方法を説明します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
UNIX
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec UNIX
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
When you installed Vim as a package, check your package manager to find out
how to remove the package again.
   If you installed Vim from sources you can use this command: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim をパッケージからインストールした場合は、パッケージマネージャーを確認し、パッケージの除去方法を調べてください。
ソースからインストールした場合は、次のコマンドでアンインストールできます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	make uninstall
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
make uninstall
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
However, if you have deleted the original files or you used an archive that
someone supplied, you can't do this.  Do delete the files manually, here is an
example for when "/usr/local" was used as the root: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
元のファイルを削除してしまった場合や、誰かが作ったアーカイブからインストールした場合は、この方法は使えません。手作業でファイルを削除してください。例えば "/usr/local" にインストールした場合は以下のファイルを root 権限で削除します:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	rm -rf /usr/local/share/vim/vim61
	rm /usr/local/bin/eview
	rm /usr/local/bin/evim
	rm /usr/local/bin/ex
	rm /usr/local/bin/gview
	rm /usr/local/bin/gvim
	rm /usr/local/bin/gvim
	rm /usr/local/bin/gvimdiff
	rm /usr/local/bin/rgview
	rm /usr/local/bin/rgvim
	rm /usr/local/bin/rview
	rm /usr/local/bin/rvim
	rm /usr/local/bin/rvim
	rm /usr/local/bin/view
	rm /usr/local/bin/vim
	rm /usr/local/bin/vimdiff
	rm /usr/local/bin/vimtutor
	rm /usr/local/bin/xxd
	rm /usr/local/man/man1/eview.1
	rm /usr/local/man/man1/evim.1
	rm /usr/local/man/man1/ex.1
	rm /usr/local/man/man1/gview.1
	rm /usr/local/man/man1/gvim.1
	rm /usr/local/man/man1/gvimdiff.1
	rm /usr/local/man/man1/rgview.1
	rm /usr/local/man/man1/rgvim.1
	rm /usr/local/man/man1/rview.1
	rm /usr/local/man/man1/rvim.1
	rm /usr/local/man/man1/view.1
	rm /usr/local/man/man1/vim.1
	rm /usr/local/man/man1/vimdiff.1
	rm /usr/local/man/man1/vimtutor.1
	rm /usr/local/man/man1/xxd.1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
rm -rf /usr/local/share/vim/vim61
rm /usr/local/bin/eview
rm /usr/local/bin/evim
rm /usr/local/bin/ex
rm /usr/local/bin/gview
rm /usr/local/bin/gvim
rm /usr/local/bin/gvim
rm /usr/local/bin/gvimdiff
rm /usr/local/bin/rgview
rm /usr/local/bin/rgvim
rm /usr/local/bin/rview
rm /usr/local/bin/rvim
rm /usr/local/bin/rvim
rm /usr/local/bin/view
rm /usr/local/bin/vim
rm /usr/local/bin/vimdiff
rm /usr/local/bin/vimtutor
rm /usr/local/bin/xxd
rm /usr/local/man/man1/eview.1
rm /usr/local/man/man1/evim.1
rm /usr/local/man/man1/ex.1
rm /usr/local/man/man1/gview.1
rm /usr/local/man/man1/gvim.1
rm /usr/local/man/man1/gvimdiff.1
rm /usr/local/man/man1/rgview.1
rm /usr/local/man/man1/rgvim.1
rm /usr/local/man/man1/rview.1
rm /usr/local/man/man1/rvim.1
rm /usr/local/man/man1/view.1
rm /usr/local/man/man1/vim.1
rm /usr/local/man/man1/vimdiff.1
rm /usr/local/man/man1/vimtutor.1
rm /usr/local/man/man1/xxd.1
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MS-WINDOWS
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec MS-WINDOWS
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If you installed Vim with the self-installing archive you can run
the "uninstall-gui" program located in the same directory as the other Vim
programs, e.g. "c:\vim\vim61".  You can also launch it from the Start menu if
installed the Vim entries there.  This will remove most of the files, menu
entries and desktop shortcuts.  Some files may remain however, as they need a
Windows restart before being deleted.
   You will be given the option to remove the whole "vim" directory.  It
probably contains your vimrc file and other runtime files that you created, so
be careful.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
インストーラを使ってインストールした場合は、Vim の実行ファイルと同じディレクトリ (例: "c:\vim\vim61") にある "uninstall-gui" プログラムを実行してください。スタートメニューに登録した場合は、そこから起動しても構いません。それによって、ほとんどのファイルと、メニューと、デスクトップのショートカットが削除されます。いくつかのファイルは削除されずに残るかもしれませんが、それらを削除するには Windows の再起動が必要です。

"vim" ディレクトリをまるごと削除するという方法もあります。あなたが作成した vimrc ファイルやランタイムファイルがそこに保存されている場合は慎重に実行してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Else, if you installed Vim with the zip archives, the preferred way is to use
the "uninstal" program (note the missing l at the end).  You can find it in
the same directory as the "install" program, e.g., "c:\vim\vim61".  This
should also work from the usual "install/remove software" page.
   However, this only removes the registry entries for Vim.  You have to
delete the files yourself.  Simply select the directory "vim\vim61" and delete
it recursively.  There should be no files there that you changed, but you
might want to check that first.
   The "vim" directory probably contains your vimrc file and other runtime
files that you created.  You might want to keep that.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
zip アーカイブからインストールした場合は、"uninstal" プログラムを使ってください (Note:末尾の l 注意)。"install" プログラムと同じディレクトリにあります (例: "c:\vim\vim61")。コントロールパネルの「アプリケーションの追加と削除」からも削除できます。

ただし、これはレジストリの登録を削除するだけです。ファイルの削除は自分でやる必要があります。単に "vim\vim61" をまるごと削除します。そこにあなたが変更を加えたファイルは保存されていないと思いますが、念のため確認してください。

"vim" ディレクトリにあなたが作成した vimrc ファイルやランタイムファイルが入っているなら、それらは残しておいた方がいいかもしれません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================

Table of contents: |usr_toc.txt|

Copyright: see |manual-copyright|  vim:tw=78:ts=8:ft=help:norl:
@end ifset
