@ifset JA  @c ----------- v -----------  JA  -*- tab-width: 8 -*-
@node pi_vimball.txt, , , 目次
@unnumbered Vim script インストーラを作成する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
*pi_vimball.txt*	For Vim version 8.1.  Last change: 2016 Apr 11

			       ----------------
			       Vimball Archiver
			       ----------------

Author:  Charles E. Campbell  <NdrOchip@ScampbellPfamily.AbizM>
	  (remove NOSPAM from Campbell's email first)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
*pi_vimball.txt*        For Vim バージョン 8.1.  Last change: 2016 Apr 11

                               ----------------
                               Vimball Archiver
                               ----------------

Author:  Charles E. Campbell  <NdrOchip@ScampbellPfamily.AbizM>
          (remove NOSPAM from Campbell's email first)
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Copyright: (c) 2004-2015 by Charles E. Campbell		*Vimball-copyright*
	The VIM LICENSE (see |copyright|) applies to the files in this
	package, including vimballPlugin.vim, vimball.vim, and pi_vimball.txt.
	except use "vimball" instead of "VIM".  Like anything else that's free,
	vimball.vim and its associated files are provided *as is* and comes with
	no warranty of any kind, either expressed or implied.  No guarantees
	of merchantability.  No guarantees of suitability for any purpose.  By
	using this plugin, you agree that in no event will the copyright
	holder be liable for any damages resulting from the use of this
	software. Use at your own risk!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{Vimball-copyright}
@cindex Vimball-copyright
@verbatim
Copyright: (c) 2004-2015 by Charles E. Campbell
        The VIM LICENSE (see |copyright|) applies to the files in this
        package, including vimballPlugin.vim, vimball.vim, and pi_vimball.txt.
        except use "vimball" instead of "VIM".  Like anything else that's free,
        vimball.vim and its associated files are provided *as is* and comes with
        no warranty of any kind, either expressed or implied.  No guarantees
        of merchantability.  No guarantees of suitability for any purpose.  By
        using this plugin, you agree that in no event will the copyright
        holder be liable for any damages resulting from the use of this
        software. Use at your own risk!
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
1. Contents				*vba* *vimball* *vimball-contents*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{vba}
@anchor{vimball}
@anchor{vimball-contents}
@cindex vba
@cindex vimball
@cindex vimball-contents
@section 1. 目次
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	1. Contents......................................: |vimball-contents|
	2. Vimball Introduction..........................: |vimball-intro|
	3. Vimball Manual................................: |vimball-manual|
	   MkVimball.....................................: |:MkVimball|
	   UseVimball....................................: |:UseVimball|
	   RmVimball.....................................: |:RmVimball|
	4. Vimball History...............................: |vimball-history|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .5 .5
@item 1. 目次 @tab |@ref{vimball-contents}|
@item 2. はじめに @tab |@ref{vimball-intro}|
@item 3. マニュアル @tab |@ref{vimball-manual}|
@item @ @ @ @ MkVimball @tab |@ref{:MkVimball}|
@item @ @ @ @ UseVimball @tab |@ref{:UseVimball}|
@item @ @ @ @ RmVimball @tab |@ref{:RmVimball}|
@item 4. 開発履歴 @tab |@ref{vimball-history}|
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
==============================================================================
2. Vimball Introduction						*vimball-intro*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{vimball-intro}
@cindex vimball-intro
@section 2. はじめに
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Vimball is intended to make life simpler for users of plugins.  All
	a user needs to do with a vimball is: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vimball はプラグインの利用方法をシンプルにします。vimball は次のように実行するだけで利用できます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		vim someplugin.vba
		:so %
		:q
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
vim someplugin.vba
:so %
:q
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
<	and the plugin and all its components will be installed into their
	appropriate directories.  Note that one doesn't need to be in any
	particular directory when one does this.  Plus, any help for the
	plugin will also be automatically installed.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
すると、プラグインが適切なディレクトリにインストールされます。実行前に適切なディレクトリに移動する必要なんてありません。プラグインのヘルプも自動的にインストールされます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	If a user has decided to use the AsNeeded plugin, vimball is smart
	enough to put scripts nominally intended for .vim/plugin/ into
	.vim/AsNeeded/ instead.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
AsNeeded プラグインを使っている場合、vimball は .vim/plugin/ に入る予定のものを適切に .vim/AsNeeded/ に入れます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Removing a plugin that was installed with vimball is really easy: >
		vim
		:RmVimball someplugin
<	This operation is not at all easy for zips and tarballs, for example.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
vimball でインストールしたプラグインを削除するのは簡単です:
@example
vim
:RmVimball someplugin
@end example
例えば zip や tarball でインストールした場合はこのように簡単ではありません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Vimball examines the user's |'runtimepath'| to determine where to put
	the scripts.  The first directory mentioned on the runtimepath is
	usually used if possible.  Use >
		:echo &rtp
<	to see that directory.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vimball はユーザーの |@ref{'runtimepath'}| 設定を見てスクリプトのインストール場所を決定します。通常は runtimepath の最初の使用可能なディレクトリが使われます。次のコマンドでディレクトリを確認できます
@example
:echo &rtp
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
==============================================================================
3. Vimball Manual					*vimball-manual*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{vimball-manual}
@cindex vimball-manual
@section 3. マニュアル
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
MAKING A VIMBALL						*:MkVimball*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{:MkVimball}
@pindex :MkVimball
@unnumberedsubsec VIMBALL の作成
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		:[range]MkVimball[!] filename [path]
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
:[range]MkVimball[!] filename [path]
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	The range is composed of lines holding paths to files to be included
	in your new vimball, omitting the portion of the paths that is
	normally specified by the runtimepath (|'rtp'|).  As an example: >
		plugin/something.vim
		doc/something.txt
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
作成する vimball に含めるファイルのパスを書き、それらの行を範囲指定して実行します。パスは runtimepath (|@ref{'rtp'}|) からの相対パスです。例:
@example
plugin/something.vim
doc/something.txt
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
<	using >
		:[range]MkVimball filename
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
この 2 行を範囲指定して次のように実行すると
@example
:[range]MkVimball filename
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	on this range of lines will create a file called "filename.vba" which
	can be used by Vimball.vim to re-create these files.  If the
	"filename.vba" file already exists, then MkVimball will issue a
	warning and not create the file.  Note that these paths are relative
	to your .vim (vimfiles) directory, and the files should be in that
	directory.  The vimball plugin normally uses the first |'runtimepath'|
	directory that exists as a prefix; don't use absolute paths, unless
	the user has specified such a path.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"filename.vba" という名前のファイルが作成されます。Vimball.vim を使うことでこのファイルから元のファイルを再構成できます。"filename.vba" が既に存在する場合は警告が表示され、ファイルは作成されません。ファイルのパスは .vim (vimfiles) ディレクトリからの相対パスで、ファイルが存在している必要があります。通常は |@ref{'runtimepath'}| の最初のディレクトリが相対パスのルートとして使われます。特別な理由がない限り絶対パスを使わないでください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	If you use the exclamation point (!), then MkVimball will create the
	"filename.vba" file, overwriting it if it already exists.  This
	behavior resembles that for |:w|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
感嘆符 (!) を指定すると、既存の "filename.vba" は上書きされます。|@ref{:w}| コマンドの動作と同じようなものです。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	If you wish to force slashes into the filename, that can also be done
	by using the exclamation mark (ie. :MkVimball! path/filename).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ファイル名にスラッシュを含めたい場合も感嘆符を付ける必要があります (例: :MkVimball! path/filename)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	The tip at http://vim.wikia.com/wiki/Using_VimBall_with_%27Make%27
	has a good idea on how to automate the production of vimballs using
	make.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@url{http://vim.wikia.com/wiki/Using_VimBall_with_%27Make%27} に、作品の vimball の作成を make を使って自動化するための tip が掲載されています。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MAKING DIRECTORIES VIA VIMBALLS				*g:vimball_mkdir*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:vimball_mkdir}
@vindex g:vimball_mkdir
@unnumberedsubsec VIMBALL によるディレクトリの作成
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	First, the |mkdir()| command is tried (not all systems support it).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
最初に |@ref{mkdir()}| コマンドが試されます (それをサポートしていないシステムもあります)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	If it doesn't exist, then if g:vimball_mkdir doesn't exist, it is set
	as follows: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{mkdir()}| が使えず、g:vimball_mkdir が設定されていない場合は、次の順番で設定されます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	  |g:netrw_localmkdir|, if it exists
	  "mkdir"             , if it is executable
	  "makedir"           , if it is executable
	  Otherwise           , it is undefined.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .5 .5
@item |@ref{g:netrw_localmkdir}| @tab (変数が存在するなら)
@item "mkdir" @tab (コマンドが存在するなら)
@item "makedir" @tab (コマンドが存在するなら)
@item すべてだめなら @tab (未定義)
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
<	One may explicitly specify the directory making command using
	g:vimball_mkdir.  This command is used to make directories that
	are needed as indicated by the vimball.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
g:vimball_mkdir にはディレクトリ作成コマンドを指定します。自分で設定することもできます。このコマンドは vimball 展開時にディレクトリを作成するために使われます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
CONTROLLING THE VIMBALL EXTRACTION DIRECTORY		*g:vimball_home*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:vimball_home}
@vindex g:vimball_home
@unnumberedsubsec VIMBALL を展開するディレクトリの設定
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	You may override the use of the |'runtimepath'| by specifying a
	variable, g:vimball_home.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
vimball によって使用される |@ref{'runtimepath'}| を指定したい場合は g:vimball_home 変数を設定してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
							*vimball-extract*
		vim filename.vba
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{vimball-extract}
@cindex vimball-extract
@verbatim
vim filename.vba
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Simply editing a Vimball will cause Vimball.vim to tell the user to
	source the file to extract its contents.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ファイルを展開するには、Vimball ファイルを Vim で開き、そのファイルを実行 (@command{:source %}) してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Extraction will only proceed if the first line of a putative vimball
	file holds the "Vimball Archiver by Charles E. Campbell" line.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vimball ファイルの 1 行目が "Vimball Archiver by Charles E. Campbell" となっている場合のみ、ファイルを展開できます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
LISTING FILES IN A VIMBALL					*:VimballList*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{:VimballList}
@pindex :VimballList
@unnumberedsubsec VIMBALL 内のファイルを一覧表示する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		:VimballList
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
:VimballList
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	This command will tell Vimball to list the files in the archive, along
	with their lengths in lines.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
このコマンドを実行すると、Vimball ファイルに含まれているファイルと、それぞれの行数が表示されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
MANUALLY INVOKING VIMBALL EXTRACTION				*:UseVimball*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{:UseVimball}
@pindex :UseVimball
@unnumberedsubsec VIMBALL の展開を手動で呼び出す
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		:UseVimball [path]
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
:UseVimball [path]
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	This command is contained within the vimball itself; it invokes the
	vimball#Vimball() routine which is responsible for unpacking the
	vimball.  One may choose to execute it by hand instead of sourcing
	the vimball; one may also choose to specify a path for the
	installation, thereby overriding the automatic choice of the first
	existing directory on the |'runtimepath'|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
このコマンドは vimball に埋め込まれます。これは vimbal#Vimball() を呼び出して vimball を展開します。vimball を実行する代わりに、このコマンドを自分で実行しても構いません。その場合、インストール先のパスを指定できます。指定がない場合は |@ref{'runtimepath'}| の最初の存在するディレクトリが使用されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
REMOVING A VIMBALL						*:RmVimball*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{:RmVimball}
@pindex :RmVimball
@unnumberedsubsec VIMBALL の削除
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		:RmVimball vimballfile [path]
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
:RmVimball vimballfile [path]
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	This command removes all files generated by the specified vimball
	(but not any directories it may have made).  One may choose a path
	for de-installation, too (see |'runtimepath'|); otherwise, the
	default is the first existing directory on the |'runtimepath'|.
	To implement this, a file (.VimballRecord) is made in that directory
	containing a record of what files need to be removed for all vimballs
	used thus far.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
vimball に含まれていたすべてのファイルを削除します (ディレクトリは削除されません)。アンインストール元のパスを指定できます (|@ref{'runtimepath'}| 参照)。指定がない場合は |@ref{'runtimepath'}| の最初の存在するディレクトリが使用されます。

この機能を実現するため、インストールパスに @file{.VimballRecord} というファイルが作成され、削除すべきファイル (それまでに vimball によってインストールされたファイル) が記録されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
PREVENTING LOADING
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec ロードの無効化
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	If for some reason you don't want to be able to extract plugins
	using vimballs: you may prevent the loading of vimball.vim by
	putting the following two variables in your <.vimrc>: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
もしなんらかの理由で vimballs プラグインを使いたくない場合は、次の 2 つの変数を <@file{.vimrc}> で設定すると、vimball.vim の読み込みを無効化できます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		let g:loaded_vimballPlugin= 1
		let g:loaded_vimball      = 1
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
let g:loaded_vimballPlugin= 1
let g:loaded_vimball      = 1
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
WINDOWS							*vimball-windows*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{vimball-windows}
@cindex vimball-windows
@unnumberedsubsec WINDOWS
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Many vimball files are compressed with gzip.  Windows, unfortunately,
	does not come provided with a tool to decompress gzip'ped files.
	Fortunately, there are a number of tools available for Windows users
	to un-gzip files:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
多くの vimball ファイルは gzip で圧縮されています。残念ながら Windowsには gzip 圧縮されたファイルを展開するためのツールが含まれていません。しかし幸運にも、Windows ユーザーにも使える gzip 展開ツールがいくつかあります:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
>
	    Item     Tool/Suite   Free   Website
	    ----     ----------   ----   -------
	    7zip        tool       y     http://www.7-zip.org/
	    Winzip      tool       n     http://www.winzip.com/downwz.htm
	    unxutils    suite      y     http://unxutils.sourceforge.net/
	    cygwin      suite      y     http://www.cygwin.com/
	    GnuWin32    suite      y     http://gnuwin32.sourceforge.net/
	    MinGW       suite      y     http://www.mingw.org/
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .2 .2 .2 .4
@headitem Item @tab Tool/Suite @tab Free @tab Website
@item 7zip @tab tool @tab y @tab @url{http://www.7-zip.org/}
@item Winzip @tab tool @tab n @tab @url{http://www.winzip.com/downwz.htm}
@item unxutils @tab suite @tab y @tab @url{http://unxutils.sourceforge.net/}
@item cygwin @tab suite @tab y @tab @url{http://www.cygwin.com/}
@item GnuWin32 @tab suite @tab y @tab @url{http://gnuwin32.sourceforge.net/}
@item MinGW @tab suite @tab y @tab @url{http://www.mingw.org/}
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
4. Vimball History					*vimball-history* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{vimball-history}
@cindex vimball-history
@section 4. 開発履歴
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	37 : Jul 18, 2014 * (by request of T. Miedema) added augroup around
			    the autocmds in vimballPlugin.vim
	     Jul 06, 2015 * there are two uses of tabc; changed to tabc!
	34 : Sep 22, 2011 * "UseVimball path" now supports a non-full path by
			    prepending the current directory to it.
	33 : Apr 02, 2011 * Gave priority to *.vmb over *.vba
			  * Changed silent! to sil! (shorter)
			  * Safed |'swf'| setting (during vimball extraction,
			    its now turned off)
	32 : May 19, 2010 * (Christian Brabrandt) :so someplugin.vba and
			    :so someplugin.vba.gz (and the other supported
			    compression types) now works
			  * (Jan Steffens) added support for xz compression
			  * fenc extraction was erroneously picking up the
			    end of the line number when no file encoding
			    was present.  Fixed.
			  * By request, beginning the switchover from the vba
			    extension to vmb.  Currently both are supported;
			    MkVimball, however, now will create *.vmb files.
	     Feb 11, 2011 * motoyakurotsu reported an error with vimball's
			    handling of zero-length files
	     Feb 18, 2016 * Changed =~ to =~# where appropriate
	30 : Dec 08, 2008 * fnameescape() inserted to protect error
			    messaging using corrupted filenames from
			    causing problems
			  * RmVimball supports filenames that would
			    otherwise be considered to have "magic"
			    characters (ie. Abc[1].vba)
	     Feb 18, 2009 * s:Escape(), g:vimball_shq, and g:netrw_shq
			    removed (shellescape() used directly)
	     Oct 05, 2009 * (Nikolai Weibull) suggested that MkVimball
			    be allowed to use slashes in the filename.
	26 : May 27, 2008 * g:vimball_mkdir usage installed.  Makes the
	                    $HOME/.vim (or $HOME\vimfiles) directory if
			    necessary.
	     May 30, 2008 * (tnx to Bill McCarthy) found and fixed a bug:
			    vimball wasn't updating plugins to AsNeeded/
			    when it should
	25 : Mar 24, 2008 * changed vimball#Vimball() to recognize doc/*.??x
			    files as help files, too.
	     Apr 18, 2008 * RmVimball command is now protected by saving and
	                    restoring settings -- in particular, acd was
			    causing problems as reported by Zhang Shuhan
	24 : Nov 15, 2007 * g:vimball_path_escape used by s:Path() to
	                    prevent certain characters from causing trouble
			    (defunct: |fnameescape()| and |shellescape()|
			    now used instead)
	22 : Mar 21, 2007 * uses setlocal instead of set during BufEnter
	21 : Nov 27, 2006 * (tnx to Bill McCarthy) vimball had a header
	                    handling problem and it now changes \s to /s
	20 : Nov 20, 2006 * substitute() calls have all had the 'e' flag
	                    removed.
	18 : Aug 01, 2006 * vimballs now use folding to easily display their
	                    contents.
			  * if a user has AsNeeded/somefile, then vimball
			    will extract plugin/somefile to the AsNeeded/
			    directory
	17 : Jun 28, 2006 * changes all \s to /s internally for Windows
	16 : Jun 15, 2006 * A. Mechelynck's idea to allow users to specify
			    installation root paths implemented for
			    UseVimball, MkVimball, and RmVimball.
			  * RmVimball implemented
	15 : Jun 13, 2006 * bugfix
	14 : May 26, 2006 * bugfixes
	13 : May 01, 2006 * exists("&acd") used to determine if the acd
			    option exists
	12 : May 01, 2006 * bugfix - the |'acd'| option is not always defined
	11 : Apr 27, 2006 * VimballList would create missing subdirectories that
			    the vimball specified were needed.  Fixed.
	10 : Apr 27, 2006 * moved all setting saving/restoration to a pair of
			    functions.  Included some more settings in them
			    which frequently cause trouble.
	9  : Apr 26, 2006 * various changes to support Windows' predilection
			    for backslashes and spaces in file and directory
			    names.
	7  : Apr 25, 2006 * bypasses foldenable
			  * uses more exe and less norm! (:yank :put etc)
			  * does better at insuring a "Press ENTER" prompt
			    appears to keep its messages visible
	4  : Mar 31, 2006 * BufReadPost seems to fire twice; BufReadEnter
			    only fires once, so the "Source this file..."
			    message is now issued only once.
	3  : Mar 20, 2006 * removed query, now requires sourcing to be
			    extracted (:so %).  Message to that effect
			    included.
			  * :VimballList  now shows files that would be
			    extracted.
	2  : Mar 20, 2006 * query, :UseVimball included
	1  : Mar 20, 2006 * initial release
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
37 : Jul 18, 2014 * (by request of T. Miedema) added augroup around
                    the autocmds in vimballPlugin.vim
     Jul 06, 2015 * there are two uses of tabc; changed to tabc!
34 : Sep 22, 2011 * "UseVimball path" now supports a non-full path by
                    prepending the current directory to it.
33 : Apr 02, 2011 * Gave priority to *.vmb over *.vba
                  * Changed silent! to sil! (shorter)
                  * Safed |'swf'| setting (during vimball extraction,
                    its now turned off)
32 : May 19, 2010 * (Christian Brabrandt) :so someplugin.vba and
                    :so someplugin.vba.gz (and the other supported
                    compression types) now works
                  * (Jan Steffens) added support for xz compression
                  * fenc extraction was erroneously picking up the
                    end of the line number when no file encoding
                    was present.  Fixed.
                  * By request, beginning the switchover from the vba
                    extension to vmb.  Currently both are supported;
                    MkVimball, however, now will create *.vmb files.
     Feb 11, 2011 * motoyakurotsu reported an error with vimball's
                    handling of zero-length files
     Feb 18, 2016 * Changed =~ to =~# where appropriate
30 : Dec 08, 2008 * fnameescape() inserted to protect error
                    messaging using corrupted filenames from
                    causing problems
                  * RmVimball supports filenames that would
                    otherwise be considered to have "magic"
                    characters (ie. Abc[1].vba)
     Feb 18, 2009 * s:Escape(), g:vimball_shq, and g:netrw_shq
                    removed (shellescape() used directly)
     Oct 05, 2009 * (Nikolai Weibull) suggested that MkVimball
                    be allowed to use slashes in the filename.
26 : May 27, 2008 * g:vimball_mkdir usage installed.  Makes the
                    $HOME/.vim (or $HOME\vimfiles) directory if
                    necessary.
     May 30, 2008 * (tnx to Bill McCarthy) found and fixed a bug:
                    vimball wasn't updating plugins to AsNeeded/
                    when it should
25 : Mar 24, 2008 * changed vimball#Vimball() to recognize doc/*.??x
                    files as help files, too.
     Apr 18, 2008 * RmVimball command is now protected by saving and
                    restoring settings -- in particular, acd was
                    causing problems as reported by Zhang Shuhan
24 : Nov 15, 2007 * g:vimball_path_escape used by s:Path() to
                    prevent certain characters from causing trouble
                    (defunct: |fnameescape()| and |shellescape()|
                    now used instead)
22 : Mar 21, 2007 * uses setlocal instead of set during BufEnter
21 : Nov 27, 2006 * (tnx to Bill McCarthy) vimball had a header
                    handling problem and it now changes \s to /s
20 : Nov 20, 2006 * substitute() calls have all had the 'e' flag
                    removed.
18 : Aug 01, 2006 * vimballs now use folding to easily display their
                    contents.
                  * if a user has AsNeeded/somefile, then vimball
                    will extract plugin/somefile to the AsNeeded/
                    directory
17 : Jun 28, 2006 * changes all \s to /s internally for Windows
16 : Jun 15, 2006 * A. Mechelynck's idea to allow users to specify
                    installation root paths implemented for
                    UseVimball, MkVimball, and RmVimball.
                  * RmVimball implemented
15 : Jun 13, 2006 * bugfix
14 : May 26, 2006 * bugfixes
13 : May 01, 2006 * exists("&acd") used to determine if the acd
                    option exists
12 : May 01, 2006 * bugfix - the |'acd'| option is not always defined
11 : Apr 27, 2006 * VimballList would create missing subdirectories that
                    the vimball specified were needed.  Fixed.
10 : Apr 27, 2006 * moved all setting saving/restoration to a pair of
                    functions.  Included some more settings in them
                    which frequently cause trouble.
9  : Apr 26, 2006 * various changes to support Windows' predilection
                    for backslashes and spaces in file and directory
                    names.
7  : Apr 25, 2006 * bypasses foldenable
                  * uses more exe and less norm! (:yank :put etc)
                  * does better at insuring a "Press ENTER" prompt
                    appears to keep its messages visible
4  : Mar 31, 2006 * BufReadPost seems to fire twice; BufReadEnter
                    only fires once, so the "Source this file..."
                    message is now issued only once.
3  : Mar 20, 2006 * removed query, now requires sourcing to be
                    extracted (:so %).  Message to that effect
                    included.
                  * :VimballList  now shows files that would be
                    extracted.
2  : Mar 20, 2006 * query, :UseVimball included
1  : Mar 20, 2006 * initial release
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
==============================================================================
vim:tw=78:ts=8:noet:ft=help:fdm=marker
@end ifset
