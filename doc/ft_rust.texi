@ifset JA  @c ----------- v -----------  JA  -*- tab-width: 8 -*-
@node ft_rust.txt, , , 目次
@unnumbered Rust ファイルタイププラグイン
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
*ft_rust.txt*	For Vim version 8.1.  Last change: 2017 Nov 02

This is documentation for the Rust filetype plugin.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
*ft_rust.txt*	For Vim version 8.1.  Last change: 2017 Nov 02

これは Rust のファイルタイププラグインのドキュメントです。
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
CONTENTS                                                      *rust*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{rust}
@cindex rust
内容
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
1. Introduction                                                   |rust-intro|
2. Settings                                                    |rust-settings|
3. Commands                                                    |rust-commands|
4. Mappings                                                    |rust-mappings|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .5 .5
@item 1. 前書き @tab |@ref{rust-intro}|
@item 2. 設定 @tab |@ref{rust-settings}|
@item 3. コマンド @tab |@ref{rust-commands}|
@item 4. マッピング @tab |@ref{rust-mappings}|
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
INTRODUCTION                                                      *rust-intro*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{rust-intro}
@cindex rust-intro
@section 1. 前書き
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
This plugin provides syntax and supporting functionality for the Rust
filetype.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
このプラグインは Rust ファイルタイプのシンタックスとサポート機能を提供します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
SETTINGS                                                       *rust-settings*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{rust-settings}
@cindex rust-settings
@section 2. 設定
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
This plugin has a few variables you can define in your vimrc that change the
behavior of the plugin.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
このプラグインは振る舞いを変える vimrc で定義できる少数の変数を持ちます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
                                                                *g:rustc_path*
g:rustc_path~
	Set this option to the path to rustc for use in the |:RustRun| and
	|:RustExpand| commands. If unset, "rustc" will be located in $PATH: >
	    let g:rustc_path = $HOME."/bin/rustc"
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@anchor{g:rustc_path}
@vindex g:rustc_path
@item g:rustc_path
このオプションを |@ref{:RustRun}| と |@ref{:RustExpand}| の中で使う rustc へのパスに設定します。未設定なら、"rustc" は @env{$PATH} の中で見つけられるでしょう:
@example
let g:rustc_path = $HOME."/bin/rustc"
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
                                                  *g:rustc_makeprg_no_percent*
g:rustc_makeprg_no_percent~
	Set this option to 1 to have 'makeprg' default to "rustc" instead of
	"rustc %": >
	    let g:rustc_makeprg_no_percent = 1
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:rustc_makeprg_no_percent}
@vindex g:rustc_makeprg_no_percent
@item g:rustc_makeprg_no_percent
'@option{makeprg}' の初期値を "rustc %" の代わりに "rustc" に保つためにこのオプションを 1 に設定します:
@example
let g:rustc_makeprg_no_percent = 1
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
                                                              *g:rust_conceal*
g:rust_conceal~
	Set this option to turn on the basic |conceal| support: >
	    let g:rust_conceal = 1
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:rust_conceal}
@vindex g:rust_conceal
@item g:rust_conceal
基本的な |@ref{conceal}| サポートを有効にするにはこのオプションを設定します:
@example
let g:rust_conceal = 1
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
                                                     *g:rust_conceal_mod_path*
g:rust_conceal_mod_path~
	Set this option to turn on |conceal| for the path connecting token
	"::": >
	    let g:rust_conceal_mod_path = 1
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:rust_conceal_mod_path}
@vindex g:rust_conceal_mod_path
@item g:rust_conceal_mod_path
パスをつなげるトークン "::" の |@ref{conceal}| を有効にするにはこのオプションを設定します:
@example
let g:rust_conceal_mod_path = 1
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
                                                          *g:rust_conceal_pub*
g:rust_conceal_pub~
	Set this option to turn on |conceal| for the "pub" token: >
	    let g:rust_conceal_pub = 1
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:rust_conceal_pub}
@vindex g:rust_conceal_pub
@item g:rust_conceal_pub
"pub" トークンの |@ref{conceal}| を有効にするにはこのオプションを設定します:
@example
let g:rust_conceal_pub = 1
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
                                                     *g:rust_recommended_style*
g:rust_recommended_style~
        Set this option to enable vim indentation and textwidth settings to
        conform to style conventions of the rust standard library (i.e. use 4
        spaces for indents and sets 'textwidth' to 99). This option is enabled
	by default. To disable it: >
	    let g:rust_recommended_style = 0
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:rust_recommended_style}
@vindex g:rust_recommended_style
@item g:rust_recommended_style
rust 標準ライブラリのスタイル慣習 (すなわち、インデントに 4 つスペースを使い '@option{textwidth}' に 99 を設定します) に従うインデントと textwidth の設定を有効にするためにはこのオプションを設定します。デフォルトではこのオプションは有効です。無効にするには:
@example
let g:rust_recommended_style = 0
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
                                                                 *g:rust_fold*
g:rust_fold~
	Set this option to turn on |folding|: >
	    let g:rust_fold = 1
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:rust_fold}
@vindex g:rust_fold
@item g:rust_fold
|@ref{folding}| を有効にするにはこのオプションを設定します:
@example
let g:rust_fold = 1
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	Value		Effect ~
	0		No folding
	1		Braced blocks are folded. All folds are open by
			default.
	2		Braced blocks are folded. 'foldlevel' is left at the
			global value (all folds are closed by default).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .05 .95
@headitem 値 @tab 効果
@item 0 @tab 折り畳みなし
@item 1 @tab 中括弧ブロックは折り畳まれます。デフォルトですべての折り畳みは開かれます。
@item 2 @tab 中括弧ブロックは折り畳まれます。'@option{foldlevel}' はグローバル値のままです (デフォルトではすべての折り畳みは閉じられます)。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
                                                  *g:rust_bang_comment_leader*
g:rust_bang_comment_leader~
	Set this option to 1 to preserve the leader on multi-line doc comments
	using the /*! syntax: >
	    let g:rust_bang_comment_leader = 1
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:rust_bang_comment_leader}
@vindex g:rust_bang_comment_leader
@item g:rust_bang_comment_leader
/*! シンタックスを使った複数行 doc コメントの先頭を保存するにこのオプションを 1 に設定します:
@example
let g:rust_bang_comment_leader = 1
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
                                                 *g:ftplugin_rust_source_path*
g:ftplugin_rust_source_path~
	Set this option to a path that should be prepended to 'path' for Rust
	source files: >
	    let g:ftplugin_rust_source_path = $HOME.'/dev/rust'
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:ftplugin_rust_source_path}
@vindex g:ftplugin_rust_source_path
@item g:ftplugin_rust_source_path
このオプションを Rust ソースファイルの '@option{path}' に前置されるべきパスに設定します:
@example
let g:ftplugin_rust_source_path = $HOME.'/dev/rust'
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
                                                       *g:rustfmt_command*
g:rustfmt_command~
	Set this option to the name of the 'rustfmt' executable in your $PATH. If
	not specified it defaults to 'rustfmt' : >
	    let g:rustfmt_command = 'rustfmt'
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:rustfmt_command}
@vindex g:rustfmt_command
@item g:rustfmt_command
このオプションを @env{$PATH} の中の '@option{rustfmt}' 実行ファイルの名前に設定します。指定されないなら '@option{rustfmt}' になります:
@example
let g:rustfmt_command = 'rustfmt'
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
                                                       *g:rustfmt_autosave*
g:rustfmt_autosave~
	Set this option to 1 to run |:RustFmt| automatically when saving a
	buffer. If not specified it defaults to 0 : >
	    let g:rustfmt_autosave = 0
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:rustfmt_autosave}
@vindex g:rustfmt_autosave
@item g:rustfmt_autosave
バッファを保存したときに自動的に |@ref{:RustFmt}| を実行するためにこのオプションを 1 に設定します。指定されないなら 0 になります:
@example
let g:rustfmt_autosave = 0
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
                                                       *g:rustfmt_fail_silently*
g:rustfmt_fail_silently~
	Set this option to 1 to prevent 'rustfmt' from populating the
	|location-list| with errors. If not specified it defaults to 0: >
	    let g:rustfmt_fail_silently = 0
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:rustfmt_fail_silently}
@vindex g:rustfmt_fail_silently
@item g:rustfmt_fail_silently
'@option{rustfmt}' がエラーを |@ref{location-list}| に入力するのを妨げるためにこのオプションを 1 に設定します。指定されないなら 0 になります:
@example
let g:rustfmt_fail_silently = 0
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
                                                       *g:rustfmt_options*
g:rustfmt_options~
	Set this option to a string of options to pass to 'rustfmt'. The
	write-mode is already set to 'overwrite'. If not specified it
	defaults to '' : >
	    let g:rustfmt_options = ''
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:rustfmt_options}
@vindex g:rustfmt_options
@item g:rustfmt_options
このオプションを '@option{rustfmt}' に渡すためのオプションの文字列に設定します。write-mode はすでに '@option{overwrite}' に設定されています。指定されないなら '' になります:
@example
let g:rustfmt_options = ''
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
                                                          *g:rust_playpen_url*
g:rust_playpen_url~
	Set this option to override the URL for the playpen to use: >
	    let g:rust_playpen_url = 'https://play.rust-lang.org/'
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:rust_playpen_url}
@vindex g:rust_playpen_url
@item g:rust_playpen_url
使用する playpen の URL を上書きするためにこのオプションを設定します:
@example
let g:rust_playpen_url = 'https://play.rust-lang.org/'
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
                                                        *g:rust_shortener_url*
g:rust_shortener_url~
	Set this option to override the URL for the URL shortener: >
	    let g:rust_shortener_url = 'https://is.gd/'
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:rust_shortener_url}
@vindex g:rust_shortener_url
@item g:rust_shortener_url
短縮 URL サービスの URL を上書きするためにこのオプションを設定します:
@example
let g:rust_shortener_url = 'https://is.gd/'
@end example
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
==============================================================================
COMMANDS                                                       *rust-commands*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{rust-commands}
@cindex rust-commands
@section コマンド
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
:RustRun  [args]                                                    *:RustRun*
:RustRun! [rustc-args] [--] [args]
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@anchor{:RustRun}
@pindex :RustRun
@item :RustRun [args]
@itemx :RustRun! [rustc-args] [--] [args]
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Compiles and runs the current file. If it has unsaved changes,
		it will be saved first using |:update|. If the current file is
		an unnamed buffer, it will be written to a temporary file
		first. The compiled binary is always placed in a temporary
		directory, but is run from the current directory.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
カレントファイルをコンパイルして実行します。カレントファイルの変更が保存されていないなら、|@ref{:update}| を使って最初に保存されるでしょう。カレントファイルが無名バッファなら、最初に一時ファイルに書き込まれるでしょう。コンパイルされたバイナリはいつも一時ディレクトリに置かれますが、カレントディレクトリから実行されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		The arguments given to |:RustRun| will be passed to the
		compiled binary.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{:RustRun}| に与えられた引数はコンパイルされたバイナリに渡されるでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		If ! is specified, the arguments are passed to rustc instead.
		A "--" argument will separate the rustc arguments from the
		arguments passed to the binary.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
! が指定されるなら、代わりに引数は rustc に渡されます。"@samp{--}" 引数はバイナリに渡される引数から rustc の引数を分けるでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		If |g:rustc_path| is defined, it is used as the path to rustc.
		Otherwise it is assumed rustc can be found in $PATH.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:rustc_path}| が定義されるなら、rustc へのパスのように使われます。それ以外の場合は rustc が @env{$PATH} の中で見つけられうると見なされます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
:RustExpand  [args]                                              *:RustExpand*
:RustExpand! [TYPE] [args]
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{:RustExpand}
@pindex :RustExpand
@item :RustExpand [args]
@itemx :RustExpand! [TYPE] [args]
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Expands the current file using --pretty and displays the
		results in a new split. If the current file has unsaved
		changes, it will be saved first using |:update|. If the
		current file is an unnamed buffer, it will be written to a
		temporary file first.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@samp{--pretty} を使ってカレントファイルを展開して新しいウィンドウにその結果を表示します。カレントファイルの変更が保存されていないなら、|@ref{:update}| を使って最初に保存されるでしょう。カレントファイルが無名バッファなら、最初に一時ファイルに書き込まれるでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		The arguments given to |:RustExpand| will be passed to rustc.
		This is largely intended for specifying various --cfg
		configurations.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{:RustExpand}| に与えられた引数は rustc に渡されるでしょう。これは様々な @samp{--cfg} 設定を指定するのに大いに向いています。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		If ! is specified, the first argument is the expansion type to
		pass to rustc --pretty. Otherwise it will default to
		"expanded".
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
! が指定されるなら、最初の引数は rustc @samp{--pretty} に渡すための展開種類です。それ以外の場合は "expanded" になるでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		If |g:rustc_path| is defined, it is used as the path to rustc.
		Otherwise it is assumed rustc can be found in $PATH.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:rustc_path}| が定義されるなら、rustc へのパスのように使われます。それ以外の場合は rustrc が @env{$PATH} の中で見つけられうると見なされます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
:RustEmitIr [args]                                               *:RustEmitIr*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{:RustEmitIr}
@pindex :RustEmitIr
@item :RustEmitIr [args]
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Compiles the current file to LLVM IR and displays the results
		in a new split. If the current file has unsaved changes, it
		will be saved first using |:update|. If the current file is an
		unnamed buffer, it will be written to a temporary file first.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
カレントファイルを LLVM IR にコンパイルして新しいウィンドウにその結果を表示します。カレントファイルの変更が保存されていないなら、|@ref{:update}| を使って最初に保存されるでしょう。カレントファイルが無名バッファなら、最初に一時ファイルに書き込まれるでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		The arguments given to |:RustEmitIr| will be passed to rustc.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{:RustEmitIr}| に与えられた引数は rustc に渡されるでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		If |g:rustc_path| is defined, it is used as the path to rustc.
		Otherwise it is assumed rustc can be found in $PATH.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:rustc_path}| が定義されるなら、rustc へのパスのように使われます。それ以外の場合は rustrc が @env{$PATH} の中で見つけられうると見なされます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
:RustEmitAsm [args]                                             *:RustEmitAsm*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{:RustEmitAsm}
@pindex :RustEmitAsm
@item :RustEmitAsm [args]
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Compiles the current file to assembly and displays the results
		in a new split. If the current file has unsaved changes, it
		will be saved first using |:update|. If the current file is an
		unnamed buffer, it will be written to a temporary file first.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
カレントファイルをアセンブリにコンパイルして新しいウィンドウにその結果を表示します。カレントファイルの変更が保存されていないなら、|@ref{:update}| を使って最初に保存されるでしょう。カレントファイルが無名バッファなら、最初に一時ファイルに書き込まれるでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		The arguments given to |:RustEmitAsm| will be passed to rustc.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{:RustEmitAsm}| に与えられた引数は rustc に渡されるでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		If |g:rustc_path| is defined, it is used as the path to rustc.
		Otherwise it is assumed rustc can be found in $PATH.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:rustc_path}| が定義されるなら、rustc へのパスのように使われます。それ以外の場合は rustrc が @env{$PATH} の中で見つけられうると見なされます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
:RustPlay                                                          *:RustPlay*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{:RustPlay}
@pindex :RustPlay
@item :RustPlay
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		This command will only work if you have web-api.vim installed
		(available at https://github.com/mattn/webapi-vim).  It sends the
		current selection, or if nothing is selected, the entirety of the
		current buffer to the Rust playpen, and emits a message with the
		shortened URL to the playpen.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
このコマンドは web-api.vim (@url{https://github.com/mattn/webapi-vim} で得ることができます) をインストールしている場合にだけ機能するでしょう。範囲範囲、または何も選択されていないなら、カレントバッファの全体を Rust playpen に送信して、playpen への短縮 URL とメッセージを出します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		|g:rust_playpen_url| is the base URL to the playpen, by default
		"https://play.rust-lang.org/".
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:rust_playpen_url}| は playpen へのベース URL で、デフォルトでは "https://play.rust-lang.org/" です。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		|g:rust_shortener_url| is the base URL for the shortener, by
		default "https://is.gd/"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:rust_shortener_url}| は短縮サービスのベース URL で、デフォルトでは "https://is.gd/" です。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
:RustFmt                                                       *:RustFmt*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{:RustFmt}
@pindex :RustFmt
@item :RustFmt
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Runs |g:rustfmt_command| on the current buffer. If
		|g:rustfmt_options| is set then those will be passed to the
		executable.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
カレントバッファ上で |@ref{g:rustfmt_command}| を実行します。|@ref{g:rustfmt_options}| が設定されているなら、それらは実行可能ファイルに渡されるでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		If |g:rustfmt_fail_silently| is 0 (the default) then it
		will populate the |location-list| with the errors from
		|g:rustfmt_command|. If |g:rustfmt_fail_silently| is set to 1
		then it will not populate the |location-list|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:rustfmt_fail_silently}| が 0 (デフォルト) なら |@ref{g:rustfmt_command}| で得たエラーを |@ref{location-list}| に入力するでしょう。|@ref{location-list}| が 1 に設定されるなら |@ref{location-list}| に入力しないでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
:RustFmtRange                                                  *:RustFmtRange*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{:RustFmtRange}
@pindex :RustFmtRange
@item :RustFmtRange
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Runs |g:rustfmt_command| with selected range. See
		|:RustFmt| for any other information.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
選択された範囲で |@ref{g:rustfmt_command}| を実行します。その他の情報は |@ref{:RustFmt}| を参照してください。
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
MAPPINGS                                                       *rust-mappings*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{rust-mappings}
@cindex rust-mappings
@section マッピング
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
This plugin defines mappings for |[[| and |]]| to support hanging indents.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
このプラグインはぶら下りインデントを支援するような |@ref{[[}| と |@ref{]]}| のマッピングを定義します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
It also has a few other mappings:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
少数の他のマッピングも持ちます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
							*rust_<D-r>*
<D-r>			Executes |:RustRun| with no arguments.
			Note: This binding is only available in MacVim.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@anchor{rust_<D-r>}
@kindex rust_<D-r>
@item <D-r>
引数をなしで |@ref{:RustRun}| を実行します。
@quotation
@strong{Note:} @*
このバインディングは MacVim でのみ利用可能です。
@end quotation
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
							*rust_<D-R>*
<D-R>			Populates the command line with |:RustRun|! using the
			arguments given to the last invocation, but does not
			execute it.
			Note: This binding is only available in MacVim.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{rust_<D-R>}
@kindex rust_<D-R>
@item <D-R>
前回の呼び出しに与えられた引数を使った |@ref{:RustRun}|! をコマンドラインに入力しますが、実行しません。
@quotation
@strong{Note:} @*
このバインディングは MacVim でのみ利用可能です。
@end quotation
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
 vim:tw=78:sw=4:noet:ts=8:ft=help:norl:
@end ifset
