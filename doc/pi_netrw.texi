@ifset JA  @c ----------- v -----------  JA  -*- tab-width: 8 -*-
@node pi_netrw.txt, , , 目次
@unnumbered ネットワークファイルの読み書き
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
*pi_netrw.txt*  For Vim version 8.1.  Last change: 2017 Nov 03

	    ------------------------------------------------
	    NETRW REFERENCE MANUAL    by Charles E. Campbell
	    ------------------------------------------------
Author:  Charles E. Campbell  <NdrOchip@ScampbellPfamily.AbizM>
	  (remove NOSPAM from Campbell's email first)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
*pi_netrw.txt*  For Vim バージョン 8.1.  Last change: 2017 Nov 03

            ------------------------------------------------
            NETRW REFERENCE MANUAL    by Charles E. Campbell
            ------------------------------------------------
Author:  Charles E. Campbell  <NdrOchip@ScampbellPfamily.AbizM>
          (まずメールアドレスから NOSPAM を削除してください)
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Copyright: Copyright (C) 2017 Charles E Campbell    *netrw-copyright*
	The VIM LICENSE applies to the files in this package, including
	netrw.vim, pi_netrw.txt, netrwFileHandlers.vim, netrwSettings.vim, and
	syntax/netrw.vim.  Like anything else that's free, netrw.vim and its
	associated files are provided *as is* and comes with no warranty of
	any kind, either expressed or implied.  No guarantees of
	merchantability.  No guarantees of suitability for any purpose.  By
	using this plugin, you agree that in no event will the copyright
	holder be liable for any damages resulting from the use of this
	software. Use at your own risk!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-copyright}
@cindex netrw-copyright
@verbatim
Copyright: Copyright (C) 2017 Charles E Campbell
        The VIM LICENSE applies to the files in this package, including
        netrw.vim, pi_netrw.txt, netrwFileHandlers.vim, netrwSettings.vim, and
        syntax/netrw.vim.  Like anything else that's free, netrw.vim and its
        associated files are provided *as is* and comes with no warranty of
        any kind, either expressed or implied.  No guarantees of
        merchantability.  No guarantees of suitability for any purpose.  By
        using this plugin, you agree that in no event will the copyright
        holder be liable for any damages resulting from the use of this
        software. Use at your own risk!
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		*netrw*
		*dav*    *ftp*    *netrw-file*  *rcp*    *scp*
		*davs*   *http*   *netrw.vim*   *rsync*  *sftp*
		*fetch*  *network*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw}
@anchor{dav}
@anchor{ftp}
@anchor{netrw-file}
@anchor{rcp}
@anchor{scp}
@anchor{davs}
@anchor{http}
@anchor{netrw.vim}
@anchor{rsync}
@anchor{sftp}
@anchor{fetch}
@anchor{network}
@cindex netrw
@cindex dav
@cindex ftp
@cindex netrw-file
@cindex rcp
@cindex scp
@cindex davs
@cindex http
@cindex netrw.vim
@cindex rsync
@cindex sftp
@cindex fetch
@cindex network
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
1. Contents						*netrw-contents* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-contents}
@cindex netrw-contents
@section 1. 目次
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
1.  Contents..............................................|netrw-contents|
2.  Starting With Netrw...................................|netrw-start|
3.  Netrw Reference.......................................|netrw-ref|
      EXTERNAL APPLICATIONS AND PROTOCOLS.................|netrw-externapp|
      READING.............................................|netrw-read|
      WRITING.............................................|netrw-write|
      SOURCING............................................|netrw-source|
      DIRECTORY LISTING...................................|netrw-dirlist|
      CHANGING THE USERID AND PASSWORD....................|netrw-chgup|
      VARIABLES AND SETTINGS..............................|netrw-variables|
      PATHS...............................................|netrw-path|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .6 .4
@item 1. 目次 @tab |@ref{netrw-contents}|
@item 2. Netrw の準備 @tab |@ref{netrw-start}|
@item 3. Netrw リファレンス @tab |@ref{netrw-ref}|
@item @ @ @ @ 外部プログラムとプロトコル @tab |@ref{netrw-externapp}|
@item @ @ @ @ 読み込み @tab |@ref{netrw-read}|
@item @ @ @ @ 書き込み @tab |@ref{netrw-write}|
@item @ @ @ @ スクリプト実行 @tab |@ref{netrw-source}|
@item @ @ @ @ ディレクトリのファイル一覧表示 @tab |@ref{netrw-dirlist}|
@item @ @ @ @ USERID と PASSWORD を変更 @tab |@ref{netrw-chgup}|
@item @ @ @ @ NETRW の変数と設定 @tab |@ref{netrw-variables}|
@item @ @ @ @ パス @tab |@ref{netrw-path}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
4.  Network-Oriented File Transfer........................|netrw-xfer|
      NETRC...............................................|netrw-netrc|
      PASSWORD............................................|netrw-passwd|
5.  Activation............................................|netrw-activate|
6.  Transparent Remote File Editing.......................|netrw-transparent|
7.  Ex Commands...........................................|netrw-ex|
8.  Variables and Options.................................|netrw-variables|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 4. ネットワークファイル転送 @tab |@ref{netrw-xfer}|
@item @ @ @ @ NETRC @tab |@ref{netrw-netrc}|
@item @ @ @ @ パスワード @tab |@ref{netrw-passwd}|
@item 5. netrw の有効化 @tab |@ref{netrw-activate}|
@item 6. 透過的なリモートファイル編集 @tab |@ref{netrw-transparent}|
@item 7. Ex コマンド @tab |@ref{netrw-ex}|
@item 8. 変数とオプション @tab |@ref{netrw-settings}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
9.  Browsing..............................................|netrw-browse|
      Introduction To Browsing............................|netrw-intro-browse|
      Quick Reference: Maps...............................|netrw-browse-maps|
      Quick Reference: Commands...........................|netrw-browse-cmds|
      Banner Display......................................|netrw-I|
      Bookmarking A Directory.............................|netrw-mb|
      Browsing............................................|netrw-cr|
      Squeezing the Current Tree-Listing Directory........|netrw-s-cr|
      Browsing With A Horizontally Split Window...........|netrw-o|
      Browsing With A New Tab.............................|netrw-t|
      Browsing With A Vertically Split Window.............|netrw-v|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 9. ブラウジング @tab |@ref{netrw-browse}|
@item @ @ @ @ ブラウジングの紹介 @tab |@ref{netrw-intro-browse}|
@item @ @ @ @ クイックリファレンス: マップ @tab |@ref{netrw-browse-maps}|
@item @ @ @ @ クイックリファレンス: コマンド @tab |@ref{netrw-browse-cmds}|
@item @ @ @ @ バナーの表示を切り替える @tab |@ref{netrw-I}|
@item @ @ @ @ ディレクトリをブックマークする @tab |@ref{netrw-mb}|
@item @ @ @ @ ブラウジング @tab |@ref{netrw-cr}|
@item @ @ @ @ 現在のツリー表示ディレクトリを閉じる @tab |@ref{netrw-s-cr}|
@item @ @ @ @ 水平分割ウィンドウを使ったブラウジング @tab |@ref{netrw-o}|
@item @ @ @ @ タブを使ったブラウジング @tab |@ref{netrw-t}|
@item @ @ @ @ 垂直分割ウィンドウを使ったブラウジング @tab |@ref{netrw-v}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
      Change Listing Style.(thin wide long tree)..........|netrw-i|
      Changing To A Bookmarked Directory..................|netrw-gb|
      Changing To A Predecessor Directory.................|netrw-u|
      Changing To A Successor Directory...................|netrw-U|
      Customizing Browsing With A Special Handler.........|netrw-x|
      Deleting Bookmarks..................................|netrw-mB|
      Deleting Files Or Directories.......................|netrw-D|
      Directory Exploring Commands........................|netrw-explore|
      Exploring With Stars and Patterns...................|netrw-star|
      Displaying Information About File...................|netrw-qf|
      Edit File Or Directory Hiding List..................|netrw-ctrl-h|
      Editing The Sorting Sequence........................|netrw-S|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item @ @ @ @ 一覧表示スタイル変更 (thin wide long tree) @tab |@ref{netrw-i}|
@item @ @ @ @ ブックマークしたディレクトリに移動 @tab |@ref{netrw-gb}|
@item @ @ @ @ 前方のディレクトリに移動 @tab |@ref{netrw-u}|
@item @ @ @ @ 後方のディレクトリに移動 @tab |@ref{netrw-U}|
@item @ @ @ @ 特殊ハンドラでブラウジングをカスタマイズ @tab |@ref{netrw-x}|
@item @ @ @ @ ブックマークの削除 @tab |@ref{netrw-mB}|
@item @ @ @ @ ファイル/ディレクトリの削除 @tab |@ref{netrw-D}|
@item @ @ @ @ ディレクトリ探査コマンド @tab |@ref{netrw-explore}|
@item @ @ @ @ スターとパターンを使った探索 @tab |@ref{netrw-star}|
@item @ @ @ @ ファイルの情報を表示する @tab |@ref{netrw-qf}|
@item @ @ @ @ 隠しリストを編集する @tab |@ref{netrw-ctrl-h}|
@item @ @ @ @ ソートシーケンスを編集する @tab |@ref{netrw-S}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
      Forcing treatment as a file or directory............|netrw-gd| |netrw-gf|
      Going Up............................................|netrw--|
      Hiding Files Or Directories.........................|netrw-a|
      Improving Browsing..................................|netrw-ssh-hack|
      Listing Bookmarks And History.......................|netrw-qb|
      Making A New Directory..............................|netrw-d|
      Making The Browsing Directory The Current Directory.|netrw-cd|
      Marking Files.......................................|netrw-mf|
      Unmarking Files.....................................|netrw-mF|
      Marking Files By Location List......................|netrw-qL|
      Marking Files By QuickFix List......................|netrw-qF|
      Marking Files By Regular Expression.................|netrw-mr|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item @ @ @ @ 取扱いをファイルまたはディレクトリに強制する @tab |@ref{netrw-gd}| |@ref{netrw-gf}|
@item @ @ @ @ 親ディレクトリに移動する @tab |@ref{netrw--, , netrw@minus{}@minus{}}|
@item @ @ @ @ ファイル/ディレクトリを隠す @tab |@ref{netrw-a}|
@item @ @ @ @ ブラウジングを改善する @tab |@ref{netrw-ssh-hack}|
@item @ @ @ @ ブックマークと履歴を一覧表示する @tab |@ref{netrw-qb}|
@item @ @ @ @ 新しいディレクトリを作成する @tab |@ref{netrw-d}|
@item @ @ @ @ ブラウジングディレクトリをカレントディレクトリにする @tab |@ref{netrw-c}|
@item @ @ @ @ ファイルをマークする @tab |@ref{netrw-mf}|
@item @ @ @ @ ファイルのマークを外す @tab |@ref{netrw-mF}|
@item @ @ @ @ ロケーションリストを使ってファイルをマークする @tab |@ref{netrw-qL}|
@item @ @ @ @ QuickFix リストを使ってファイルをマークする @tab |@ref{netrw-qF}|
@item @ @ @ @ 正規表現を使ってファイルをマークする @tab |@ref{netrw-mr}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
      Marked Files: Arbitrary Shell Command...............|netrw-mx|
      Marked Files: Arbitrary Shell Command, En Bloc......|netrw-mX|
      Marked Files: Arbitrary Vim Command.................|netrw-mv|
      Marked Files: Argument List.........................|netrw-ma| |netrw-mA|
      Marked Files: Buffer List...........................|netrw-cb| |netrw-cB|
      Marked Files: Compression And Decompression.........|netrw-mz|
      Marked Files: Copying...............................|netrw-mc|
      Marked Files: Diff..................................|netrw-md|
      Marked Files: Editing...............................|netrw-me|
      Marked Files: Grep..................................|netrw-mg|
      Marked Files: Hiding and Unhiding by Suffix.........|netrw-mh|
      Marked Files: Moving................................|netrw-mm|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item @ @ @ @ マークファイル: シェルコマンド @tab |@ref{netrw-mx}|
@item @ @ @ @ マークファイル: 一括シェルコマンド @tab |@ref{netrw-mX}|
@item @ @ @ @ マークファイル: Vimコマンド @tab |@ref{netrw-mv}|
@item @ @ @ @ マークファイル: 引数リスト @tab |@ref{netrw-ma}| |@ref{netrw-mA}|
@item @ @ @ @ マークファイル: バッファリスト @tab |@ref{netrw-cb}| |@ref{netrw-cB}|
@item @ @ @ @ マークファイル: 圧縮と伸長 @tab |@ref{netrw-mz}|
@item @ @ @ @ マークファイル: コピー @tab |@ref{netrw-mc}|
@item @ @ @ @ マークファイル: Diff @tab |@ref{netrw-md}|
@item @ @ @ @ マークファイル: 編集 @tab |@ref{netrw-me}|
@item @ @ @ @ マークファイル: Grep @tab |@ref{netrw-mg}|
@item @ @ @ @ マークファイル: 拡張子による表示/非表示 @tab |@ref{netrw-mh}|
@item @ @ @ @ マークファイル: 移動 @tab |@ref{netrw-mm}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
      Marked Files: Printing..............................|netrw-mp|
      Marked Files: Sourcing..............................|netrw-ms|
      Marked Files: Setting the Target Directory..........|netrw-mt|
      Marked Files: Tagging...............................|netrw-mT|
      Marked Files: Target Directory Using Bookmarks......|netrw-Tb|
      Marked Files: Target Directory Using History........|netrw-Th|
      Marked Files: Unmarking.............................|netrw-mu|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item @ @ @ @ マークファイル: 印刷 @tab |@ref{netrw-mp}|
@item @ @ @ @ マークファイル: スクリプト実行 @tab |@ref{netrw-ms}|
@item @ @ @ @ マークファイル: ターゲットディレクトリを設定する @tab |@ref{netrw-mt}|
@item @ @ @ @ マークファイル: タグ生成 @tab |@ref{netrw-mT}|
@item @ @ @ @ マークファイル: ブックマークを使ったターゲットディレクトリ @tab |@ref{netrw-Tb}|
@item @ @ @ @ マークファイル: 履歴を使ったターゲットディレクトリ @tab |@ref{netrw-Th}|
@item @ @ @ @ マークファイル: マーク解除 @tab |@ref{netrw-mu}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
      Netrw Browser Variables.............................|netrw-browser-var|
      Netrw Browsing And Option Incompatibilities.........|netrw-incompatible|
      Netrw Settings Window...............................|netrw-settings-window|
      Obtaining A File....................................|netrw-O|
      Preview Window......................................|netrw-p|
      Previous Window.....................................|netrw-P|
      Refreshing The Listing..............................|netrw-ctrl-l|
      Reversing Sorting Order.............................|netrw-r|
      Renaming Files Or Directories.......................|netrw-R|
      Selecting Sorting Style.............................|netrw-s|
      Setting Editing Window..............................|netrw-C|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item @ @ @ @ Netrw ブラウザー変数 @tab |@ref{netrw-browser-var}|
@item @ @ @ @ Netrw ブラウザーとオプション設定の互換性 @tab |@ref{netrw-incompatible}|
@item @ @ @ @ Netrw 設定ウィンドウ @tab |@ref{netrw-settings-window}|
@item @ @ @ @ ファイルを取得する @tab |@ref{netrw-O}|
@item @ @ @ @ プレビューウィンドウ @tab |@ref{netrw-p}|
@item @ @ @ @ 以前のウィンドウ @tab |@ref{netrw-P}|
@item @ @ @ @ 一覧を更新する @tab |@ref{netrw-ctrl-l}|
@item @ @ @ @ ソートの順番を逆にする @tab |@ref{netrw-r}|
@item @ @ @ @ ファイル/ディレクトリの名前を変更する @tab |@ref{netrw-R}|
@item @ @ @ @ ソートの種類を変更する @tab |@ref{netrw-s}|
@item @ @ @ @ ファイルを開くウィンドウを指定する @tab |@ref{netrw-C}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
10. Problems and Fixes....................................|netrw-problems|
11. Debugging Netrw Itself................................|netrw-debug|
12. History...............................................|netrw-history|
13. Todo..................................................|netrw-todo|
14. Credits...............................................|netrw-credits|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 10. 問題と対策 @tab |@ref{netrw-problems}|
@item 11. Netrw をデバッグする @tab |@ref{netrw-debug}|
@item 12. 変更履歴 @tab |@ref{netrw-history}|
@item 13. Todo @tab |@ref{netrw-todo}|
@item 14. クレジット @tab |@ref{netrw-credits}|
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
{Vi does not have any of this}
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@{Vi にはこれらの機能はない@}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
2. Starting With Netrw					*netrw-start* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-start}
@cindex netrw-start
@section 2. Netrw の準備
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Netrw makes reading files, writing files, browsing over a network, and
local browsing easy!  First, make sure that you have plugins enabled, so
you'll need to have at least the following in your <.vimrc>:
(or see |netrw-activate|) >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw を使うとファイルの読み込み、書き込み、ネットワークを通したブラウジング、ローカルファイルのブラウジングが簡単になります。最初に、プラグインが有効になっているかどうかを確認してください。最低限、次のような設定が <.vimrc> に必要です: (なっていない場合は |@ref{netrw-activate}| を参照してください)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	set nocp                    " 'compatible' is not set
	filetype plugin on          " plugins are enabled
<
(see |'cp'| and |:filetype-plugin-on|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
set nocp                    " 'compatible' をオフにする
filetype plugin on          " プラグインを有効にする
@end example
(|@ref{'cp'}| と |@ref{:filetype-plugin-on}| も参照してください)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Netrw supports "transparent" editing of files on other machines using urls
(see |netrw-transparent|). As an example of this, let's assume you have an
account on some other machine; if you can use scp, try: >

	vim scp://hostname/path/to/file
<
Want to make ssh/scp easier to use? Check out |netrw-ssh-hack|!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw は url を使うことで他のマシンのファイルを透過的に扱うことができます (|@ref{netrw-transparent}| 参照)。例えば、別のマシンにアカウントを持っていて、scp が使えるなら、次のようにしてアクセスできます:
@verbatim
vim scp://hostname/path/to/file
@end verbatim
ssh/scp による接続を簡単にしたい場合は |@ref{netrw-ssh-hack}| を確認してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
So, what if you have ftp, not ssh/scp?  That's easy, too; try >

	vim ftp://hostname/path/to/file
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ssh/scp ではなく ftp の場合はどうでしょうか？ もちろん簡単にできます:
@verbatim
vim ftp://hostname/path/to/file
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Want to make ftp simpler to use?  See if your ftp supports a file called
<.netrc> -- typically it goes in your home directory, has read/write
permissions for only the user to read (ie. not group, world, other, etc),
and has lines resembling >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ftp によるアクセスを簡単にしたい場合は <.netrc> ファイルを使ってください (あなたの ftp がそれをサポートしているなら)。通常、それはユーザーのホームディレクトリにあって、ユーザーだけが読み書きできるようなパーミッションになっています。中身は次のようなテキストです:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	machine HOSTNAME login USERID password "PASSWORD"
	machine HOSTNAME login USERID password "PASSWORD"
	...
	default          login USERID password "PASSWORD"
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
machine HOSTNAME login USERID password "PASSWORD"
machine HOSTNAME login USERID password "PASSWORD"
...
default          login USERID password "PASSWORD"
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Windows' ftp doesn't support .netrc; however, one may have in one's .vimrc:  >

   let g:netrw_ftp_cmd= 'c:\Windows\System32\ftp -s:C:\Users\MyUserName\MACHINE'
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Windows の ftp は .netrc をサポートしていません。しかし、.vimrc に次のように書いておくことができます:
@example
let g:netrw_ftp_cmd= 'c:\Windows\System32\ftp -s:C:\Users\MyUserName\MACHINE'
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Netrw will substitute the host's machine name for "MACHINE" from the URL it is
attempting to open, and so one may specify >
	userid
	password
for each site in a separate file: c:\Users\MyUserName\MachineName.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
netrw は、開こうとしている url からホストのマシン名を取得し、MACHINE に置き換えます。これにより、c:\Users\MyUserName\MachineName にあるそれぞれのサイトごとの個別のファイルで以下の項目を指定できます:
@example
userid
password
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Now about browsing -- when you just want to look around before editing a
file.  For browsing on your current host, just "edit" a directory: >

	vim .
	vim /home/userid/path
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
どのようなファイルがあるかを確認してからファイルを開きたい場合はブラウザーを使います。ローカルホストのファイルを見たい場合は単にディレクトリを開きます:
@verbatim
vim .
vim /home/userid/path
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
For browsing on a remote host, "edit" a directory (but make sure that
the directory name is followed by a "/"): >

	vim scp://hostname/
	vim ftp://hostname/path/to/dir/
<
See |netrw-browse| for more!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
リモートホストのファイルを見たい場合も単にディレクトリを開きます (ただしディレクトリ名の末尾に "/" を付けてください):
@verbatim
vim scp://hostname/
vim ftp://hostname/path/to/dir/
@end verbatim
詳細は |@ref{netrw-browse}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
There are more protocols supported by netrw than just scp and ftp, too: see the
next section, |netrw-externapp|, on how to use these external applications with
netrw and vim.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
scp や ftp 以外のプロトコルもサポートされています。次の項 |@ref{netrw-externapp}| では、それらの外部アプリケーションの使用方法を説明しています。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
PREVENTING LOADING					*netrw-noload*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-noload}
@cindex netrw-noload
@unnumberedsubsec プラグインの無効化
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If you want to use plugins, but for some reason don't wish to use netrw, then
you need to avoid loading both the plugin and the autoload portions of netrw.
You may do so by placing the following two lines in your <.vimrc>: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
プラグインを有効にしているときに netrw だけを無効にしたい場合は、netrw のプラグインファイルと自動ロードファイルの両方が読み込まれないようにする必要があります。<.vimrc> に次の設定を書いてください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	:let g:loaded_netrw       = 1
	:let g:loaded_netrwPlugin = 1
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
:let g:loaded_netrw       = 1
:let g:loaded_netrwPlugin = 1
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
3. Netrw Reference					*netrw-ref* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-ref}
@cindex netrw-ref
@section 3. Netrw リファレンス
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
   Netrw supports several protocols in addition to scp and ftp as mentioned
   in |netrw-start|.  These include dav, fetch, http,... well, just look
   at the list in |netrw-externapp|.  Each protocol is associated with a
   variable which holds the default command supporting that protocol.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw は |@ref{netrw-start}| で説明した scp や ftp 以外のプロトコルもサポートしています。サポートされているのは dav, fetch, http などです。|@ref{netrw-externapp}| の一覧を見てください。各プロトコルには変数が関連付けられていて、変数にはそのプロトコルをサポートしている外部プログラムが設定されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
EXTERNAL APPLICATIONS AND PROTOCOLS			*netrw-externapp* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-externapp}
@cindex netrw-externapp
@unnumberedsubsec 外部プログラムとプロトコル
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Protocol  Variable	       Default Value
	--------  ----------------     -------------
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .15 .3 .2 .35
@headitem プロトコル @tab 変数 @tab 初期設定 @tab
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   dav:   *g:netrw_dav_cmd*      = "cadaver"    if cadaver is executable
	   dav:   g:netrw_dav_cmd      = "curl -o"    elseif curl is available
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_dav_cmd}
@vindex g:netrw_dav_cmd
@item dav: @tab g:netrw_dav_cmd @tab = "cadaver" @tab もしも cadaver があるなら
@item @tab @tab  = "curl -o" @tab または curl があるなら
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	 fetch:   *g:netrw_fetch_cmd*    = "fetch -o"   if fetch is available
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_fetch_cmd}
@vindex g:netrw_fetch_cmd
@item fetch: @tab g:netrw_fetch_cmd @tab = "fetch -o" @tab もしも fetch があるなら
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   ftp:   *g:netrw_ftp_cmd*      = "ftp"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_ftp_cmd}
@vindex g:netrw_ftp_cmd
@item ftp: @tab g:netrw_ftp_cmd @tab = "ftp" @tab
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	  http:   *g:netrw_http_cmd*     = "elinks"     if   elinks  is available
	  http:   g:netrw_http_cmd     = "links"      elseif links is available
	  http:   g:netrw_http_cmd     = "curl"       elseif curl  is available
	  http:   g:netrw_http_cmd     = "wget"       elseif wget  is available
          http:   g:netrw_http_cmd     = "fetch"      elseif fetch is available
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_http_cmd}
@vindex g:netrw_http_cmd
@item http: @tab g:netrw_http_cmd @tab = "elinks" @tab もしも elinks があるなら
@item @tab @tab = "links" @tab もしも links があるなら
@item @tab @tab = "curl" @tab もしも curl があるなら
@item @tab @tab = "wget" @tab もしも wget があるなら
@item @tab @tab = "fetch" @tab もしも fetch があるなら
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	  http:   *g:netrw_http_put_cmd* = "curl -T"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_http_put_cmd}
@vindex g:netrw_http_put_cmd
@item http: @tab g:netrw_http_put_cmd @tab = "curl -T" @tab
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   rcp:   *g:netrw_rcp_cmd*      = "rcp"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_rcp_cmd}
@vindex g:netrw_rcp_cmd
@item rcp: @tab g:netrw_rcp_cmd @tab = "rcp" @tab
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	 rsync:   *g:netrw_rsync_cmd*    = "rsync"     (see |g:netrw_rsync_sep|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_rsync_cmd}
@vindex g:netrw_rsync_cmd
@item rsync: @tab g:netrw_rsync_cmd @tab = "rsync" @tab (|@ref{g:netrw_rsync_sep}| を参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   scp:   *g:netrw_scp_cmd*      = "scp -q"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_scp_cmd}
@vindex g:netrw_scp_cmd
@item scp: @tab g:netrw_scp_cmd @tab = "scp -q" @tab
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	  sftp:   *g:netrw_sftp_cmd*     = "sftp"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_sftp_cmd}
@vindex g:netrw_sftp_cmd
@item sftp: @tab g:netrw_sftp_cmd @tab = "sftp" @tab
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	  file:   *g:netrw_file_cmd*     = "elinks" or "links"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_file_cmd}
@vindex g:netrw_file_cmd
@item file: @tab g:netrw_file_cmd @tab = "elinks" または "links" @tab
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	*g:netrw_http_xcmd* : the option string for http://... protocols are
	specified via this variable and may be independently overridden.  By
	default, the option arguments for the http-handling commands are: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_http_xcmd}
@vindex g:netrw_http_xcmd
g:netrw_http_xcmd : http://... プロトコルで使用するオプションはこの変数で指定できます。コマンドに合わせて設定を変更してください。初期設定は各コマンドに合わせて次のようになります:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		    elinks : "-source >"
		    links  : "-dump >"
		    curl   : "-L -o"
		    wget   : "-q -O"
		    fetch  : "-o"
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
elinks : "-source >"
links  : "-dump >"
curl   : "-L -o"
wget   : "-q -O"
fetch  : "-o"
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	For example, if your system has elinks, and you'd rather see the
	page using an attempt at rendering the text, you may wish to have >
		let g:netrw_http_xcmd= "-dump >"
<	in your .vimrc.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
例えば、あなたのシステムに elinks がインストールされているとき、(html ソースではなく) レンダリングされたテキストを見たい場合は、@file{.vimrc} で次のように設定するといいでしょう
@example
let g:netrw_http_xcmd= "-dump >"
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	g:netrw_http_put_cmd: this option specifies both the executable and
	any needed options.  This command does a PUT operation to the url.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
g:netrw_http_put_cmd: このオプションは実行ファイルとそれに必要なオプションを両方指定します。このコマンドは url に対して PUT 操作を実行します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
READING						*netrw-read* *netrw-nread* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-read}
@anchor{netrw-nread}
@cindex netrw-read
@cindex netrw-nread
@unnumberedsubsec 読み込み
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Generally, one may just use the URL notation with a normal editing
	command, such as >

		:e ftp://[user@]machine/path
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
通常のコマンドで url を使うことができます。例:
@verbatim
:e ftp://[user@]machine/path
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	Netrw also provides the Nread command:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Nread コマンドも用意されています:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	:Nread ?					give help
	:Nread "machine:path"				uses rcp
	:Nread "machine path"				uses ftp w/ <.netrc>
	:Nread "machine id password path"		uses ftp
	:Nread "dav://machine[:port]/path"		uses cadaver
	:Nread "fetch://[user@]machine/path"		uses fetch
	:Nread "ftp://[user@]machine[[:#]port]/path"	uses ftp w/ <.netrc>
	:Nread "http://[user@]machine/path"		uses http  uses wget
	:Nread "rcp://[user@]machine/path"		uses rcp
	:Nread "rsync://[user@]machine[:port]/path"	uses rsync
	:Nread "scp://[user@]machine[[:#]port]/path"	uses scp
	:Nread "sftp://[user@]machine/path"		uses sftp
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .7 .3
@item :Nread ? @tab ヘルプ表示
@item :Nread "machine:path" @tab rcp を使う
@item :Nread "machine path" @tab ftp w/ <.netrc> を使う
@item :Nread "machine id password path" @tab ftp を使う
@item :Nread "dav://machine[:port]/path" @tab cadaver を使う
@item :Nread "fetch://[user@@]machine/path" @tab fetch を使う
@item :Nread "ftp://[user@@]machine[[:#]port]/path" @tab ftp w/ <.netrc> を使う
@item :Nread "http://[user@@]machine/path" @tab http, wget を使う
@item :Nread "rcp://[user@@]machine/path" @tab rcp を使う
@item :Nread "rsync://[user@@]machine[:port]/path" @tab rsync を使う
@item :Nread "scp://[user@@]machine[[:#]port]/path" @tab scp を使う
@item :Nread "sftp://[user@@]machine/path" @tab sftp を使う
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
WRITING					*netrw-write* *netrw-nwrite* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-write}
@anchor{netrw-nwrite}
@cindex netrw-write
@cindex netrw-nwrite
@unnumberedsubsec 書き込み
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	One may just use the URL notation with a normal file writing
	command, such as >

		:w ftp://[user@]machine/path
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ファイルを保存するときにも url を使うことができます。例:
@verbatim
:w ftp://[user@]machine/path
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	Netrw also provides the Nwrite command:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Nwrite コマンドも用意されています:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	:Nwrite ?					give help
	:Nwrite "machine:path"				uses rcp
	:Nwrite "machine path"				uses ftp w/ <.netrc>
	:Nwrite "machine id password path"		uses ftp
	:Nwrite "dav://machine[:port]/path"		uses cadaver
	:Nwrite "ftp://[user@]machine[[:#]port]/path"	uses ftp w/ <.netrc>
	:Nwrite "rcp://[user@]machine/path"		uses rcp
	:Nwrite "rsync://[user@]machine[:port]/path"	uses rsync
	:Nwrite "scp://[user@]machine[[:#]port]/path"	uses scp
	:Nwrite "sftp://[user@]machine/path"		uses sftp
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .7 .3
@item :Nwrite ? @tab ヘルプ表示
@item :Nwrite "machine:path" @tab rcp を使う
@item :Nwrite "machine path" @tab ftp w/ <.netrc> を使う
@item :Nwrite "machine id password path" @tab ftp を使う
@item :Nwrite "dav://machine[:port]/path" @tab cadaver を使う
@item :Nwrite "ftp://[user@@]machine[[:#]port]/path" @tab ftp w/ <.netrc> を使う
@item :Nwrite "rcp://[user@@]machine/path" @tab rcp を使う
@item :Nwrite "rsync://[user@@]machine[:port]/path" @tab rsync を使う
@item :Nwrite "scp://[user@@]machine[[:#]port]/path" @tab scp を使う
@item :Nwrite "sftp://[user@@]machine/path" @tab sftp を使う
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	http: not supported!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
http: はサポートされていません！
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
SOURCING					*netrw-source* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-source}
@cindex netrw-source
@unnumberedsubsec スクリプト実行
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	One may just use the URL notation with the normal file sourcing
	command, such as >

		:so ftp://[user@]machine/path
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
スクリプトを実行するときにも url を使うことができます。例:
@verbatim
:so ftp://[user@]machine/path
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	Netrw also provides the Nsource command:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Nsource コマンドも用意されています:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	:Nsource ?					give help
	:Nsource "dav://machine[:port]/path"		uses cadaver
	:Nsource "fetch://[user@]machine/path"		uses fetch
	:Nsource "ftp://[user@]machine[[:#]port]/path"	uses ftp w/ <.netrc>
	:Nsource "http://[user@]machine/path"		uses http  uses wget
	:Nsource "rcp://[user@]machine/path"		uses rcp
	:Nsource "rsync://[user@]machine[:port]/path"	uses rsync
	:Nsource "scp://[user@]machine[[:#]port]/path"	uses scp
	:Nsource "sftp://[user@]machine/path"		uses sftp
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .7 .3
@item :Nsource ? @tab ヘルプ表示
@item :Nsource "dav://machine[:port]/path" @tab cadaver を使う
@item :Nsource "fetch://[user@@]machine/path" @tab fetch を使う
@item :Nsource "ftp://[user@@]machine[[:#]port]/path" @tab ftp w/ <.netrc> を使う
@item :Nsource "http://[user@@]machine/path" @tab http, wget を使う
@item :Nsource "rcp://[user@@]machine/path" @tab rcp を使う
@item :Nsource "rsync://[user@@]machine[:port]/path" @tab rsync を使う
@item :Nsource "scp://[user@@]machine[[:#]port]/path" @tab scp を使う
@item :Nsource "sftp://[user@@]machine/path" @tab sftp を使う
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
DIRECTORY LISTING		*netrw-trailingslash* *netrw-dirlist* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-trailingslash}
@anchor{netrw-dirlist}
@cindex netrw-trailingslash
@cindex netrw-dirlist
@unnumberedsubsec ディレクトリのファイル一覧表示
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	One may browse a directory to get a listing by simply attempting to
	edit the directory: >

		:e scp://[user]@hostname/path/
		:e ftp://[user]@hostname/path/
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ディレクトリを開くことでファイル一覧をブラウズできます:
@verbatim
:e scp://[user]@hostname/path/
:e ftp://[user]@hostname/path/
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	For remote directory listings (ie. those using scp or ftp), that
	trailing "/" is necessary (the slash tells netrw to treat the argument
	as a directory to browse instead of as a file to download).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
リモートのディレクトリを開くときは末尾の "/" が必ず必要です (netrw は末尾のスラッシュよってファイルのダウンロードかディレクトリのブラウズかを判断します)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	The Nread command may also be used to accomplish this (again, that
	trailing slash is necessary): >

		:Nread [protocol]://[user]@hostname/path/
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Nread コマンドを使うこともできます (繰り替えしますが、末尾にはスラッシュが必要です):
@verbatim
:Nread [protocol]://[user]@hostname/path/
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
					*netrw-login* *netrw-password*
CHANGING USERID AND PASSWORD		*netrw-chgup* *netrw-userpass* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-login}
@anchor{netrw-password}
@anchor{netrw-chgup}
@anchor{netrw-userpass}
@cindex netrw-login
@cindex netrw-password
@cindex netrw-chgup
@cindex netrw-userpass
@unnumberedsubsec USERID と PASSWORD の変更
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Attempts to use ftp will prompt you for a user-id and a password.
	These will be saved in global variables |g:netrw_uid| and
	|s:netrw_passwd|; subsequent use of ftp will re-use those two strings,
	thereby simplifying use of ftp.  However, if you need to use a
	different user id and/or password, you'll want to call |NetUserPass()|
	first.  To work around the need to enter passwords, check if your ftp
	supports a <.netrc> file in your home directory.  Also see
	|netrw-passwd| (and if you're using ssh/scp hoping to figure out how
	to not need to use passwords for scp, look at |netrw-ssh-hack|).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ftp を使うと user-id と password を入力するプロンプトが表示されます。それらはグローバル変数の |@ref{g:netrw_uid}| と |@ref{s:netrw_passwd}| に記録されます。記録された ID とパスワードは次に ftp を使うときに再使用されます。他の id/password を使う必要が出てきた場合は |@ref{NetUserPass()}| 関数を呼び出してください。

パスワードの入力を省略したい場合は ftp が <.netrc>ファイルをサポートしているかどうか確認してください。|@ref{netrw-passwd}| も参照 (ssh/scp でパスワードを省略したい場合は |@ref{netrw-ssh-hack}| を参照)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	:NetUserPass [uid [password]]		-- prompts as needed
	:call NetUserPass()			-- prompts for uid and password
	:call NetUserPass("uid")		-- prompts for password
	:call NetUserPass("uid","password")	-- sets global uid and password
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
:NetUserPass [uid [password]]           -- password 入力 (必要なら uid も)
:call NetUserPass()                     -- uid と password 入力
:call NetUserPass("uid")                -- password 入力
:call NetUserPass("uid","password")     -- uid と password 設定
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
(Related topics: |ftp| |netrw-userpass| |netrw-start|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(関連項目: |@ref{ftp}| |@ref{netrw-userpass}| |@ref{netrw-start}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
NETRW VARIABLES AND SETTINGS				*netrw-variables* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-variables}
@cindex netrw-variables
@unnumberedsubsec NETRW の変数と設定
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
    (Also see:
    |netrw-browser-var|     : netrw browser option variables
    |netrw-protocol|        : file transfer protocol option variables
    |netrw-settings|        : additional file transfer options
    |netrw-browser-options| : these options affect browsing directories
    )
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(以下も参照:
@multitable @columnfractions .4 .6
@item |@ref{netrw-browser-var}| @tab netrw ブラウザーのオプション変数
@item |@ref{netrw-protocol}| @tab ファイル転送プロトコルのオプション変数
@item |@ref{netrw-settings}| @tab 追加のファイル転送オプション
@item |@ref{netrw-browser-options}| @tab  これらのオプションはディレクトリブラウジングに影響する
@end multitable
)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Netrw provides a lot of variables which allow you to customize netrw to your
preferences.  One way to look at them is via the command :NetrwSettings (see
|netrw-settings|) which will display your current netrw settings.  Most such
settings are described below, in |netrw-browser-options|, and in
|netrw-externapp|:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw にはたくさんの変数が用意されていて、好きなようにカスタマイズできます。@command{:NetrwSettings} コマンド (|@ref{netrw-settings}| 参照) を使うと、現在の netrw の設定が表示されます。ほとんどの設定は下記、または |@ref{netrw-browser-options}|、そして |@ref{netrw-externapp}| で説明されています。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *b:netrw_lastfile*	last file Network-read/written retained on a
			per-buffer basis (supports plain :Nw )
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@anchor{b:netrw_lastfile}
@vindex b:netrw_lastfile
@item b:netrw_lastfile
最後に読み書きされたネットワークファイルがバッファごとに記録される。(:Nw で使われる)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_bufsettings*	the settings that netrw buffers have
			(default) noma nomod nonu nowrap ro nobl
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_bufsettings}
@vindex g:netrw_bufsettings
@item g:netrw_bufsettings
netrw バッファのオプション設定 @*
(初期設定) noma nomod nonu nowrap ro nobl
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_chgwin*	specifies a window number where subsequent file edits
			will take place.  (also see |netrw-C|)
			(default) -1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_chgwin}
@vindex g:netrw_chgwin
@item g:netrw_chgwin
ファイルを開くときに使用するウィンドウの番号を指定する。(|@ref{netrw-C}| も参照) @*
(初期設定) -1
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:Netrw_funcref*	specifies a function (or functions) to be called when
			netrw edits a file.  The file is first edited, and
			then the function reference (|Funcref|) is called.
			This variable may also hold a |List| of Funcrefs.
			(default) not defined.  (the capital in g:Netrw...
			is required by its holding a function reference)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:Netrw_funcref}
@vindex g:Netrw_funcref
@item g:Netrw_funcref
ファイルを開くときに呼ばれる関数 (複数可) を指定する。まずファイルが開かれ、それから指定された関数参照 (|@ref{Funcref}|) が呼ばれる。複数指定する場合は関数参照のリスト (|@ref{List}|) を指定する。 @*
(初期設定) 定義なし。 @*
(g:Netrw... で大文字が使われていますが、これは関数参照を保存するために必要です)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
>
			    Example: place in .vimrc; affects all file opening
			    fun! MyFuncRef()
			    endfun
			    let g:Netrw_funcref= function("MyFuncRef")

<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

例: @file{.vimrc} で次のように設定します。すべてのファイルを開く操作に作用します。
@example
fun! MyFuncRef()
endfun
let g:Netrw_funcref= function("MyFuncRef")
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
 *g:Netrw_UserMaps*	specifies a function or |List| of functions which can
			be used to set up user-specified maps and functionality.
			See |netrw-usermaps|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:Netrw_UserMaps}
@vindex g:Netrw_UserMaps
@item g:Netrw_UserMaps
ユーザー定義のマッピングや設定を行う関数か関数のリスト (|@ref{List}|) を指定します。|@ref{netrw-usermaps}| 参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_ftp*		   if it doesn't exist, use default ftp
			=0 use default ftp		       (uid password)
			=1 use alternate ftp method	  (user uid password)
			   If you're having trouble with ftp, try changing the
			   value of this variable to see if the alternate ftp
			   method works for your setup.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_ftp}
@vindex g:netrw_ftp
@item g:netrw_ftp
変数が存在しない場合はデフォルト ftp 使用
@example
=0 デフォルト ftp を使う (uid password)
=1 ftp の別方式を使う (user uid password)
@end example
ftp の使用に問題があるときにこの変数を設定して ftp の別方式を試してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_ftp_options*     Chosen by default, these options are supposed to
			 turn interactive prompting off and to restrain ftp
			 from attempting auto-login upon initial connection.
			 However, it appears that not all ftp implementations
			 support this (ex. ncftp).
		        ="-i -n"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_ftp_options}
@vindex g:netrw_ftp_options
@item g:netrw_ftp_options
初期設定では、対話プロンプトを無効化して、ftp が 初回の接続時に自動的にログインを試みるのを抑制するように設定されている。しかし、すべての ftp の実装がこれをサポートしているわけではない。(例: ncftp)

="-i -n"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_ftpextracmd*	default: doesn't exist
			If this variable exists, then any string it contains
			will be placed into the commands set to your ftp
			client.  As an example:
			   ="passive"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_ftpextracmd}
@vindex g:netrw_ftpextracmd
@item g:netrw_ftpextracmd
初期設定: なし @*
この変数に設定された文字列は ftp コマンドとして送信されます。例:

="passive"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_ftpmode*	="binary"				    (default)
			="ascii"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_ftpmode}
@vindex g:netrw_ftpmode
@item g:netrw_ftpmode
="binary" (初期設定) @*
="ascii"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_ignorenetrc*	=0 (default for linux, cygwin)
			=1 If you have a <.netrc> file but it doesn't work and
			   you want it ignored, then set this variable as
			   shown. (default for Windows + cmd.exe)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_ignorenetrc}
@vindex g:netrw_ignorenetrc
@item g:netrw_ignorenetrc
=0 (linux と cygwin での初期設定) @*
=1 <.netrc> ファイルが機能しないのでそれを無視したい場合にこの値を設定します (Windoes + cmd.exe での初期設定)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_menu*		=0 disable netrw's menu
			=1 (default) netrw's menu enabled
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_menu}
@vindex g:netrw_menu
@item g:netrw_menu
=0 netrw のメニューを使う @*
=1 (初期設定) netrw のメニューを使わない
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_nogx*		if this variable exists, then the "gx" map will not
			be available (see |netrw-gx|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_nogx}
@vindex g:netrw_nogx
@item g:netrw_nogx
この変数が存在する場合、"gx" マップは定義されません。(|@ref{netrw-gx}| 参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_uid*		(ftp) user-id,      retained on a per-vim-session basis
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_uid}
@vindex g:netrw_uid
@item g:netrw_uid
(ftp) user-id  Vim セッションごとに記録される
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
 *s:netrw_passwd*	(ftp) password,     retained on a per-vim-session basis
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{s:netrw_passwd}
@vindex s:netrw_passwd
@item s:netrw_passwd
(ftp) password  Vim セッションごとに記録される
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_preview*	=0 (default) preview window shown in a horizontally
			   split window
			=1 preview window shown in a vertically split window.
			   Also affects the "previous window" (see |netrw-P|)
			   in the same way.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_preview}
@vindex g:netrw_preview
@item g:netrw_preview
=0 (初期設定) プレビューウィンドウを水平分割で表示する @*
=1 プレビューウィンドウを垂直分割で表示する。

"直前のウィンドウ" (|@ref{netrw-P}| 参照) にも作用します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
			The |g:netrw_alto| variable may be used to provide
			additional splitting control:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:netrw_alto}| 変数を使えば、もっと詳細に分割を制御できます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
				g:netrw_preview g:netrw_alto result
				         0             0     |:aboveleft|
				         0             1     |:belowright|
				         1             0     |:topleft|
				         1             1     |:botright|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .3 .3 .3
@headitem g:netrw_preview @tab g:netrw_alto @tab 結果
@item 0 @tab 0 @tab |@ref{:aboveleft}|
@item 0 @tab 1 @tab |@ref{:belowright}|
@item 1 @tab 0 @tab |@ref{:topleft}|
@item 1 @tab 1 @tab |@ref{:botright}|
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
			To control sizing, see |g:netrw_winsize|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
サイズを制御するには |@ref{g:netrw_winsize}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_scpport*	= "-P" : option to use to set port for scp
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_scpport}
@vindex g:netrw_scpport
@item g:netrw_scpport
= "-P" : scp のポート番号を設定するためのオプション
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
 *g:netrw_sshport*	= "-p" : option to use to set port for ssh
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_sshport}
@vindex g:netrw_sshport
@item g:netrw_sshport
= "-p" : ssh のポート番号を設定するためのオプション
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_sepchr*	=\0xff
			=\0x01 for enc == euc-jp (and perhaps it should be for
			   others, too, please let me know)
			   Separates priority codes from filenames internally.
			   See |netrw-p12|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_sepchr}
@vindex g:netrw_sepchr
@item g:netrw_sepchr
=\0xff @*
=\0x01 enc == euc-jp 向け。(この値を使った方がいい文字コードが他にもあるなら、知らせてください)

内部処理で優先番号とファイル名を区切るのに使われる。|@ref{netrw-p12}| 参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_silent*	=0 : transfers done normally
			=1 : transfers done silently
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_silent}
@vindex g:netrw_silent
@item g:netrw_silent
=0 : 普通に転送処理をする @*
=1 : 静か (silent) に転送処理をする
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_use_errorwindow* =1 : messages from netrw will use a separate one
			      line window.  This window provides reliable
			      delivery of messages. (default)
			 =0 : messages from netrw will use echoerr ;
			      messages don't always seem to show up this
			      way, but one doesn't have to quit the window.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_use_errorwindow}
@vindex g:netrw_use_errorwindow
@item g:netrw_use_errorwindow
=1 : netrw のメッセージ表示に別ウィンドウを使う。メッセージが確実に表示されます (初期設定)。

=0 : netrw のメッセージ表示に echoerr を使う。表示されたメッセージを確認できないことがあるかもしれませんが、ウィンドウを閉じる必要がありません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_win95ftp*	=1 if using Win95, will remove four trailing blank
			   lines that o/s's ftp "provides" on transfers
			=0 force normal ftp behavior (no trailing line removal)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_win95ftp}
@vindex g:netrw_win95ftp
@item g:netrw_win95ftp
=1 Win95 で、OS 付属の ftp が出力の末尾に書き出す四行の空行を削除する。 @*
=0 普通に ftp を使用する (末尾の行を削除しない)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_cygwin*	=1 assume scp under windows is from cygwin. Also
			   permits network browsing to use ls with time and
			   size sorting (default if windows)
			=0 assume Windows' scp accepts windows-style paths
			   Network browsing uses dir instead of ls
			   This option is ignored if you're using unix
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_cygwin}
@vindex g:netrw_cygwin
@item g:netrw_cygwin
=1 windows で cygwin 付属の scp を想定する。また、ネットワークブラウジングで ls を使った時間とサイズによるソートを可能にする (windowsでの初期設定)。

=0 Windows の scp が Windows 形式のパスを扱えると想定する。ネットワークブラウジングでは ls ではなく dir を使用する。このオプションは unix では無視されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_use_nt_rcp*	=0 don't use the rcp of WinNT, Win2000 and WinXP
			=1 use WinNT's rcp in binary mode         (default)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_use_nt_rcp}
@vindex g:netrw_use_nt_rcp
@item g:netrw_use_nt_rcp
=0 WinNT、Win2000、WinXP の rcp を使わない @*
=1 WinNT の rcp をバイナリモードで使う (初期設定)
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
PATHS							*netrw-path* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-path}
@cindex netrw-path
@unnumberedsubsec パス
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Paths to files are generally user-directory relative for most protocols.
It is possible that some protocol will make paths relative to some
associated directory, however.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ほとんどのプロトコルではパスはユーザーディレクトリからの相対パスです。(所定のディレクトリからの相対パスとして扱うプロトコルもあります)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
>
	example:  vim scp://user@host/somefile
	example:  vim scp://user@host/subdir1/subdir2/somefile
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
例:  vim scp://user@host/somefile
例:  vim scp://user@host/subdir1/subdir2/somefile
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
where "somefile" is in the "user"'s home directory.  If you wish to get a
file using root-relative paths, use the full path:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"somefile" は "user" のホームディレクトリの中です。ルートからのパスを指定したい場合は絶対パスを指定してください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
>
	example:  vim scp://user@host//somefile
	example:  vim scp://user@host//subdir1/subdir2/somefile
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
例:  vim scp://user@host//somefile
例:  vim scp://user@host//subdir1/subdir2/somefile
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
4. Network-Oriented File Transfer			*netrw-xfer* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-xfer}
@cindex netrw-xfer
@unnumberedsubsec 4. ネットワークファイル転送
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Network-oriented file transfer under Vim is implemented by a vim script
(<netrw.vim>) using plugin techniques.  It currently supports both reading and
writing across networks using rcp, scp, ftp or ftp+<.netrc>, scp, fetch,
dav/cadaver, rsync, or sftp.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Vim におけるネットワークファイルの転送機能は Vim script で実装されたプラグインで提供されています (<netrw.vim>)。これは rcp, ftp or ftp+<.netrc>, scp, fetch, dav/cadaver, rsync, sftp などを使ってネットワークファイルの読み書きを実現しています。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
http is currently supported read-only via use of wget or fetch.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
http については wget or fetch による読み込みだけがサポートされています。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
<netrw.vim> is a standard plugin which acts as glue between Vim and the
various file transfer programs.  It uses autocommand events (BufReadCmd,
FileReadCmd, BufWriteCmd) to intercept reads/writes with url-like filenames. >

	ex. vim ftp://hostname/path/to/file
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
<netrw.vim> は標準プラグインです。Vim と様々なファイル転送プログラムをつなぐ役割をします。オートコマンドイベント (BufReadCmd、FileReadCmd、BufWriteCmd) を使って、url 指定によるファイルの読み書き処理を横取りします。
@verbatim
例: vim ftp://hostname/path/to/file
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
The characters preceding the colon specify the protocol to use; in the
example, it's ftp.  The <netrw.vim> script then formulates a command or a
series of commands (typically ftp) which it issues to an external program
(ftp, scp, etc) which does the actual file transfer/protocol.  Files are read
from/written to a temporary file (under Unix/Linux, /tmp/...) which the
<netrw.vim> script will clean up.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
コロンより前の文字列がプロトコルを示します (この例では ftp)。<netrw.vim> スクリプトは、実際にファイルを転送する外部プログラム (ftp, scp など) のコマンドを作成します。ファイルは一時ファイル (Unix/Linux では /tmp/...) を経由して読み書きされます。一時ファイルは <netrw.vim> によって後始末されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Now, a word about Jan Minář's "FTP User Name and Password Disclosure"; first,
ftp is not a secure protocol.  User names and passwords are transmitted "in
the clear" over the internet; any snooper tool can pick these up; this is not
a netrw thing, this is a ftp thing.  If you're concerned about this, please
try to use scp or sftp instead.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"FTP User Name and Password Disclosure" における Jan Minář 氏の説明によると、ftp はセキュアなプロトコルではなく、ユーザー名とパスワードはインターネットの中を "そのまま" 流れ、そしてそれは盗聴ツールで盗むことが可能である。これは netrw の問題ではなく ftp の問題です。この問題が心配なら ftp ではなく scp や sftp を使うようにしてください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Netrw re-uses the user id and password during the same vim session and so long
as the remote hostname remains the same.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw は同じ Vim セッション中で同じホスト名が使われている間はユーザー ID とパスワードを使いまわします。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Jan seems to be a bit confused about how netrw handles ftp; normally multiple
commands are performed in a "ftp session", and he seems to feel that the
uid/password should only be retained over one ftp session.  However, netrw
does every ftp operation in a separate "ftp session"; so remembering the
uid/password for just one "ftp session" would be the same as not remembering
the uid/password at all.  IMHO this would rapidly grow tiresome as one
browsed remote directories, for example.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Jan は netrw における ftp の処理を多少誤解しているようです。通常、1 つの "ftp セッション" では複数のコマンドが実行されます。彼は uid/password は 1 つの ftp セッションの間だけ保持されるべきだと考えているようです。しかし、netrw は ftp 操作をするために複数の "ftp セッション" を使います。そのため、uid/password を 1 つの "ftp セッション" の間だけ保持しておくというのは、uid/password を保持しないのと変わりません。そうなれば、例えばリモートディレクトリをブラウズするような操作はすぐに嫌気が差してしまうでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
On the other hand, thanks go to Jan M. for pointing out the many
vulnerabilities that netrw (and vim itself) had had in handling "crafted"
filenames.  The |shellescape()| and |fnameescape()| functions were written in
response by Bram Moolenaar to handle these sort of problems, and netrw has
been modified to use them.  Still, my advice is, if the "filename" looks like
a vim command that you aren't comfortable with having executed, don't open it.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
他方、Jan M 氏には感謝を捧げたいと思います。"細工された(crafted)" ファイル名の処理における netrw (と vim 自身) の多くの脆弱性を指摘してくれました。その問題に対処するために |@ref{shellescape()}| 関数と |@ref{fnameescape()}| 関数が Bram Moolenaar 氏によって書かれ、netrw をそれらを使うように変更されました。ただ 1 つアドバイスをするとすれば、ファイル名が vim コマンドのように見えて怪しいと感じたら、それを開いてはいけません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
				*netrw-putty* *netrw-pscp* *netrw-psftp*
One may modify any protocol's implementing external application by setting a
variable (ex. scp uses the variable g:netrw_scp_cmd, which is defaulted to
"scp -q").  As an example, consider using PuTTY: >

	let g:netrw_scp_cmd = '"c:\Program Files\PuTTY\pscp.exe" -q -batch'
	let g:netrw_sftp_cmd= '"c:\Program Files\PuTTY\psftp.exe"'
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-putty}
@anchor{netrw-pscp}
@anchor{netrw-psftp}
@cindex netrw-putty
@cindex netrw-pscp
@cindex netrw-psftp
プロトコルを扱う外部プログラムは変数を設定することで変更できます (例えば、scp なら g:netrw_scp_cmd を設定します。初期設定は "scp -q" です)。例えば、PuTTY を使う場合は次のように設定します:
@example
let g:netrw_scp_cmd = '"c:\Program Files\PuTTY\pscp.exe" -q -batch'
let g:netrw_sftp_cmd= '"c:\Program Files\PuTTY\psftp.exe"'
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
(note: it has been reported that windows 7 with putty v0.6's "-batch" option
       doesn't work, so its best to leave it off for that system)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@quotation
@strong{Note:} @*
Windows 7 では putty v0.6 の "-batch" オプションが機能しないという報告があったので、そのようなシステムではオプションを使わないようにするといいでしょう。
@end quotation
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
See |netrw-p8| for more about putty, pscp, psftp, etc.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
putty, pscp, psftp 等に関する説明は |@ref{netrw-p8}| 参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Ftp, an old protocol, seems to be blessed by numerous implementations.
Unfortunately, some implementations are noisy (ie., add junk to the end of the
file).  Thus, concerned users may decide to write a NetReadFixup() function
that will clean up after reading with their ftp.  Some Unix systems (ie.,
FreeBSD) provide a utility called "fetch" which uses the ftp protocol but is
not noisy and more convenient, actually, for <netrw.vim> to use.
Consequently, if "fetch" is available (ie. executable), it may be preferable
to use it for ftp://... based transfers.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Ftp (古いプロトコル) は多くの実装に恵まれました。しかし残念ながら、いまいちな実装もあります (例えばファイル末尾にノイズが付くなど)。そのような実装を使う場合は NetReadFixup() 関数を定義することで、ftp 読み込み後にノイズを除去することができます。いくつかの Unix システム (FreeBSD など) では "fetch" というユーティリティが提供されていて、それはノイズがないので <netrw.vim> で使うには適しています。したがって、もし "fetch" が利用可能 (つまり実行可能) なら、ftp://... の転送には "fetch" を使うのが望ましいでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
For rcp, scp, sftp, and http, one may use network-oriented file transfers
transparently; ie.
>
	vim rcp://[user@]machine/path
	vim scp://[user@]machine/path
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
rcp, scp, sftp, http ではネットワークファイルを透過的に扱えます。例:
@verbatim
vim rcp://[user@]machine/path
vim scp://[user@]machine/path
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
If your ftp supports <.netrc>, then it too can be transparently used
if the needed triad of machine name, user id, and password are present in
that file.  Your ftp must be able to use the <.netrc> file on its own, however.
>
	vim ftp://[user@]machine[[:#]portnumber]/path
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ftp が <.netrc> をサポートしていて、マシン名、ユーザー名、パスワードが設定されているなら、ftp でも透過的にファイルを扱えます。ただし、ftpが自動的に <.netrc> ファイルを使うようになっている必要があります。
@verbatim
vim ftp://[user@]machine[[:#]portnumber]/path
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Windows provides an ftp (typically c:\Windows\System32\ftp.exe) which uses
an option, -s:filename (filename can and probably should be a full path)
which contains ftp commands which will be automatically run whenever ftp
starts.  You may use this feature to enter a user and password for one site: >
	userid
	password
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Windows には ftp (通常は c:\Windows\System32\ftp.exe) を用意されています。Windows の ftp には -s:filename オプションがあって (filename はフルパス指定)、そのファイルに書かれたコマンドを ftp 開始時に実行することができます。この機能を使って 1 つのサイトに対してユーザー名とパスワードを指定することができます:
@example
userid
password
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
<				*netrw-windows-netrc*  *netrw-windows-s*
If |g:netrw_ftp_cmd| contains -s:[path/]MACHINE, then (on Windows machines
only) netrw will substitute the current machine name requested for ftp
connections for MACHINE.  Hence one can have multiple machine.ftp files
containing login and password for ftp.  Example: >

    let g:netrw_ftp_cmd= 'c:\Windows\System32\ftp -s:C:\Users\Myself\MACHINE'
    vim ftp://myhost.somewhere.net/
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-windows-netrc}
@anchor{netrw-windows-s}
@cindex netrw-windows-netrc
@cindex netrw-windows-s
もしも、|@ref{g:netrw_ftp_cmd}| が -s:[path/]MACHINE を含んでいたら、netrw は MACHINE を ftp 接続がリクエストされたカレントマシン名に置き換えます。そのため、マシンごとに ftp 用のユーザー名とパスワードを分けることができます。例:
@example
let g:netrw_ftp_cmd= 'c:\Windows\System32\ftp -s:C:\Users\Myself\MACHINE'
@end example
@verbatim
vim ftp://myhost.somewhere.net/
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
will use a file >

	C:\Users\Myself\myhost.ftp
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
これは次のファイルが使われます
@example
C:\Users\Myself\myhost.ftp
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Often, ftp will need to query the user for the userid and password.
The latter will be done "silently"; ie. asterisks will show up instead of
the actually-typed-in password.  Netrw will retain the userid and password
for subsequent read/writes from the most recent transfer so subsequent
transfers (read/write) to or from that machine will take place without
additional prompting.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ftp を使うときは userid と password を聞かれることがあります。パスワードの入力は無表示で行われます (画面には入力した文字の代わりにアスタリスクが表示される)。userid と password は記録され、次に同じマシンにアクセスするときにはプロンプトは表示されません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-urls*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-urls}
@cindex netrw-urls
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
  +=================================+============================+============+
  |  Reading                        | Writing                    |  Uses      |
  +=================================+============================+============+
  | DAV:                            |                            |            |
  |  dav://host/path                |                            | cadaver    |
  |  :Nread dav://host/path         | :Nwrite dav://host/path    | cadaver    |
  +---------------------------------+----------------------------+------------+
  | DAV + SSL:                      |                            |            |
  |  davs://host/path               |                            | cadaver    |
  |  :Nread davs://host/path        | :Nwrite davs://host/path   | cadaver    |
  +---------------------------------+----------------------------+------------+
  | FETCH:                          |                            |            |
  |  fetch://[user@]host/path       |                            |            |
  |  fetch://[user@]host:http/path  |  Not Available             | fetch      |
  |  :Nread fetch://[user@]host/path|                            |            |
  +---------------------------------+----------------------------+------------+
  | FILE:                           |                            |            |
  |  file:///*                      | file:///*                  |            |
  |  file://localhost/*             | file://localhost/*         |            |
  +---------------------------------+----------------------------+------------+
  | FTP:          (*3)              |              (*3)          |            |
  |  ftp://[user@]host/path         | ftp://[user@]host/path     | ftp  (*2)  |
  |  :Nread ftp://host/path         | :Nwrite ftp://host/path    | ftp+.netrc |
  |  :Nread host path               | :Nwrite host path          | ftp+.netrc |
  |  :Nread host uid pass path      | :Nwrite host uid pass path | ftp        |
  +---------------------------------+----------------------------+------------+
  | HTTP: wget is executable: (*4)  |                            |            |
  |  http://[user@]host/path        |        Not Available       | wget       |
  +---------------------------------+----------------------------+------------+
  | HTTP: fetch is executable (*4)  |                            |            |
  |  http://[user@]host/path        |        Not Available       | fetch      |
  +---------------------------------+----------------------------+------------+
  | RCP:                            |                            |            |
  |  rcp://[user@]host/path         | rcp://[user@]host/path     | rcp        |
  +---------------------------------+----------------------------+------------+
  | RSYNC:                          |                            |            |
  |  rsync://[user@]host/path       | rsync://[user@]host/path   | rsync      |
  |  :Nread rsync://host/path       | :Nwrite rsync://host/path  | rsync      |
  |  :Nread rcp://host/path         | :Nwrite rcp://host/path    | rcp        |
  +---------------------------------+----------------------------+------------+
  | SCP:                            |                            |            |
  |  scp://[user@]host/path         | scp://[user@]host/path     | scp        |
  |  :Nread scp://host/path         | :Nwrite scp://host/path    | scp  (*1)  |
  +---------------------------------+----------------------------+------------+
  | SFTP:                           |                            |            |
  |  sftp://[user@]host/path        | sftp://[user@]host/path    | sftp       |
  |  :Nread sftp://host/path        | :Nwrite sftp://host/path   | sftp  (*1) |
  +=================================+============================+============+
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
+=================================+============================+============+
|  Reading                        | Writing                    |  Uses      |
+=================================+============================+============+
| DAV:                            |                            |            |
|  dav://host/path                |                            | cadaver    |
|  :Nread dav://host/path         | :Nwrite dav://host/path    | cadaver    |
+---------------------------------+----------------------------+------------+
| DAV + SSL:                      |                            |            |
|  davs://host/path               |                            | cadaver    |
|  :Nread davs://host/path        | :Nwrite davs://host/path   | cadaver    |
+---------------------------------+----------------------------+------------+
| FETCH:                          |                            |            |
|  fetch://[user@]host/path       |                            |            |
|  fetch://[user@]host:http/path  |  Not Available             | fetch      |
|  :Nread fetch://[user@]host/path|                            |            |
+---------------------------------+----------------------------+------------+
| FILE:                           |                            |            |
|  file:///*                      | file:///*                  |            |
|  file://localhost/*             | file://localhost/*         |            |
+---------------------------------+----------------------------+------------+
| FTP:          (*3)              |              (*3)          |            |
|  ftp://[user@]host/path         | ftp://[user@]host/path     | ftp  (*2)  |
|  :Nread ftp://host/path         | :Nwrite ftp://host/path    | ftp+.netrc |
|  :Nread host path               | :Nwrite host path          | ftp+.netrc |
|  :Nread host uid pass path      | :Nwrite host uid pass path | ftp        |
+---------------------------------+----------------------------+------------+
| HTTP: wget is executable: (*4)  |                            |            |
|  http://[user@]host/path        |        Not Available       | wget       |
+---------------------------------+----------------------------+------------+
| HTTP: fetch is executable (*4)  |                            |            |
|  http://[user@]host/path        |        Not Available       | fetch      |
+---------------------------------+----------------------------+------------+
| RCP:                            |                            |            |
|  rcp://[user@]host/path         | rcp://[user@]host/path     | rcp        |
+---------------------------------+----------------------------+------------+
| RSYNC:                          |                            |            |
|  rsync://[user@]host/path       | rsync://[user@]host/path   | rsync      |
|  :Nread rsync://host/path       | :Nwrite rsync://host/path  | rsync      |
|  :Nread rcp://host/path         | :Nwrite rcp://host/path    | rcp        |
+---------------------------------+----------------------------+------------+
| SCP:                            |                            |            |
|  scp://[user@]host/path         | scp://[user@]host/path     | scp        |
|  :Nread scp://host/path         | :Nwrite scp://host/path    | scp  (*1)  |
+---------------------------------+----------------------------+------------+
| SFTP:                           |                            |            |
|  sftp://[user@]host/path        | sftp://[user@]host/path    | sftp       |
|  :Nread sftp://host/path        | :Nwrite sftp://host/path   | sftp  (*1) |
+=================================+============================+============+
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	(*1) For an absolute path use scp://machine//path.

	(*2) if <.netrc> is present, it is assumed that it will
	work with your ftp client.  Otherwise the script will
	prompt for user-id and password.

        (*3) for ftp, "machine" may be machine#port or machine:port
	if a different port is needed than the standard ftp port

	(*4) for http:..., if wget is available it will be used.  Otherwise,
	if fetch is available it will be used.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item (*1) 絶対パスの指定には scp://machine//path を使う。
@item (*2) <.netrc> がある場合は、使用する ftp クライアントがそれをサポートしていると判断される。ない場合は user-id と password が聞かれる。
@item (*3) ftp では、"machine" は machine#port や machine:port でも可。標準外のポート番号が必要な場合に使う。
@item (*4) http では、wget が利用可能ならそれが使われる。あるいは fetch が利用可能ならそれが使われる。
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Both the :Nread and the :Nwrite ex-commands can accept multiple filenames.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@command{:Nread} コマンドと @command{:Nwrite} コマンドには複数のファイル名を指定できます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
NETRC							*netrw-netrc*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-netrc}
@cindex netrw-netrc
@unnumberedsubsec NETRC
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The <.netrc> file, typically located in your home directory, contains lines
therein which map a hostname (machine name) to the user id and password you
prefer to use with it.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
<.netrc> ファイル (普通はホームディレクトリある) には、ホスト (マシン) と userid/password を関連付ける設定を書くことができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The typical syntax for lines in a <.netrc> file is given as shown below.
Ftp under Unix usually supports <.netrc>; ftp under Windows usually doesn't.
>
	machine {full machine name} login {user-id} password "{password}"
	default login {user-id} password "{password}"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
<.netrc> ファイルの一般的な書式は次のとおりです。Unix の ftp は通常は <.netrc> をサポートしています。Windows の ftp は通常は <.netrc> をサポートしてません。
@example
machine @{full machine name@} login @{user-id@} password "@{password@}"
default login @{user-id@} password "@{password@}"
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Your ftp client must handle the use of <.netrc> on its own, but if the
<.netrc> file exists, an ftp transfer will not ask for the user-id or
password.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ftp が自動的に <.netrc> ファイルを使うようになっている必要があります。<.netrc> ファイルが存在する場合は、ftp 転送において user-id と password は聞かれません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Note:
	Since this file contains passwords, make very sure nobody else can
	read this file!  Most programs will refuse to use a .netrc that is
	readable for others.  Don't forget that the system administrator can
	still read the file!  Ie. for Linux/Unix: chmod 600 .netrc
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@quotation
@strong{Note:} @*
このファイルにはパスワードが含まれているので、他の誰もファイルを読めないようにしてください。ほとんどのプログラムは他人が読むことができる @file{.netrc} ファイルの使用を拒否します。システム管理者は常にそのファイルを読めるということを忘れずに。例えば、Linux/Unix では次のように設定します:
@verbatim
chmod 600 .netrc
@end verbatim
@end quotation
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Even though Windows' ftp clients typically do not support .netrc, netrw has
a work-around: see |netrw-windows-s|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Windows の ftp クライアントは .netrc をサポートしていませんが、netrw には回避策があります。|@ref{netrw-windows-s}| を参照してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
PASSWORD						*netrw-passwd*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-passwd}
@cindex netrw-passwd
@unnumberedsubsec パスワード
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The script attempts to get passwords for ftp invisibly using |inputsecret()|,
a built-in Vim function.  See |netrw-userpass| for how to change the password
after one has set it.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ftp でパスワードが必要なときは Vim の組み込み関数 |@ref{inputsecret()}| による非表示入力が使われます。パスワードを設定した後でそれを変更したい場合は |@ref{netrw-userpass}| を参照してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Unfortunately there doesn't appear to be a way for netrw to feed a password to
scp.  Thus every transfer via scp will require re-entry of the password.
However, |netrw-ssh-hack| can help with this problem.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
残念ながら、scp にパスワードを渡す方法はありません。scp を使うときはファイルの転送の度にパスワードを入力する必要があります。この問題については |@ref{netrw-ssh-hack}| が役に立つかもしれません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
==============================================================================
5. Activation						*netrw-activate* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-activate}
@cindex netrw-activate
@section 5. 5. netrw の有効化
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Network-oriented file transfers are available by default whenever Vim's
|'nocompatible'| mode is enabled.  Netrw's script files reside in your
system's plugin, autoload, and syntax directories; just the
plugin/netrwPlugin.vim script is sourced automatically whenever you bring up
vim.  The main script in autoload/netrw.vim is only loaded when you actually
use netrw.  I suggest that, at a minimum, you have at least the following in
your <.vimrc> customization file: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ネットワークファイル転送は |@ref{'nocompatible'}| が設定されていればデフォルトで利用可能です。netrw のスクリプトファイルはシステムのランタイムディレクトリにあります。Vim の起動時には plugin/netrwPlugin.vim だけが読み込まれます。メインスクリプトの autoload/netrw.vim は、実際に netrw が使用されたときに読み込まれます。次の (最低限の) 設定を <.vimrc> ファイルに書いておくことをお勧めします:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	set nocp
	if version >= 600
	  filetype plugin indent on
	endif
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
set nocp
if version >= 600
  filetype plugin indent on
endif
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
By also including the following lines in your .vimrc, one may have netrw
immediately activate when using [g]vim without any filenames, showing the
current directory: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
さらに次の設定を <.vimrc> ファイルに書くことで、[g]vim をファイル名なしで起動したとき netrw は即座に有効化され、カレントディレクトリを表示します:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	" Augroup VimStartup:
	augroup VimStartup
	  au!
	  au VimEnter * if expand("%") == "" | e . | endif
	augroup END
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
" Augroup VimStartup:
augroup VimStartup
  au!
  au VimEnter * if expand("%") == "" | e . | endif
augroup END
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
6. Transparent Remote File Editing		*netrw-transparent* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-transparent}
@cindex netrw-transparent
@section 6. 透過的なリモートファイル編集
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Transparent file transfers occur whenever a regular file read or write
(invoked via an |:autocmd| for |BufReadCmd|, |BufWriteCmd|, or |SourceCmd|
events) is made.  Thus one may read, write, or source  files across networks
just as easily as if they were local files! >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ネットワークファイルの転送は、ファイルを読み書きするときに |@ref{:autocmd}| の |@ref{BufReadCmd}|, |@ref{BufWriteCmd}|, |@ref{SourceCmd}| イベントによって透過的に処理されます。それによって、ローカルファイルと同じくらい簡単にネットワークファイルを読み込み、書き込み、スクリプト実行することができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	vim ftp://[user@]machine/path
	...
	:wq
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
vim ftp://[user@]machine/path
...
:wq
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
See |netrw-activate| for more on how to encourage your vim to use plugins
such as netrw.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
netrw のようなプラグインの使用方法は |@ref{netrw-activate}| を参照してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
==============================================================================
7. Ex Commands						*netrw-ex* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-ex}
@cindex netrw-ex
@section 7. Ex コマンド
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The usual read/write commands are supported.  There are also a few
additional commands available.  Often you won't need to use Nwrite or
Nread as shown in |netrw-transparent| (ie. simply use >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
一般的な読み込み/書き込みコマンドがサポートされています。それ以外のコマンドもいくつかあります。|@ref{netrw-transparent}| で説明したように、通常はこれらのコマンドを使う必要はありません。次のように使ってください (|@ref{netrw-urls}| 参照):
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
  :e URL
  :r URL
  :w URL
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
:e URL
:r URL
:w URL
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
instead, as appropriate) -- see |netrw-urls|.  In the explanations
below, a {netfile} is a URL to a remote file.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
以下の説明では、@{netfile@} はリモートファイルの url を示します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*:Nwrite*  *:Nw*
:[range]Nw[rite]	Write the specified lines to the current
		file as specified in b:netrw_lastfile.
		(related: |netrw-nwrite|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@anchor{:Nwrite}
@anchor{:Nw}
@pindex :Nwrite
@pindex :Nw
@item :[range]Nw[rite]
指定した範囲の行を b:netrw_lastfile が示すファイルに保存する。(関連: |@ref{netrw-nwrite}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
:[range]Nw[rite] {netfile} [{netfile}]...
		Write the specified lines to the {netfile}.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item :[range]Nw[rite] @{netfile@} [@{netfile@}]...
指定した範囲の行を @{netfile@} に保存する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*:Nread*   *:Nr*
:Nr[ead]	Read the lines from the file specified in b:netrw_lastfile
		into the current buffer.  (related: |netrw-nread|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{:Nread}
@anchor{:Nr}
@pindex :Nread
@pindex :Nr
@item :Nr[ead]
b:netrw_lastfile が示すファイルをカレントバッファに読み込む。(関連: |@ref{netrw-nread}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
:Nr[ead] {netfile} {netfile}...
		Read the {netfile} after the current line.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item :Nr[ead] @{netfile@} @{netfile@}...
@{netfile@} を現在行の下に読み込む。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*:Nsource* *:Ns*
:Ns[ource] {netfile}
		Source the {netfile}.
		To start up vim using a remote .vimrc, one may use
		the following (all on one line) (tnx to Antoine Mechelynck) >
		vim -u NORC -N
		 --cmd "runtime plugin/netrwPlugin.vim"
		 --cmd "source scp://HOSTNAME/.vimrc"
<		 (related: |netrw-source|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{:Nsource}
@anchor{:Ns}
@pindex :Nsource
@pindex :Ns
@item :Ns[ource] @{netfile@}
@{netfile@} をスクリプトとして実行する。リモートの .vimrc を使って vim を起動するには、次のようにします (実際にはすべて 1 行です) (Antoine Mechelynck ありがとう)
@example
vim -u NORC -N
--cmd "runtime plugin/netrwPlugin.vim"
--cmd "source scp://HOSTNAME/.vimrc"
@end example
(関連: |@ref{netrw-source}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
:call NetUserPass()				*NetUserPass()*
		If g:netrw_uid and s:netrw_passwd don't exist,
		this function will query the user for them.
		(related: |netrw-userpass|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{NetUserPass()}
@findex NetUserPass()
@item :call NetUserPass()
g:netrw_uid と s:netrw_passwd が存在しない場合は、入力プロンプトが表示されます。(関連: |@ref{netrw-userpass}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
:call NetUserPass("userid")
		This call will set the g:netrw_uid and, if
		the password doesn't exist, will query the user for it.
		(related: |netrw-userpass|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item :call NetUserPass("userid")
g:netrw_uid を設定します。password がない場合は、入力プロンプトが表示されます。(関連: |@ref{netrw-userpass}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
:call NetUserPass("userid","passwd")
		This call will set both the g:netrw_uid and s:netrw_passwd.
		The user-id and password are used by ftp transfers.  One may
		effectively remove the user-id and password by using empty
		strings (ie. "").
		(related: |netrw-userpass|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item :call NetUserPass("userid","passwd")
g:netrw_uid と s:netrw_passwd を設定します。user-idとpassword は ftp 転送で使われます。user-id と password に空文字列 ("") を指定すると、値を削除できます。(関連: |@ref{netrw-userpass}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
:NetrwSettings  This command is described in |netrw-settings| -- used to
                display netrw settings and change netrw behavior.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item :NetrwSettings
このコマンドは |@ref{netrw-settings}| で説明します。netrw の設定を表示し、netrw の動作を変更するために使用されます。
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
==============================================================================
8. Variables and Options		*netrw-var* *netrw-settings* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-var}
@anchor{netrw-settings}
@cindex netrw-var
@cindex netrw-settings
@section 8. 変数とオプション
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
(also see: |netrw-options| |netrw-variables| |netrw-protocol|
           |netrw-browser-settings| |netrw-browser-options| )
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(参照: |@ref{netrw-options}| |@ref{netrw-variables}| |@ref{netrw-protocol}| |@ref{netrw-browser-settings}| |@ref{netrw-browser-options}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The <netrw.vim> script provides several variables which act as options to
affect <netrw.vim>'s file transfer behavior.  These variables typically may be
set in the user's <.vimrc> file: (see also |netrw-settings| |netrw-protocol|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
<netrw.vim> スクリプトでは、ファイル転送の動作を変更するためのオプションとして、いくつかの変数が定義されています。通常、それらの変数を <.vimrc> ファイルの中で設定して使います。(|@ref{netrw-settings}| |@ref{netrw-protocol}| も参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
						*netrw-options*
>
                        -------------
                        Netrw Options
                        -------------
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-options}
@cindex netrw-options
@unnumberedsubsec Netrw オプション
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	Option			Meaning
	--------------		-----------------------------------------------
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .4 .6
@headitem オプション @tab 説明
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
        b:netrw_col             Holds current cursor position (during NetWrite)
        g:netrw_cygwin          =1 assume scp under windows is from cygwin
                                                              (default/windows)
                                =0 assume scp under windows accepts windows
                                   style paths                (default/else)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item b:netrw_col @tab カーソル位置を保持する (NetWrite 使用時)
@item g:netrw_cygwin @tab =1 windows の scp が cygwin のものと想定する (windows の初期設定) @*
=0 windows の scp が windows スタイルのパスを扱えると想定する (その他の初期設定)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
        g:netrw_ftp             =0 use default ftp            (uid password)
        g:netrw_ftpmode         ="binary"                     (default)
                                ="ascii"                      (your choice)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item g:netrw_ftp @tab =0 デフォルト ftp を使う  (uid password)
@item g:netrw_ftpmode @tab ="binary" (初期設定) @*
="ascii"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	g:netrw_ignorenetrc     =1                            (default)
	                           if you have a <.netrc> file but you don't
				   want it used, then set this variable.  Its
				   mere existence is enough to cause <.netrc>
				   to be ignored.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item g:netrw_ignorenetrc @tab =1 (初期設定)

<.netrc> を持っていて、しかしそれを使いたくない場合にこの変数を設定する。この変数は値に関係なく存在するだけで作用する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
        b:netrw_lastfile        Holds latest method/machine/path.
        b:netrw_line            Holds current line number     (during NetWrite)
	g:netrw_silent          =0 transfers done normally
	                        =1 transfers done silently
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item b:netrw_lastfile @tab 最近使用された method/machine/path を保持する
@item b:netrw_line @tab 現在の行番号を保持する (NetWrite 使用時)
@item g:netrw_silent @tab =0 普通にファイル転送する @*
=1 静か (silent) にファイル転送する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
        g:netrw_uid             Holds current user-id for ftp.
        g:netrw_use_nt_rcp      =0 don't use WinNT/2K/XP's rcp (default)
                                =1 use WinNT/2K/XP's rcp, binary mode
        g:netrw_win95ftp        =0 use unix-style ftp even if win95/98/ME/etc
                                =1 use default method to do ftp >
	-----------------------------------------------------------------------
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item g:netrw_uid @tab ftp の現在の user-id を保持する
@item g:netrw_use_nt_rcp @tab =0 WinNT/2K/XP の rcp を使わない (初期設定) @*
=1 WinNT/2K/XP の rcp を binary mode で使う
@item g:netrw_win95ftp @tab =0 win95/98/ME/etc で unix-style ftp を使う @*
=1 標準の ftp を使う
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
						*netrw-internal-variables*
The script will also make use of the following variables internally, albeit
temporarily.
>
			     -------------------
			     Temporary Variables
			     -------------------
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@c Forbidden control sequence found while scanning use of @futurenonspacelet.
@c というエラーになってしまうので、文章を入れ替えてアンカーとセクションを
@c 近づけることで回避した。理由はわからん。
netrw は次の変数を一時的に使用します。
@anchor{netrw-internal-variables}
@cindex netrw-internal-variables
@unnumberedsubsec 一時変数
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	Variable		Meaning
	--------		------------------------------------
<
	b:netrw_method		Index indicating rcp/ftp+.netrc/ftp
	w:netrw_method		(same as b:netrw_method)
	g:netrw_machine		Holds machine name parsed from input
	b:netrw_fname		Holds filename being accessed >
	------------------------------------------------------------
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .4 .6
@headitem 変数 @tab 説明
@item b:netrw_method @tab rcp/ftp+.netrc/ftp を示すインデックス
@item w:netrw_method @tab (b:netrw_method と同じ)
@item g:netrw_machine @tab 入力から得られたマシン名を保持
@item b:netrw_fname @tab アクセスするファイル名を保持
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
							*netrw-protocol*

Netrw supports a number of protocols.  These protocols are invoked using the
variables listed below, and may be modified by the user.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-protocol}
@cindex netrw-protocol
netrw は複数のプロトコルをサポートしています。それぞれのプロトコルは以下の変数を使って呼び出されます。変数はユーザーが変更することができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
>
			   ------------------------
                           Protocol Control Options
			   ------------------------
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec プロトコル制御オプション
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
    Option            Type        Setting         Meaning
    ---------         --------    --------------  ---------------------------
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .3 .15 .25 .3
@headitem オプション @tab タイプ @tab 設定 @tab 説明
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
<    netrw_ftp         variable    =doesn't exist  userid set by "user userid"
                                  =0              userid set by "user userid"
                                  =1              userid set by "userid"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item netrw_ftp @tab 変数 @tab =変数なし @tab userid を "user userid" で設定
@item @tab @tab =0 @tab userid を "user userid" で設定
@item @tab @tab =1 @tab userid を "userid" で設定
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
    NetReadFixup      function    =doesn't exist  no change
                                  =exists         Allows user to have files
                                                  read via ftp automatically
                                                  transformed however they wish
                                                  by NetReadFixup()
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item NetReadFixup @tab 関数 @tab =変数なし @tab 変更しない
@item @tab @tab =変数あり @tab ftp で取得したファイルを NetReadFixup() で自動的にフィルタする。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
    g:netrw_dav_cmd      var   ="cadaver"      if cadaver  is executable
    g:netrw_dav_cmd      var   ="curl -o"      elseif curl is executable
    g:netrw_fetch_cmd    var   ="fetch -o"     if fetch is available
    g:netrw_ftp_cmd      var   ="ftp"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item g:netrw_dav_cmd @tab 変数 @tab ="cadaver" @tab もしも cadaver  があるなら
@item g:netrw_dav_cmd @tab 変数 @tab ="curl -o" @tab もしくは curl があるなら
@item g:netrw_fetch_cmd @tab 変数 @tab ="fetch -o" @tab もしも fetch があるなら
@item g:netrw_ftp_cmd @tab 変数 @tab ="ftp" @tab
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
    g:netrw_http_cmd     var   ="fetch -o"     if      fetch is available
    g:netrw_http_cmd     var   ="wget -O"      else if wget  is available
    g:netrw_http_put_cmd var   ="curl -T"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item g:netrw_http_cmd @tab 変数 @tab ="fetch -o" @tab もしも fetch があるなら
@item g:netrw_http_cmd @tab 変数 @tab ="wget -O" @tab もしくは wget があるなら
@item g:netrw_http_put_cmd @tab 変数 @tab ="curl -T" @tab
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
    |g:netrw_list_cmd|     var   ="ssh USEPORT HOSTNAME ls -Fa"
    g:netrw_rcp_cmd      var   ="rcp"
    g:netrw_rsync_cmd    var   ="rsync"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item |@ref{g:netrw_list_cmd}| @tab 変数 @tab ="ssh USEPORT HOSTNAME ls -Fa" @tab
@item g:netrw_rcp_cmd @tab 変数 @tab ="rcp" @tab
@item g:netrw_rsync_cmd @tab 変数 @tab ="rsync" @tab
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
    *g:netrw_rsync_sep*    var   ="/"            used to separate the hostname
                                               from the file spec
    g:netrw_scp_cmd      var   ="scp -q"
    g:netrw_sftp_cmd     var   ="sftp" >
    -------------------------------------------------------------------------
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_rsync_sep}
@vindex g:netrw_rsync_sep
@item g:netrw_rsync_sep @tab 変数 @tab ="/" @tab spec ファイルからホスト名を分割するのに使う
@item g:netrw_scp_cmd @tab 変数 @tab ="scp -q" @tab
@item g:netrw_sftp_cmd @tab 変数 @tab ="sftp" @tab
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
								*netrw-ftp*

The g:netrw_..._cmd options (|g:netrw_ftp_cmd| and |g:netrw_sftp_cmd|)
specify the external program to use handle the ftp protocol.  They may
include command line options (such as -p for passive mode). Example: >

	let g:netrw_ftp_cmd= "ftp -p"
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-ftp}
@cindex netrw-ftp
|@ref{g:netrw_ftp_cmd}| と |@ref{g:netrw_sftp_cmd}| は ftp プロトコルを処理するための外部プログラムを指定するオプションです。コマンドラインオプションを含めることもできます (passive mode の -p など)。例:
@example
let g:netrw_ftp_cmd= "ftp -p"
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Browsing is supported by using the |g:netrw_list_cmd|; the substring
"HOSTNAME" will be changed via substitution with whatever the current request
is for a hostname.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ブラウジングは |@ref{g:netrw_list_cmd}| を使ってサポートされます。"HOSTNAME" と書かれた部分は実際のホスト名に置換されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Two options (|g:netrw_ftp| and |netrw-fixup|) both help with certain ftp's
that give trouble .  In order to best understand how to use these options if
ftp is giving you troubles, a bit of discussion is provided on how netrw does
ftp reads.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:netrw_ftp}| と |@ref{netrw-fixup}| の 2 つのオプションは、問題のある ftp クライアントを補助します。これらのオプションの使用方法を理解してもらうため、netrw が ftp からファイルを読み込むときの仕組みを少し解説します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
For ftp, netrw typically builds up lines of one of the following formats in a
temporary file:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ftp を使うとき、netrw は次のどちらかのテキストを生成して一時ファイルに書き込みます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
>
  IF g:netrw_ftp !exists or is not 1     IF g:netrw_ftp exists and is 1
  ----------------------------------     ------------------------------
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .5 .5
@headitem g:netrw_ftp が未定義、または 1 以外 @tab g:netrw_ftp に 1 が設定されている
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
       open machine [port]                    open machine [port]
       user userid password                   userid password
       [g:netrw_ftpmode]                      password
       [g:netrw_ftpextracmd]                  [g:netrw_ftpmode]
       get filename tempfile                  [g:netrw_extracmd]
                                              get filename tempfile >
  ---------------------------------------------------------------------
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item open machine [port] @tab open machine [port]
@item user userid password @tab userid password
@item [g:netrw_ftpmode] @tab password
@item [g:netrw_ftpextracmd] @tab [g:netrw_ftpmode]
@item get filename tempfile@tab [g:netrw_extracmd]
@item @tab テンポラリファイルの名前を取得する
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
The |g:netrw_ftpmode| and |g:netrw_ftpextracmd| are optional.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:netrw_ftpmode}| と |@ref{g:netrw_ftpextracmd}| は任意です。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Netrw then executes the lines above by use of a filter:
>
	:%! {g:netrw_ftp_cmd} -i [-n]
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
netrw は生成したテキストを次のようなコマンドでフィルタします:
@verbatim
:%! {g:netrw_ftp_cmd} -i [-n]
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
where
	g:netrw_ftp_cmd is usually "ftp",
	-i tells ftp not to be interactive
	-n means don't use netrc and is used for Method #3 (ftp w/o <.netrc>)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ここでは g:netrw_ftp_cmd は通常は "ftp" です
@multitable @columnfractions .1 .9
@item -i @tab ftp を対話的に使わない
@item -n @tab netrc を使わない。Method #3 を使う (<.netrc> 無しで ftp 使用)
@end multitable
@{訳注: Method #3 は |@ref{netrw-fixup}| の a:method == 3@}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If <.netrc> exists it will be used to avoid having to query the user for
userid and password.  The transferred file is put into a temporary file.
The temporary file is then read into the main editing session window that
requested it and the temporary file deleted.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
<.netrc> が存在するとき、userid と password の入力を省略するためにそれが使われます。転送されたファイルは一時ファイルに保存されます。一時ファイルはメインのウィンドウに読み込まれ、そして削除されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If your ftp doesn't accept the "user" command and immediately just demands a
userid, then try putting "let netrw_ftp=1" in your <.vimrc>.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
使用する ftp が "user" コマンドを受け付けず、直接に userid を入力する必要がある場合は、"let netrw_ftp=1" という設定を <.vimrc> に書いてください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-cadaver*
To handle the SSL certificate dialog for untrusted servers, one may pull
down the certificate and place it into /usr/ssl/cert.pem.  This operation
renders the server treatment as "trusted".
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-cadaver}
@cindex netrw-cadaver
未承認サーバーのための SSL 証明書ダイアログを何とかするには、その証明書を取ってきて /usr/ssl/cert.pem に置いてください。この操作によってサーバーが信用済み扱いになります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*netrw-fixup* *netreadfixup*
If your ftp for whatever reason generates unwanted lines (such as AUTH
messages) you may write a NetReadFixup() function:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-fixup}
@anchor{netreadfixup}
@cindex netrw-fixup
@cindex netreadfixup
使用している ftp が何らかの理由で余計な出力を出す場合 (例えば認証メッセージなど)、NetReadFixup() 関数を書いてください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
>
    function! NetReadFixup(method,line1,line2)
      " a:line1: first new line in current file
      " a:line2: last  new line in current file
      if     a:method == 1 "rcp
      elseif a:method == 2 "ftp + <.netrc>
      elseif a:method == 3 "ftp + machine,uid,password,filename
      elseif a:method == 4 "scp
      elseif a:method == 5 "http/wget
      elseif a:method == 6 "dav/cadaver
      elseif a:method == 7 "rsync
      elseif a:method == 8 "fetch
      elseif a:method == 9 "sftp
      else               " complain
      endif
    endfunction
>
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
function! NetReadFixup(method,line1,line2)
  " a:line1: first new line in current file
  " a:line2: last  new line in current file
  if     a:method == 1 "rcp
  elseif a:method == 2 "ftp + <.netrc>
  elseif a:method == 3 "ftp + machine,uid,password,filename
  elseif a:method == 4 "scp
  elseif a:method == 5 "http/wget
  elseif a:method == 6 "dav/cadaver
  elseif a:method == 7 "rsync
  elseif a:method == 8 "fetch
  elseif a:method == 9 "sftp
  else               " complain
  endif
endfunction
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
The NetReadFixup() function will be called if it exists and thus allows you to
customize your reading process.  As a further example, <netrw.vim> contains
just such a function to handle Windows 95 ftp.  For whatever reason, Windows
95's ftp dumps four blank lines at the end of a transfer, and so it is
desirable to automate their removal.  Here's some code taken from <netrw.vim>
itself:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
NetReadFixup() 関数は定義するだけで呼び出されるようになります。これにより読み込みの処理をカスタマイズできます。例えば、<netrw.vim> の中では Windows 95 ftp の問題を回避するために、この関数が定義されています。なぜか Windows 95 の ftp は転送ファイルの末尾に 4 行の空行を出力するので、それを取り除いています。<netrw.vim> のコードは次のようなものです:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
>
    if has("win95") && g:netrw_win95ftp
     fun! NetReadFixup(method, line1, line2)
       if method == 3   " ftp (no <.netrc>)
        let fourblanklines= line2 - 3
        silent fourblanklines.",".line2."g/^\s*/d"
       endif
     endfunction
    endif
>
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
if has("win95") && g:netrw_win95ftp
 fun! NetReadFixup(method, line1, line2)
   if method == 3   " ftp (no <.netrc>)
    let fourblanklines= line2 - 3
    silent fourblanklines.",".line2."g/^\s*/d"
   endif
 endfunction
endif
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
(Related topics: |ftp| |netrw-userpass| |netrw-start|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(関連項目: |@ref{ftp}| |@ref{netrw-userpass}| |@ref{netrw-start}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
9. Browsing		*netrw-browsing* *netrw-browse* *netrw-help* {{{1
			*netrw-browser*  *netrw-dir*    *netrw-list*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-browsing}
@anchor{netrw-browse}
@anchor{netrw-help}
@anchor{netrw-browser}
@anchor{netrw-dir}
@anchor{netrw-list}
@cindex netrw-browsing
@cindex netrw-browse
@cindex netrw-help
@cindex netrw-browser
@cindex netrw-dir
@cindex netrw-list
@section 9. ブラウジング
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
INTRODUCTION TO BROWSING			*netrw-intro-browse* {{{2
	(Quick References: |netrw-quickmaps| |netrw-quickcoms|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-intro-browse}
@cindex netrw-intro-browse
@unnumberedsubsec ブラウジングの紹介
(クイックリファレンス: |@ref{netrw-quickmaps}| |@ref{netrw-quickcoms}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Netrw supports the browsing of directories on your local system and on remote
hosts; browsing includes listing files and directories, entering directories,
editing files therein, deleting files/directories, making new directories,
moving (renaming) files and directories, copying files and directories, etc.
One may mark files and execute any system command on them!  The Netrw browser
generally implements the previous explorer's maps and commands for remote
directories, although details (such as pertinent global variable names)
necessarily differ.  To browse a directory, simply "edit" it! >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw はローカルシステムとリモートホストのディレクトリのブラウジングをサポートしています。ブラウジングの機能は、ファイルとディレクトリの一覧表示、ディレクトリへの移動、ファイルを開く、ファイルとディレクトリの削除、ディレクトリの作成、ファイルとディレクトリの移動 (名前の変更)、ファイルとディレクトリのコピー、などです。

ファイルを選択し、任意のシステムコマンドを実行できます。

Netrw ブラウザーには以前のエクスプローラープラグインのマップとコマンドが実装されていて、それはリモートディレクトリに対しても実行できます。ただし、細かい違いはあります (グローバル変数の名前など)。ディレクトリをブラウズするには単にそれを開きます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	vim /your/directory/
	vim .
	vim c:\your\directory\
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
vim /your/directory/
vim .
vim c:\your\directory\
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
(Related topics: |netrw-cr|  |netrw-o|  |netrw-p| |netrw-P| |netrw-t|
                 |netrw-mf|  |netrw-mx| |netrw-D| |netrw-R| |netrw-v| )
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(関連情報: |@ref{netrw-cr}| |@ref{netrw-o}| |@ref{netrw-p}| |@ref{netrw-P}| |@ref{netrw-t}| |@ref{netrw-mf}| |@ref{netrw-mx}| |@ref{netrw-D}| |@ref{netrw-R}| |@ref{netrw-v}| )
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The Netrw remote file and directory browser handles two protocols: ssh and
ftp.  The protocol in the url, if it is ftp, will cause netrw also to use ftp
in its remote browsing.  Specifying any other protocol will cause it to be
used for file transfers; but the ssh protocol will be used to do remote
browsing.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw リモートファイル/ディレクトリブラウザーは ssh と ftp の 2 つのプロトコルをサポートしています。例えば url のプロトコルが ftp なら、netrw は ftp を使ってリモートブラウジングを実行します。ftp と ssh 以外のプロトコルを指定した場合は、それはファイル転送になります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To use Netrw's remote directory browser, simply attempt to read a "file" with
a trailing slash and it will be interpreted as a request to list a directory:
>
	vim [protocol]://[user@]hostname/path/
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw リモートディレクトリブラウザーを使うには、ファイルを開くときに名前の末尾にスラッシュを付けます。ディレクトリの表示要求として解釈されます:
@verbatim
vim [protocol]://[user@]hostname/path/
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
where [protocol] is typically scp or ftp.  As an example, try: >

	vim ftp://ftp.home.vim.org/pub/vim/
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
[protocol] は scp か ftp です。例:
@verbatim
vim ftp://ftp.home.vim.org/pub/vim/
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
For local directories, the trailing slash is not required.  Again, because it's
easy to miss: to browse remote directories, the URL must terminate with a
slash!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ローカルディレクトリの場合は末尾のスラッシュは必要ではありません。付け忘れがよくあるのでもう一度言いますが、リモートディレクトリをブラウズするときは url の末尾にスラッシュを付ける必要があります！
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If you'd like to avoid entering the password repeatedly for remote directory
listings with ssh or scp, see |netrw-ssh-hack|.  To avoid password entry with
ftp, see |netrw-netrc| (if your ftp supports it).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ssh か scp でリモートディレクトリを表示するたびにパスワードを入力したくない場合は |@ref{netrw-ssh-hack}| を参照してください。ftp でパスワードの入力を省略したい場合は |@ref{netrw-netrc}| を参照してください (ftp がそれをサポートしているなら)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
There are several things you can do to affect the browser's display of files:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
次の操作でファイル一覧の表示方法を変更できます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* To change the listing style, press the "i" key (|netrw-i|).
	  Currently there are four styles: thin, long, wide, and tree.
	  To make that change "permanent", see |g:netrw_liststyle|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item "i" キーで表示スタイルを変更できます (|@ref{netrw-i}|)。4 つのスタイルがあります: thin, long, wide, tree。この変更を常に設定したい場合は |@ref{g:netrw_liststyle}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* To hide files (don't want to see those xyz~ files anymore?) see
	  |netrw-ctrl-h|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item ファイルを隠す (xyz~ みたいなファイルを表示したくないですよね？) には |@ref{netrw-ctrl-h}| を参照してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* Press s to sort files by name, time, or size.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item s を押すと name, time, size の順で並べ替えできます。
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
See |netrw-browse-cmds| for all the things you can do with netrw!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
netrw で実行できる操作の一覧は |@ref{netrw-browse-cmds}| を参照してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
			*netrw-getftype* *netrw-filigree* *netrw-ftype*
The |getftype()| function is used to append a bit of filigree to indicate
filetype to locally listed files:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-getftype}
@anchor{netrw-filigree}
@anchor{netrw-ftype}
@cindex netrw-getftype
@cindex netrw-filigree
@cindex netrw-ftype
ローカルファイルを一覧表示するときは、|@ref{getftype()}| 関数を使って、ファイルタイプを示す装飾文字が付加されます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	directory  : /
	executable : *
	fifo       : |
	links      : @
	sockets    : =
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .5 .5
@item ディレクトリ @tab /
@item 実行ファイル @tab *
@item fifo @tab |
@item リンク @tab @@
@item ソケット @tab =
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The filigree also affects the |g:netrw_sort_sequence|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
装飾文字は |@ref{g:netrw_sort_sequence}| にも影響します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
QUICK HELP						*netrw-quickhelp* {{{2
                       (Use ctrl-] to select a topic)~
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-quickhelp}
@cindex netrw-quickhelp
@unnumberedsubsec QUICK HELP
(@kbd{ctrl-]} を押すと項目を選択できます)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	Intro to Browsing...............................|netrw-intro-browse|
	  Quick Reference: Maps.........................|netrw-quickmap|
	  Quick Reference: Commands.....................|netrw-browse-cmds|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .5 .5
@item ブラウジングの紹介 @tab |@ref{netrw-intro-browse}|
@item @ @ @ @ クイックリファレンス: マップ @tab |@ref{netrw-quickmap}|
@item @ @ @ @ クイックリファレンス: コマンド @tab |@ref{netrw-browse-cmds}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	Hiding
	  Edit hiding list..............................|netrw-ctrl-h|
	  Hiding Files or Directories...................|netrw-a|
	  Hiding/Unhiding by suffix.....................|netrw-mh|
	  Hiding  dot-files.............................|netrw-gh|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item ファイルを隠す @tab
@item @ @ @ @ 隠すファイルを設定する @tab |@ref{netrw-ctrl-h}|
@item @ @ @ @ ファイル/ディレクトリを隠す @tab |@ref{netrw-a}|
@item @ @ @ @ 拡張子で表示/非表示 @tab |@ref{netrw-mh}|
@item @ @ @ @ ドットファイルを隠す @tab |@ref{netrw-gh}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	Listing Style
	  Select listing style (thin/long/wide/tree)....|netrw-i|
	  Associated setting variable...................|g:netrw_liststyle|
	  Shell command used to perform listing.........|g:netrw_list_cmd|
	  Quick file info...............................|netrw-qf|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 表示スタイル @tab
@item @ @ @ @ 表示スタイルの選択 (thin/long/wide/tree) @tab |@ref{netrw-i}|
@item @ @ @ @ スタイル設定変数 @tab |@ref{g:netrw_liststyle}|
@item @ @ @ @ ファイル一覧取得に使われるシェルコマンド @tab |@ref{g:netrw_list_cmd}|
@item @ @ @ @ ファイル情報表示 @tab |@ref{netrw-qf}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	Sorted by
	  Select sorting style (name/time/size).........|netrw-s|
	  Editing the sorting sequence..................|netrw-S|
	  Sorting options...............................|g:netrw_sort_options|
	  Associated setting variable...................|g:netrw_sort_sequence|
	  Reverse sorting order.........................|netrw-r|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item ソート方法 @tab
@item @ @ @ @ ソートスタイルの選択 (name/time/size) @tab |@ref{netrw-s}|
@item @ @ @ @ ソートの優先順位を設定 @tab |@ref{netrw-S}|
@item @ @ @ @ ソートオプション @tab |@ref{g:netrw_sort_options}|
@item @ @ @ @ ソート優先順位設定変数 @tab |@ref{g:netrw_sort_sequence}|
@item @ @ @ @ 逆順ソート @tab |@ref{netrw-r}|
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
				*netrw-quickmap* *netrw-quickmaps*
QUICK REFERENCE: MAPS				*netrw-browse-maps* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-quickmap}
@anchor{netrw-quickmaps}
@anchor{netrw-browse-maps}
@cindex netrw-quickmap
@cindex netrw-quickmaps
@cindex netrw-browse-maps
@unnumberedsubsec クイックリファレンス: マップ
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
>
	  ---			-----------------			----
	  Map			Quick Explanation			Link
	  ---			-----------------			----
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .15 .6 .25
@headitem マップ @tab 簡単な説明 @tab リンク
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
<	 <F1>	Causes Netrw to issue help
	 <cr>	Netrw will enter the directory or read the file      |netrw-cr|
	 <del>	Netrw will attempt to remove the file/directory      |netrw-del|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item <F1> @tab Netrw のヘルプを開く @tab
@item <cr> @tab ディレクトリに移動、またはファイルを開く @tab |@ref{netrw-cr}|
@item <del> @tab ファイル/ディレクトリを削除する @tab |@ref{netrw-del}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	 <c-h>	Edit file hiding list                                |netrw-ctrl-h|
	 <c-l>	Causes Netrw to refresh the directory listing        |netrw-ctrl-l|
	 <c-r>	Browse using a gvim server                           |netrw-ctrl-r|
	 <c-tab> Shrink/expand a netrw/explore window                |netrw-c-tab|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item <c-h> @tab 隠しファイルのパターンを編集する @tab |@ref{netrw-ctrl-h}|
@item <c-l> @tab 最新の情報に更新する @tab |@ref{netrw-ctrl-l}|
@item <c-r> @tab gvim server を使ってブラウズする @tab |@ref{netrw-ctrl-r}|
@item <c-tab> @tab netrw ウィンドウ/エクスプローラーウィンドウを拡大・縮小する @tab |@ref{netrw-c-tab}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   -	Makes Netrw go up one directory                      |netrw--|
	   a	Cycles between normal display,                       |netrw-a|
	    	hiding (suppress display of files matching g:netrw_list_hide)
	    	and showing (display only files which match g:netrw_list_hide)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item - @tab 1 つ上のディレクトリに移動する @tab |@ref{netrw--, , netrw@minus{}@minus{}}|
@item a @tab 隠しファイルの表示を切り替える @tab |@ref{netrw-a}|
@item @tab 通常表示 @tab
@item @tab 隠す (g:netrw_list_hide にマッチしたファイルを表示しない) @tab
@item @tab 表示する (g:netrw_list_hide にマッチしたファイルのみ表示する) @tab
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   c	Make browsing directory the current directory        |netrw-c|
	   C	Setting the editing window                           |netrw-C|
	   d	Make a directory                                     |netrw-d|
	   D	Attempt to remove the file(s)/directory(ies)         |netrw-D|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item c @tab 表示中のディレクトリをカレントディレクトリにする @tab |@ref{netrw-c}|
@item C @tab ファイルを開くウィンドウを指定する @tab |@ref{netrw-C}|
@item d @tab ディレクトリを作成する @tab |@ref{netrw-d}|
@item D @tab ファイル/ディレクトリ (複数可) を削除する @tab |@ref{netrw-D}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   gb	Go to previous bookmarked directory                  |netrw-gb|
	   gd	Force treatment as directory                         |netrw-gd|
	   gf	Force treatment as file                              |netrw-gf|
	   gh	Quick hide/unhide of dot-files                       |netrw-gh|
	   gn	Make top of tree the directory below the cursor      |netrw-gn|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item gb @tab 前のブックマークされたディレクトリに移動 @tab |@ref{netrw-gb}|
@item gd @tab 取扱いをディレクトリに強制する @tab |@ref{netrw-gd}|
@item gf @tab 取扱いをファイルに強制する @tab |@ref{netrw-gf}|
@item gh @tab ドットファイルの表示/非表示を切り替える @tab |@ref{netrw-gh}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   i	Cycle between thin, long, wide, and tree listings    |netrw-i|
	   I	Toggle the displaying of the banner                  |netrw-I|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item i @tab 表示方法を切り替える (thin, long, wide, tree) @tab |@ref{netrw-i}|
@item I @tab バナー表示をトグルする @tab |@ref{netrw-I}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   mb	Bookmark current directory                           |netrw-mb|
	   mc	Copy marked files to marked-file target directory    |netrw-mc|
	   md	Apply diff to marked files (up to 3)                 |netrw-md|
	   me	Place marked files on arg list and edit them         |netrw-me|
	   mf	Mark a file                                          |netrw-mf|
	   mF	Unmark files                                         |netrw-mF|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item mb @tab カレントディレクトリをブックマークする @tab |@ref{netrw-mb}|
@item mc @tab マークしたファイルをターゲットディレクトリにコピー @tab |@ref{netrw-mc}|
@item md @tab マークしたファイルの差分を表示する (3 ファイルまで) @tab |@ref{netrw-md}|
@item me @tab マークしたファイルを引数リストに入れ編集する @tab |@ref{netrw-me}|
@item mf @tab ファイルをマークする @tab |@ref{netrw-mf}|
@item mF @tab ファイルのマークを外す @tab |@ref{netrw-mF}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   mg	Apply vimgrep to marked files                        |netrw-mg|
	   mh	Toggle marked file suffices' presence on hiding list |netrw-mh|
	   mm	Move marked files to marked-file target directory    |netrw-mm|
	   mp	Print marked files                                   |netrw-mp|
	   mr	Mark files using a shell-style |regexp|                |netrw-mr|
	   mt	Current browsing directory becomes markfile target   |netrw-mt|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item mg @tab マークしたファイルに vimgrep を適用する @tab |@ref{netrw-mg}|
@item mh @tab マークしたファイルの拡張子を隠しリストに登録/解除 @tab |@ref{netrw-mh}|
@item mm @tab マークしたファイルをターゲットディレクトリに移動 @tab |@ref{netrw-mm}|
@item mp @tab マークしたファイルを印刷する @tab |@ref{netrw-mp}|
@item mr @tab シェル形式正規表現 (|@ref{regexp}|) でファイルをマークする @tab |@ref{netrw-mr}|
@item mt @tab 表示中のディレクトリをターゲットディレクトリにする @tab |@ref{netrw-mt}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   mT	Apply ctags to marked files                          |netrw-mT|
	   mu	Unmark all marked files                              |netrw-mu|
	   mv	Apply arbitrary vim   command to marked files        |netrw-mv|
	   mx	Apply arbitrary shell command to marked files        |netrw-mx|
	   mX	Apply arbitrary shell command to marked files en bloc|netrw-mX|
	   mz	Compress/decompress marked files                     |netrw-mz|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item mT @tab マークしたファイルに対して ctags を実行 @tab |@ref{netrw-mT}|
@item mu @tab すべてのマークを解除する @tab |@ref{netrw-mu}|
@item mv @tab マークしたファイルに対して任意の Vim コマンドを実行 @tab |@ref{netrw-mv}|
@item mx @tab マークしたファイルに対して任意のシェルコマンドを実行 @tab |@ref{netrw-mx}|
@item mX @tab マークしたファイルに対して任意のシェルコマンドを一括実行 @tab |@ref{netrw-mX}|
@item mz @tab マークしたファイルを圧縮/伸長する @tab |@ref{netrw-mz}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   o	Enter the file/directory under the cursor in a new   |netrw-o|
	    	browser window.  A horizontal split is used.
	   O	Obtain a file specified by cursor                    |netrw-O|
	   p	Preview the file                                     |netrw-p|
	   P	Browse in the previously used window                 |netrw-P|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item o @tab カーソル位置のファイル/ディレクトリを新しいウィンドウで開く。水平分割。 @tab |@ref{netrw-o}|
@item O @tab カーソル位置のファイルを取得する @tab |@ref{netrw-O}|
@item p @tab ファイルをプレビューする @tab |@ref{netrw-p}|
@item P @tab 直前に使用していたウィンドウで開く @tab |@ref{netrw-P}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   qb	List bookmarked directories and history              |netrw-qb|
	   qf	Display information on file                          |netrw-qf|
	   qF	Mark files using a quickfix list                     |netrw-qF|
	   qL	Mark files using a |location-list|                     |netrw-qL|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item qb @tab ブックマークと履歴の一覧を表示する @tab |@ref{netrw-qb}|
@item qf @tab ファイル情報を表示する @tab |@ref{netrw-qf}|
@item qF @tab QuickFix リストを使ってファイルをマークする @tab |@ref{netrw-qF}|
@item qL @tab |@ref{location-list}| を使ってファイルをマークする @tab |@ref{netrw-qF}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   r	Reverse sorting order                                |netrw-r|
	   R	Rename the designated file(s)/directory(ies)         |netrw-R|
	   s	Select sorting style: by name, time, or file size    |netrw-s|
	   S	Specify suffix priority for name-sorting             |netrw-S|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item r @tab ソート順を逆にする @tab |@ref{netrw-r}|
@item R @tab ファイル/ディレクトリ(複数可)の名前を変える @tab |@ref{netrw-R}|
@item s @tab ソート方法を変える: name, time, file size @tab |@ref{netrw-s}|
@item S @tab 名前ソート時の拡張子の優先順位を設定する @tab |@ref{netrw-S}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   t	Enter the file/directory under the cursor in a new tab|netrw-t|
	   u	Change to recently-visited directory                 |netrw-u|
	   U	Change to subsequently-visited directory             |netrw-U|
	   v	Enter the file/directory under the cursor in a new   |netrw-v|
	    	browser window.  A vertical split is used.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item t @tab カーソル位置のファイル/ディレクトリを新しいタブで開く @tab |@ref{netrw-t}|
@item u @tab 最近訪れたディレクトリに移動する @tab |@ref{netrw-u}|
@item U @tab 次に訪れたディレクトリに移動する @tab |@ref{netrw-U}|
@item v @tab カーソル位置のファイル/ディレクトリを新しいウィンドウで開く。垂直分割。 @tab |@ref{netrw-v}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   x	View file with an associated program                 |netrw-x|
	   X	Execute filename under cursor via |system()|           |netrw-X|

	   %	Open a new file in netrw's current directory         |netrw-%|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item x @tab 関連付けられたプログラムでファイルを表示する @tab |@ref{netrw-x}|
@item X @tab カーソル位置のファイルを |@ref{system()}| で実行する @tab |@ref{netrw-X}|
@item @* @tab
@item % @tab 表示しているディレクトリで新しいファイルを開く @tab |@ref{netrw-%}|
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	*netrw-mouse* *netrw-leftmouse* *netrw-middlemouse* *netrw-rightmouse*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mouse}
@anchor{netrw-leftmouse}
@anchor{netrw-middlemouse}
@anchor{netrw-rightmouse}
@cindex netrw-mouse
@cindex netrw-leftmouse
@cindex netrw-middlemouse
@cindex netrw-rightmouse
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	<leftmouse>	(gvim only) selects word under mouse as if a <cr>
			had been pressed (ie. edit file, change directory)
	<middlemouse>	(gvim only) same as P selecting word under mouse;
			see |netrw-P|
	<rightmouse>	(gvim only) delete file/directory using word under
			mouse
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .2 .8
@item <leftmouse> @tab (gvim only) ファイルを選択して @key{<CR>} を押したのと同じ。(ファイルを開く、ディレクトリに移動)
@item <middlemouse> @tab (gvim only) ファイルを選択して @key{P} を押したのと同じ。|@ref{netrw-P}| 参照
@item <rightmouse> @tab (gvim only) 選択したファイル/ディレクトリを削除する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	<2-leftmouse>	(gvim only) when:
			 * in a netrw-selected file, AND
			 * |g:netrw_retmap| == 1       AND
			 * the user doesn't already have a <2-leftmouse>
			   mapping defined before netrw is autoloaded,
			then a double clicked leftmouse button will return
			to the netrw browser window.  See |g:netrw_retmap|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item <2-leftmouse> @tab (gvim only) 使用できる条件:
@itemize
@item netrw からファイルを開いたとき (かつ)
@item |@ref{g:netrw_retmap}| == 1 (かつ)
@item netrw がロードされた時点で <2-leftmouse> に対するマップが定義されていない
@end itemize
netrw ブラウザーウィンドウに戻る。|@ref{g:netrw_retmap}| 参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	<s-leftmouse>	(gvim only) like mf, will mark files.  Dragging
			the shifted leftmouse will mark multiple files.
			(see |netrw-mf|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item <s-leftmouse> @tab (gvim only) mf と同じ。ファイルをマークする。@kbd{Shift} を押したままマウスの左ボタンでドラッグすると複数のファイルを選択できる。(|@ref{netrw-mf}| 参照)
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	(to disable mouse buttons while browsing: |g:netrw_mousemaps|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(ブラウジング中にマウスボタンを無効化するには: |@ref{g:netrw_mousemaps}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
				*netrw-quickcom* *netrw-quickcoms*
QUICK REFERENCE: COMMANDS	*netrw-explore-cmds* *netrw-browse-cmds* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-quickcom}
@anchor{netrw-quickcoms}
@anchor{netrw-explore-cmds}
@anchor{netrw-browse-cmds}
@cindex netrw-quickcom
@cindex netrw-quickcoms
@cindex netrw-explore-cmds
@cindex netrw-browse-cmds
@unnumberedsubsec クイックリファレンス: コマンド
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
     :NetrwClean[!]............................................|netrw-clean|
     :NetrwSettings............................................|netrw-settings|
     :Ntree....................................................|netrw-ntree|
     :Explore[!]  [dir] Explore directory of current file......|netrw-explore|
     :Hexplore[!] [dir] Horizontal Split & Explore.............|netrw-explore|
     :Lexplore[!] [dir] Left Explorer Toggle...................|netrw-explore|
     :Nexplore[!] [dir] Vertical Split & Explore...............|netrw-explore|
     :Pexplore[!] [dir] Vertical Split & Explore...............|netrw-explore|
     :Rexplore          Return to Explorer.....................|netrw-explore|
     :Sexplore[!] [dir] Split & Explore directory .............|netrw-explore|
     :Texplore[!] [dir] Tab & Explore..........................|netrw-explore|
     :Vexplore[!] [dir] Vertical Split & Explore...............|netrw-explore|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .5 .5
@item :NetrwClean[!] @tab |@ref{netrw-clean}|
@item :NetrwSettings @tab |@ref{netrw-settings}|
@item :Ntree @tab |@ref{netrw-ntree}|
@item :Explore[!] [dir] カレントファイルのディレクトリを開く @tab |@ref{netrw-explore}|
@item :Hexplore[!] [dir] 水平分割 & Explore @tab |@ref{netrw-explore}|
@item :Lexplore[!] [dir] 左エクスプローラー切り替え @tab |@ref{netrw-explore}|
@item :Nexplore[!] [dir] 垂直分割 & Explore @tab |@ref{netrw-explore}|
@item :Pexplore[!] [dir] 垂直分割 & Explore @tab |@ref{netrw-explore}|
@item :Rexplore          Explorer に戻る @tab |@ref{netrw-explore}|
@item :Sexplore[!] [dir] ウィンドウ分割 & Explore @tab |@ref{netrw-explore}|
@item :Texplore[!] [dir] タブ & Explore @tab |@ref{netrw-explore}|
@item :Vexplore[!] [dir] 垂直分割 & Explore @tab |@ref{netrw-explore}|
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
BANNER DISPLAY						*netrw-I*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-I}
@kindex netrw-I
@unnumberedsubsec バナーの表示を切り替える
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may toggle the displaying of the banner by pressing "I".
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"@key{I}" を押すことによってバナーの表示を切り替えることができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Also See: |g:netrw_banner|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
参照: |@ref{g:netrw_banner}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
BOOKMARKING A DIRECTORY		*netrw-mb* *netrw-bookmark* *netrw-bookmarks* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mb}
@anchor{netrw-bookmark}
@anchor{netrw-bookmarks}
@kindex netrw-mb
@cindex netrw-bookmark
@cindex netrw-bookmarks
@unnumberedsubsec ディレクトリをブックマークする
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may easily "bookmark" the currently browsed directory by using >

	mb
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
次のコマンドで現在見ているディレクトリをブックマークできます
@example
mb
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
								*.netrwbook*
Bookmarks are retained in between sessions of vim in a file called .netrwbook
as a |List|, which is typically stored in the first directory on the user's
'|runtimepath|'; entries are kept in sorted order.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{.netrwbook}
@cindex .netrwbook
ブックマークは Vim のセッション間で、リスト (|@ref{List}|) として @file{.netrwbook} と呼ばれれるファイルに保存されます。これは典型的に、ユーザーの |@ref{'runtimepath'}| 中の最初のディレクトリに保存されています。ブックマークは常にソートされます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If there are marked files and/or directories, mb will add them to the bookmark
list.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
もしマークされたファイル/ディレクトリが存在すれば、mb はそれらをブックマークに追加します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-:NetrwMB*
Addtionally, one may use :NetrwMB to bookmark files or directories. >

	:NetrwMB[!] [files/directories]
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-:NetrwMB}
@pindex netrw-:NetrwMB
また、ファイルかディレクトリをブックマークするのに @command{:NetrwMB} も使用できます。
@example
:NetrwMB[!] [files/directories]
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
< No bang: enters files/directories into Netrw's bookmark system
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@item bang が付かない場合:
ファイル/ディレクトリを Netrw のブックマークシステムに追加します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
   No argument and in netrw buffer:
     if there are marked files        : bookmark marked files
     otherwise                        : bookmark file/directory under cursor
   No argument and not in netrw buffer: bookmarks current open file
   Has arguments                      : |glob()|s each arg and bookmarks them
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@item netrw バッファで引数なし:
@itemize
@item マークされたファイルが存在する: マークされたファイルをブックマークする
@item 存在しない                    : カーソル位置のファイル/ディレクトリをブックマークする
@end itemize
@item netrw バッファの外で引数なし:
現在開いているファイルをブックマークする
@item 引数有り:
それぞれの引数を |@ref{glob()}| し、ブックマークする
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 With bang: deletes files/directories from Netrw's bookmark system
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item bang が付く場合:
ファイル/ディレクトリをブックマークから削除する
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The :NetrwMB command is available outside of netrw buffers (once netrw has been
invoked in the session).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@command{:NetrwMB} コマンドは netrw バッファの外でも使用可能です (一度でも netrw がそのセッション中で起動されていれば)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The file ".netrwbook" holds bookmarks when netrw (and vim) is not active.  By
default, its stored on the first directory on the user's |'runtimepath'|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
".netrwbook" ファイルは netrw (と vim) が起動されていない間ブックマークを保持します。デフォルトでは |@ref{'runtimepath'}| の最初のディレクトリに保存されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related Topics:
	|netrw-gb| how to return (go) to a bookmark
	|netrw-mB| how to delete bookmarks
	|netrw-qb| how to list bookmarks
	|g:netrw_home| controls where .netrwbook is kept
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目:
@itemize
@item |@ref{netrw-gb}| ブックマークに戻る (移動する)
@item |@ref{netrw-mB}| ブックマークを削除する
@item |@ref{netrw-qb}| ブックマークを一覧表示する
@item |@ref{g:netrw_home}| @file{.netrwbook} が保存される場所を制御する
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
BROWSING					*netrw-enter*	*netrw-cr* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-enter}
@anchor{netrw-cr}
@kindex netrw-enter
@kindex netrw-cr
@unnumberedsubsec ブラウジング
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Browsing is simple: move the cursor onto a file or directory of interest.
Hitting the <cr> (the return key) will select the file or directory.
Directories will themselves be listed, and files will be opened using the
protocol given in the original read request.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ブラウジングは簡単です。ファイルまたはディレクトリの上にカーソルを移動して、@key{<CR>} (リターンキー) を押すとファイルが開きます。ディレクトリを開くとそのファイル一覧が表示されます。ファイルを開くときには一覧表示で使われたプロトコルが使用されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  CAVEAT: There are four forms of listing (see |netrw-i|).  Netrw assumes that
  two or more spaces delimit filenames and directory names for the long and
  wide listing formats.  Thus, if your filename or directory name has two or
  more sequential spaces embedded in it, or any trailing spaces, then you'll
  need to use the "thin" format to select it.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@quotation
@strong{警告:} @*
一覧表示には 4 つの方法があります (|@ref{netrw-i}| 参照)。long/wide 表示では 2 つ以上のスペースでファイル名/ディレクトリ名を区切るので、ファイル名に 2 つ以上のスペースが含まれている場合、あるいは名前の末尾にスペースが付いている場合は、表示方法を "thin" にしてからファイルを選択してください。
@end quotation
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The |g:netrw_browse_split| option, which is zero by default, may be used to
cause the opening of files to be done in a new window or tab instead of the
default.  When the option is one or two, the splitting will be taken
horizontally or vertically, respectively.  When the option is set to three, a
<cr> will cause the file to appear in a new tab.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:netrw_browse_split}| オプション (初期設定は0) を設定すると、ファイルを開くときの動作を、新しいウィンドウやタブを開くように変更できます。設定が 1 か 2 なら、ウィンドウはそれぞれ水平分割、垂直分割されます。設定が 3 なら、新しいタブでファイルが開きます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
When using the gui (gvim), one may select a file by pressing the <leftmouse>
button.  In addition, if
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
gui (gvim) では <leftmouse> (左クリック) でファイルを選択できます。また、
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 * |g:netrw_retmap| == 1       AND   (its default value is 0)
 * in a netrw-selected file, AND
 * the user doesn't already have a <2-leftmouse> mapping defined before
   netrw is loaded
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item |@ref{g:netrw_retmap}| == 1 (初期設定は 0)
@item netrw からファイルを開いたとき
@item netrw がロードされた時点で <2-leftmouse> に対するマップが定義されていない
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
then a doubly-clicked leftmouse button will return to the netrw browser
window.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
以上の条件を満たすとき、左ダブルクリックで元の netrw ブラウザーウィンドウに戻ることができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Netrw attempts to speed up browsing, especially for remote browsing where one
may have to enter passwords, by keeping and re-using previously obtained
directory listing buffers.  The |g:netrw_fastbrowse| variable is used to
control this behavior; one may have slow browsing (no buffer re-use), medium
speed browsing (re-use directory buffer listings only for remote directories),
and fast browsing (re-use directory buffer listings as often as possible).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ブラウジング、特にリモートブラウジングを効率よくするため、ディレクトリのファイル一覧バッファは再利用されます。この動作は |@ref{g:netrw_fastbrowse}| 変数で制御できます。低速ブラウジング (バッファ再利用なし)、中速ブラウジング (リモートディレクトリのみバッファ再利用)、高速ブラウジング (可能な限りバッファを再利用)、から選択できます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
The price for such re-use is that when changes are made (such as new files
are introduced into a directory), the listing may become out-of-date.  One may
always refresh directory listing buffers by pressing ctrl-L (see
|netrw-ctrl-l|).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
バッファ再利用の代償として、何か変更があった (例えば新しいファイルが作成された) 場合でも、表示されるファイル一覧は古いままです。最新の情報に更新するには @kbd{Ctrl-L} (|@ref{netrw-ctrl-l}| 参照) を押してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-s-cr*
Squeezing the Current Tree-Listing Directory~
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-s-cr}
@kindex netrw-s-cr
@unnumberedsubsec 現在のツリー表示ディレクトリを閉じる
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
When the tree listing style is enabled (see |netrw-i|) and one is using
gvim, then the <s-cr> mapping may be used to squeeze (close) the
directory currently containing the cursor.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
gvim でツリー表示をしているとき (|@ref{netrw-i}| 参照)、<s-cr> を使うと、カーソルが置かれているディレクトリを閉じることができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Otherwise, one may remap a key combination of one's own choice to get
this effect: >

    nmap <buffer> <silent> <nowait> YOURKEYCOMBO  <Plug>NetrwTreeSqueeze
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
あるいは、この効果をユーザーが選択したキーの組み合わせにリマップすることができます:
@example
nmap <buffer> <silent> <nowait> YOURKEYCOMBO  <Plug>NetrwTreeSqueeze
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Put this line in $HOME/ftplugin/netrw/netrw.vim; it needs to be generated
for netrw buffers only.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
この行を @env{$HOME}/ftplugin/netrw/@file{netrw.vim} に置いてください。netrw バッファのみに生成される必要があります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics:
	|netrw-ctrl-r|	|netrw-o|	|netrw-p|
	|netrw-P|	|netrw-t|	|netrw-v|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連トピック: |@ref{netrw-ctrl-r}| |@ref{netrw-o}| |@ref{netrw-p}| |@ref{netrw-P}| |@ref{netrw-t}| |@ref{netrw-v}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated setting variables:
   |g:netrw_browse_split|	|g:netrw_fastbrowse|
   |g:netrw_ftp_list_cmd|	|g:netrw_ftp_sizelist_cmd|
   |g:netrw_ftp_timelist_cmd|	|g:netrw_ssh_browse_reject|
   |g:netrw_ssh_cmd|		|g:netrw_use_noswf|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

関連設定: |@ref{g:netrw_browse_split}| |@ref{g:netrw_fastbrowse}| |@ref{g:netrw_ftp_list_cmd}| |@ref{g:netrw_ftp_sizelist_cmd}| |@ref{g:netrw_ftp_timelist_cmd}| |@ref{g:netrw_ssh_browse_reject}| |@ref{g:netrw_ssh_cmd}| |@ref{g:netrw_use_noswf}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
BROWSING WITH A HORIZONTALLY SPLIT WINDOW	*netrw-o* *netrw-horiz* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-o}
@anchor{netrw-horiz}
@kindex netrw-o
@cindex netrw-horiz
@unnumberedsubsec 水平分割ウィンドウを使ったブラウジング
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Normally one enters a file or directory using the <cr>.  However, the "o" map
allows one to open a new window to hold the new directory listing or file.  A
horizontal split is used.  (for vertical splitting, see |netrw-v|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
<CR> でファイル/ディレクトリを開くことができますが、代わりに "o" マップを使えばウィンドウを分割して開くことができます。ウィンドウは水平分割されます。(垂直分割は |@ref{netrw-v}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Normally, the o key splits the window horizontally with the new window and
cursor at the top.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
通常、@key{o} キーを押すと新しいウィンドウが上に分割されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Associated setting variables: |g:netrw_alto| |g:netrw_winsize|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連設定: |@ref{g:netrw_alto}| |@ref{g:netrw_winsize}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics:
	|netrw-ctrl-r|	|netrw-o|	|netrw-p|
	|netrw-P|	|netrw-t|	|netrw-v|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連トピック: |@ref{netrw-ctrl-r}| |@ref{netrw-o}| |@ref{netrw-p}| |@ref{netrw-P}| |@ref{netrw-t}| |@ref{netrw-v}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated setting variables:
   |g:netrw_alto|    control above/below splitting
   |g:netrw_winsize| control initial sizing
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

関連設定変数:
@multitable @columnfractions .5 .5
@item |@ref{g:netrw_alto}| @tab 分割の方向 (上/下) を制御
@item |@ref{g:netrw_winsize}| @tab 初期サイズを制御
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
BROWSING WITH A NEW TAB				*netrw-t* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-t}
@kindex netrw-t
@unnumberedsubsec タブを使ったブラウジング
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Normally one enters a file or directory using the <cr>.  The "t" map
allows one to open a new window holding the new directory listing or file in
a new tab.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
<CR> でファイル/ディレクトリを開くことができますが、代わりに "t" マップを使えばそれを新しいタブで開くことができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If you'd like to have the new listing in a background tab, use |gT|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
バックグラウンドタブで新しく開きたい場合は |@ref{gT}| を使います。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics:
	|netrw-ctrl-r|	|netrw-o|	|netrw-p|
	|netrw-P|	|netrw-t|	|netrw-v|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連トピック: |@ref{netrw-ctrl-r}| |@ref{netrw-o}| |@ref{netrw-p}| |@ref{netrw-P}| |@ref{netrw-t}| |@ref{netrw-v}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated setting variables:
   |g:netrw_winsize| control initial sizing
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

関連設定変数:
@multitable @columnfractions .5 .5
@item |@ref{g:netrw_winsize}| @tab 初期サイズを制御
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
BROWSING WITH A VERTICALLY SPLIT WINDOW			*netrw-v* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-v}
@kindex netrw-v
@unnumberedsubsec 垂直分割ウィンドウを使ったブラウジング
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Normally one enters a file or directory using the <cr>.  However, the "v" map
allows one to open a new window to hold the new directory listing or file.  A
vertical split is used.  (for horizontal splitting, see |netrw-o|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
<CR> でファイル/ディレクトリを開くことができますが、代わりに "v" マップを使えばウィンドウを分割して開くことができます。ウィンドウは垂直分割されます。(水平分割は |@ref{netrw-o}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Normally, the v key splits the window vertically with the new window and
cursor at the left.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
通常、@key{v} キーを押すと新しいウィンドウが左に分割されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
There is only one tree listing buffer; using "v" on a displayed subdirectory
will split the screen, but the same buffer will be shown twice.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
1 つのディレクトリには 1 つのバッファが使われます。"v" で表示済みのサブディレクトリを開くとウィンドウは分割されますが、同じバッファが再び表示されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics:
	|netrw-ctrl-r|	|netrw-o|	|netrw-p|
	|netrw-P|	|netrw-t|	|netrw-v|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連トピック: |@ref{netrw-ctrl-r}| |@ref{netrw-o}| |@ref{netrw-p}| |@ref{netrw-P}| |@ref{netrw-t}| |@ref{netrw-v}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated setting variables:
   |g:netrw_altv|    control right/left splitting
   |g:netrw_winsize| control initial sizing
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

関連設定変数:
@multitable @columnfractions .5 .5
@item |@ref{g:netrw_altv}| @tab 分割の方向 (右/左) を制御
@item |@ref{g:netrw_winsize}| @tab 初期サイズを制御
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
BROWSING USING A GVIM SERVER			*netrw-ctrl-r* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-ctrl-r}
@kindex netrw-ctrl-r
@unnumberedsubsec gvim server を使ってブラウズする
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may keep a browsing gvim separate from the gvim being used to edit.
Use the <c-r> map on a file (not a directory) in the netrw browser, and it
will use a gvim server (see |g:netrw_servername|).  Subsequent use of <cr>
(see |netrw-cr|) will re-use that server for editing files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
本機能はファイルを編集する gvim とブラウジングする gvim を分けるものです。netrw ブラウザーの (ディレクトリではなく) ファイルの上で <c-r> マッピングを使用すると gvim server が使われます (|@ref{g:netrw_servername}| 参照)。続けて @key{<CR>} (|@ref{netrw-cr}| 参照) を押すとファイルを編集するのにそのサーバーが再利用されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics:
	|netrw-ctrl-r|	|netrw-o|	|netrw-p|
	|netrw-P|	|netrw-t|	|netrw-v|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目: |@ref{netrw-ctrl-r}| |@ref{netrw-o}| |@ref{netrw-p}| |@ref{netrw-P}| |@ref{netrw-t}| |@ref{netrw-v}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated setting variables:
	|g:netrw_servername|   : sets name of server
	|g:netrw_browse_split| : controls how <cr> will open files
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

関連設定:
@multitable @columnfractions .5 .5
@item |@ref{g:netrw_servername}| @tab サーバー名をセットする
@item |@ref{g:netrw_browse_split}| @tab <CR> がどのようにファイルを開くのか制御する
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
CHANGE LISTING STYLE  (THIN LONG WIDE TREE)			*netrw-i* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-i}
@kindex netrw-i
@unnumberedsubsec 一覧表示スタイル変更 (細   長   広   ツリー)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The "i" map cycles between the thin, long, wide, and tree listing formats.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"i" マップを使うと表示方法が thin, long, wide, tree と順番に切り替わります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The thin listing format gives just the files' and directories' names.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
thin 形式ではファイル/ディレクトリの名前だけが表示されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The long listing is either based on the "ls" command via ssh for remote
directories or displays the filename, file size (in bytes), and the time and
date of last modification for local directories.  With the long listing
format, netrw is not able to recognize filenames which have trailing spaces.
Use the thin listing format for such files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
long 形式は、リモートディレクトリの場合は ssh 経由で "ls" コマンドを実行した結果に基づいて表示され、ローカルディレクトリの場合はファイル名、ファイルサイズ (バイト単位)、最終変更日時が表示されます。long 形式では末尾にスペースが付いたファイル名を扱うことができません。そのようなファイルがあるときは thin 形式を使ってください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The wide listing format uses two or more contiguous spaces to delineate
filenames; when using that format, netrw won't be able to recognize or use
filenames which have two or more contiguous spaces embedded in the name or any
trailing spaces.  The thin listing format will, however, work with such files.
The wide listing format is the most compact.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
wide 形式では 2 つ以上のスペースを使ってファイル名を区切って表示します。この表示形式では、2 つ以上の連続したスペースが含まれているファイル名、または末尾にスペースが付いているファイル名を扱うことができません。そのような場合は thin 形式を使ってください。wide 形式は最もコンパクトな表示形式です。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The tree listing format has a top directory followed by files and directories
preceded by one or more "|"s, which indicate the directory depth.  One may
open and close directories by pressing the <cr> key while atop the directory
name.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
tree 形式ではトップディレクトリに続いてファイル/ディレクトリが、名前の前に 1 つ以上の "|" を付けて表示されます。これはディレクトリの深さを示します。ディレクトリの名前の所で @key{<CR>} キーを押すと、そのディレクトリを開いたり閉じたりできます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may make a preferred listing style your default; see |g:netrw_liststyle|.
As an example, by putting the following line in your .vimrc, >
	let g:netrw_liststyle= 3
the tree style will become your default listing style.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
デフォルトの表示スタイルを変更できます。(|@ref{g:netrw_liststyle}|) 参照。

例えば、次の行を @file{.vimrc} に書くと:
@example
let g:netrw_liststyle= 3
@end example
ツリー形式の表示スタイルがデフォルトで使用されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One typical way to use the netrw tree display is to: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ツリー形式を使う典型的な方法は以下の通りです:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	vim .
	(use i until a tree display shows)
	navigate to a file
	v  (edit as desired in vertically split window)
	ctrl-w h  (to return to the netrw listing)
	P (edit newly selected file in the previous window)
	ctrl-w h  (to return to the netrw listing)
	P (edit newly selected file in the previous window)
	...etc...
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
vim .
(ツリー形式になるまで i を使う)
ファイルへ移動する
v  (垂直分割されたウィンドウで好きなように編集する)
ctrl-w h  (netrw の一覧に戻るため)
P  (新しく選択されたファイルを前のウィンドウで編集する)
ctrl-w h  (netrw の一覧に戻るため)
P  (新しく選択されたファイルを前のウィンドウで編集する)
...etc...
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated setting variables: |g:netrw_liststyle| |g:netrw_maxfilenamelen|
                              |g:netrw_timefmt|   |g:netrw_list_cmd|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連設定: |@ref{g:netrw_liststyle}| |@ref{g:netrw_maxfilenamelen}| |@ref{g:netrw_timefmt}| |@ref{g:netrw_list_cmd}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
CHANGE FILE PERMISSION						*netrw-gp* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-gp}
@kindex netrw-gp
@unnumberedsubsec パーミッションの変更
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
"gp" will ask you for a new permission for the file named under the cursor.
Currently, this only works for local files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"gp" を使うと新しいパーミッションを入力するプロンプトが表示されます。カーソル位置のファイルのパーミッションを変更できます。現在、これはローカルファイルに対してのみ機能します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Associated setting variables: |g:netrw_chgperm|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連設定: |@ref{g:netrw_chgperm}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
CHANGING TO A BOOKMARKED DIRECTORY			*netrw-gb*  {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-gb}
@kindex netrw-gb
@unnumberedsubsec ブックマークしたディレクトリに移動
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To change directory back to a bookmarked directory, use

	{cnt}gb
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ブックマークしたディレクトリに移動するには、次のコマンドを使います。
@example
@{cnt@}gb
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Any count may be used to reference any of the bookmarks.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
カウントを付けてブックマークを指定することができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Note that |netrw-qb| shows both bookmarks and history; to go
to a location stored in the history see |netrw-u| and |netrw-U|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@quotation
@strong{Note:} @*
|@ref{netrw-qb}| はブックマークと履歴を両方表示します。履歴の場所に移動したい場合は |@ref{netrw-u}| と |@ref{netrw-U}| を参照してください。
@end quotation
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related Topics:
	|netrw-mB| how to delete bookmarks
	|netrw-mb| how to make a bookmark
	|netrw-qb| how to list bookmarks
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目:
@multitable @columnfractions .5 .5
@item |@ref{netrw-mB}| @tab ブックマークを削除する
@item |@ref{netrw-mb}| @tab ブックマークを設定する
@item |@ref{netrw-qb}| @tab ブックマークを一覧表示する
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
CHANGING TO A PREDECESSOR DIRECTORY		*netrw-u* *netrw-updir* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-u}
@anchor{netrw-updir}
@kindex netrw-u
@cindex netrw-updir
@unnumberedsubsec 前のディレクトリに戻る
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Every time you change to a new directory (new for the current session), netrw
will save the directory in a recently-visited directory history list (unless
|g:netrw_dirhistmax| is zero; by default, it holds ten entries).  With the "u"
map, one can change to an earlier directory (predecessor).  To do the
opposite, see |netrw-U|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ディレクトリを移動するとき (カレントセッションで新規の場合)、そのディレクトリは、最近表示したディレクトリの履歴リストに保存されます (|@ref{g:netrw_dirhistmax}| が 0 でない場合に限る。初期設定は 10)。"u" マップを使用すると、前のディレクトリに移動できます。反対に移動したい場合は |@ref{netrw-U}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The "u" map also accepts counts to go back in the history several slots.  For
your convenience, qb (see |netrw-qb|) lists the history number which may be
used in that count.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"u" マップはカウントを指定することができ、履歴の特定の位置に戻ることができます。qb (|@ref{netrw-qb}| を参照) の一覧で表示される履歴の番号はこのカウントとして使えます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*.netrwhist*
See |g:netrw_dirhistmax| for how to control the quantity of history stack
slots.  The file ".netrwhist" holds history when netrw (and vim) is not
active.  By default, its stored on the first directory on the user's
|'runtimepath'|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{.netrwhist}
@cindex .netrwhist
履歴の量を制御するには |@ref{g:netrw_dirhistmax}| を参照。"@file{.netrwhist}" ファイルは netrw (と vim) が起動されていない間、履歴を保持します。デフォルトでは |@ref{'runtimepath'}| の最初のディレクトリに保存されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related Topics:
	|netrw-U| changing to a successor directory
	|g:netrw_home| controls where .netrwhist is kept
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目:
@multitable @columnfractions .5 .5
@item |@ref{netrw-U}| @tab 次のディレクトリに進む
@item |@ref{g:netrw_home}| @tab @file{.netrwhist} が保存される場所を制御する
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
CHANGING TO A SUCCESSOR DIRECTORY		*netrw-U* *netrw-downdir* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-U}
@anchor{netrw-downdir}
@kindex netrw-U
@cindex netrw-downdir
@unnumberedsubsec 次のディレクトリに進む
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
With the "U" map, one can change to a later directory (successor).
This map is the opposite of the "u" map. (see |netrw-u|)  Use the
qb map to list both the bookmarks and history. (see |netrw-qb|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"U" マップを使用すると、次のディレクトリに移動できます。このマップは "u" マップの反対です (|@ref{netrw-u}| 参照)。qb マップを使用するとブックマークと履歴の一覧を表示できます (|@ref{netrw-qb}| 参照)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The "U" map also accepts counts to go forward in the history several slots.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"U" マップはカウントを指定することができ、履歴の特定の位置に進むことができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
See |g:netrw_dirhistmax| for how to control the quantity of history stack
slots.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
履歴の量を制御するには |@ref{g:netrw_dirhistmax}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
CHANGING TREE TOP			*netrw-ntree*  *:Ntree*  *netrw-gn* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-ntree}
@anchor{:Ntree}
@anchor{netrw-gn}
@cindex netrw-ntree
@pindex :Ntree
@kindex netrw-gn
@unnumberedsubsec ツリーのトップを変更する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may specify a new tree top for tree listings using >

	:Ntree [dirname]
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ツリー表示のツリーのトップを変更するには次のコマンドを使います
@example
:Ntree [dirname]
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Without a "dirname", the current line is used (and any leading depth
information is elided).
With a "dirname", the specified directory name is used.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"dirname" を指定しなかった場合、現在行が使われます (そして深さ情報は失われる)。"dirname" を指定した場合、指定された名前が使われます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The "gn" map will take the word below the cursor and use that for
changing the top of the tree listing.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"gn" マップはカーソル位置の単語を取得し、ツリーのトップをそれに変更します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
NETRW CLEAN					*netrw-clean* *:NetrwClean* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-clean}
@anchor{:NetrwClean}
@cindex netrw-clean
@pindex :NetrwClean
@unnumberedsubsec NETRW CLEAN
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
With :NetrwClean one may easily remove netrw from one's home directory;
more precisely, from the first directory on your |'runtimepath'|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
NetrwClean を使うと、ホームディレクトリから netrw を削除できます。正確には、|@ref{'runtimepath'}| の最初のディレクトリから削除します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
With :NetrwClean!, netrw will attempt to remove netrw from all directories on
your |'runtimepath'|.  Of course, you have to have write/delete permissions
correct to do this.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@command{:NetrwClean!} を使うと、|@ref{'runtimepath'}| のすべてのディレクトリから netrw を削除しようと試みます。これを行うにはもちろん書込/削除権限が正しいものである必要があります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
With either form of the command, netrw will first ask for confirmation
that the removal is in fact what you want to do.  If netrw doesn't have
permission to remove a file, it will issue an error message.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
どちらのコマンドも、本当に削除していいかどうかを確認するダイアログが最初に表示されます。ファイルを削除する権限がない場合はエラーメッセージが表示されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*netrw-gx*
CUSTOMIZING BROWSING WITH A SPECIAL HANDLER	*netrw-x* *netrw-handler* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-gx}
@anchor{netrw-x}
@anchor{netrw-handler}
@kindex netrw-gx
@kindex netrw-x
@cindex netrw-handler
@unnumberedsubsec 特殊ハンドラででブラウジングをカスタマイズ
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
						(also see |netrw_filehandler|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(|@ref{netrw_filehandler}| も参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Certain files, such as html, gif, jpeg, (word/office) doc, etc, files, are
best seen with a special handler (ie. a tool provided with your computer's
operating system).  Netrw allows one to invoke such special handlers by: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
html, gif, jpeg, (word/office) doc などのファイルは専用ハンドラ (コンピュータにあらかじめ備わっているようなツール) で処理するのが一番です。Netrw ではそのような専用ハンドラの呼び出しをサポートしています:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* when Exploring, hit the "x" key
	* when editing, hit gx with the cursor atop the special filename
<	  (latter not available if the |g:netrw_nogx| variable exists)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item ファイル一覧表示中に "x" キーを押す
@item ファイルを開いているときに、ファイル名の上で gx を押す
@end itemize
(後ろは |@ref{g:netrw_nogx}| が設定されている場合は使えません)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Netrw determines which special handler by the following method:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw は次の方法で専用ハンドラを決定します:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  * if |g:netrw_browsex_viewer| exists, then it will be used to attempt to
    view files.  Examples of useful settings (place into your <.vimrc>): >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item |@ref{g:netrw_browsex_viewer}| が設定されているときは、それを使ってファイルを開きます。例えば次のような設定が便利です (<.vimrc>で設定する):
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	:let g:netrw_browsex_viewer= "kfmclient exec"
<   or >
	:let g:netrw_browsex_viewer= "xdg-open"
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
:let g:netrw_browsex_viewer= "kfmclient exec"
@end example
もしくは
@example
:let g:netrw_browsex_viewer= "xdg-open"
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
    If g:netrw_browsex_viewer == '-', then netrwFileHandlers#Invoke() will be
    used instead (see |netrw_filehandler|).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
g:netrw_browsex_viewer が '-' のときは netrwFileHandler#Invoke() が最初に呼ばれます (|@ref{netrw_filehandler}| 参照)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  * for Windows 32 or 64, the URL and FileProtocolHandler dlls are used.
  * for Gnome (with gnome-open): gnome-open is used.
  * for KDE (with kfmclient)   : kfmclient is used
  * for Mac OS X               : open is used.
  * otherwise the netrwFileHandler plugin is used.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item Windows 32 or 64 では、url と FileProtocolHandler dll が使われます。
@item Gnome (with gnome-open) では gnome-open が使われます。
@item KDE (with kfmclient) では kfmclient が使われます。
@item Mac OS X では open が使われます。
@item その他では netrwFileHandler プラグインが使われます。
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The file's suffix is used by these various approaches to determine an
appropriate application to use to "handle" these files.  Such things as
OpenOffice (*.sfx), visualization (*.jpg, *.gif, etc), and PostScript (*.ps,
*.eps) can be handled.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
これらの方法ではファイルを処理するためのアプリケーションは拡張子によって決められます。例えば OpenOffice (*.sfx)、画像表示 (*.jpg, *.gif, etc)、PostScript (*.ps, *.eps) などに対応可能です。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The gx mapping extends to all buffers; apply "gx" while atop a word and netrw
will apply a special handler to it (like "x" works when in a netrw buffer).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
gx マッピングはすべてのバッファに適用できます。カーソル位置の単語に "gx" を適用すると、それに対し netrw は特別な処置を行います (ちょうど "x" が netrw バッファに対して行うように)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
One may also use visual mode (see |visual-start|) to select the text that the
special handler will use.  Normally gx uses expand("<cfile>") to pick up the
text under the cursor; one may change what |expand()| uses via the
|g:netrw_gx| variable (options include "<cword>", "<cWORD>").  Note that
expand("<cfile>") depends on the |'isfname'| setting.  Alternatively, one may
select the text to be used by gx by making a visual selection (see
|visual-block|) and then pressing gx.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

特別な処置を行うテキストをビジュアルモード (|@ref{visual-start}| 参照) により選択することもできます。通常 gx はカーソル位置のテキストを取得するのに expand("<cfile>") を使用しますが、|@ref{g:netrw_gx}| 変数で |@ref{expand()}| が使用する引数を変えることができます ("<cword>", "<cWORD>" を含むオプション)。
@quotation
@strong{Note:} @*
expand("<cfile>") は |@ref{'isfname'}| の設定に依存することに注意。
@end quotation
また、代わりに gx で使用するテキストを最初にビジュアル選択を行っておくか、|@ref{'isfname'}| オプション (グローバルなので netrw は変更しません) を変更することで選択することもできます (|@ref{visual-block}| 参照)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Associated setting variables:
	|g:netrw_gx|	control how gx picks up the text under the cursor
	|g:netrw_nogx|	prevent gx map while editing
	|g:netrw_suppress_gx_mesg| controls gx's suppression of browser messages
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連設定:
@multitable @columnfractions .4 .6
@item |@ref{g:netrw_gx}| @tab gx がどのようにカーソル位置のテキストを取得するか制御する
@item |@ref{g:netrw_nogx}| @tab 編集中 gx マップを無効にする
@item |@ref{g:netrw_suppress_gx_mesg}| @tab gx がブラウザーの出力を抑制するか制御する
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
							*netrw_filehandler*

When |g:netrw_browsex_viewer| exists and is "-", then netrw will attempt to
handle the special file with a vim function.  The "x" map applies a function
to a file, based on its extension.  Of course, the handler function must exist
for it to be called!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw_filehandler}
@cindex netrw_filehandler
|@ref{g:netrw_browsex_viewer}| が存在し "-" である場合、netrw は特殊なファイルを vim の関数で処理しようと試みます。"x" マップはファイルの拡張子に応じて関数を呼び出します。ただし、あらかじめハンドラ関数を定義しておく必要があります！
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
>
 Ex. mypgm.html   x -> NFH_html("scp://user@host/some/path/mypgm.html")
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
例:
@example
mypgm.html   x -> NFH_html("scp://user@@host/some/path/mypgm.html")
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
<	Users may write their own netrw File Handler functions to
	support more suffixes with special handling.  See
	<autoload/netrwFileHandlers.vim> for examples on how to make
	file handler functions.   As an example: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@quotation
拡張子ごとのハンドラ関数を自分で定義できます。関数のサンプルは <autoload/netrwFileHandlers.vim> を参照してください。例:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	" NFH_suffix(filename)
	fun! NFH_suffix(filename)
	..do something special with filename..
	endfun
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
" NFH_suffix(filename)
" NFH_拡張子 (ファイル名)
fun! NFH_suffix(filename)
..ファイル名に応じた処理...
endfun
@end example
@end quotation
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
These functions need to be defined in some file in your .vim/plugin
(vimfiles\plugin) directory.  Vim's function names may not have punctuation
characters (except for the underscore) in them.  To support suffices that
contain such characters, netrw will first convert the suffix using the
following table: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
このような関数は .vim/plugin (vimfiles\plugin) ディレクトリ内のファイルで定義します。Vim では関数名に記号を含めることができません (アンダースコアは可)。記号を含む拡張子をサポートするため、拡張子は次のルールで変換されます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    @ -> AT       ! -> EXCLAMATION    % -> PERCENT
    : -> COLON    = -> EQUAL          ? -> QUESTION
    , -> COMMA    - -> MINUS          ; -> SEMICOLON
    $ -> DOLLAR   + -> PLUS           ~ -> TILDE
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
@ -> AT       ! -> EXCLAMATION    % -> PERCENT
: -> COLON    = -> EQUAL          ? -> QUESTION
, -> COMMA    - -> MINUS          ; -> SEMICOLON
$ -> DOLLAR   + -> PLUS           ~ -> TILDE
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
So, for example: >

	file.rcs,v  ->  NFH_rcsCOMMAv()
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
例:
@example
file.rcs,v  ->  NFH_rcsCOMMAv()
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
If more such translations are necessary, please send me email: >
		NdrOchip at ScampbellPfamily.AbizM - NOSPAM
with a request.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
他にも変換が必要な文字があるようなら、メールでお知らせください: @*
NdrOchip at ScampbellPfamily.AbizM - NOSPAM
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Associated setting variable: |g:netrw_browsex_viewer|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連設定: |@ref{g:netrw_browsex_viewer}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
							*netrw-curdir*
DELETING BOOKMARKS					*netrw-mB* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-curdir}
@anchor{netrw-mB}
@cindex netrw-curdir
@kindex netrw-mB
@unnumberedsubsec ブックマークを削除する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To delete a bookmark, use >

	{cnt}mB
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ブックマークを削除するには、次のコマンドを使います
@example
@{cnt@}mB
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If there are marked files, then mB will remove them from the
bookmark list.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
もしマークされたファイルが存在するなら、mB はそれらをブックマークリストから削除します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Alternatively, one may use :NetrwMB! (see |netrw-:NetrwMB|). >

	:NetrwMB! [files/directories]
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
一方で :NetrwMB! を使う人もいるでしょう (|@ref{netrw-:NetrwMB}| 参照)。
@example
:NetrwMB! [files/directories]
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related Topics:
	|netrw-gb| how to return (go) to a bookmark
	|netrw-mb| how to make a bookmark
	|netrw-qb| how to list bookmarks
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目:
@multitable @columnfractions .4 .6
@item |@ref{netrw-gb}| @tab ブックマークに戻る (移動する)
@item |@ref{netrw-mb}| @tab ブックマークを設定する
@item |@ref{netrw-qb}| @tab ブックマークを一覧表示する
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
DELETING FILES OR DIRECTORIES	*netrw-delete* *netrw-D* *netrw-del* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-delete}
@anchor{netrw-D}
@anchor{netrw-del}
@cindex netrw-delete
@kindex netrw-D
@kindex netrw-del
@unnumberedsubsec ファイル/ディレクトリの削除
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If files have not been marked with |netrw-mf|:   (local marked file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@strong{ファイルが |@ref{netrw-mf}| でマークされていない場合: (local marked file list)}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    Deleting/removing files and directories involves moving the cursor to the
    file/directory to be deleted and pressing "D".  Directories must be empty
    first before they can be successfully removed.  If the directory is a
    softlink to a directory, then netrw will make two requests to remove the
    directory before succeeding.  Netrw will ask for confirmation before doing
    the removal(s).  You may select a range of lines with the "V" command
    (visual selection), and then pressing "D".
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ファイル/ディレクトリを削除するにはファイル名の上にカーソルを移動して "D" を押します。ディレクトリを削除する場合は中身が空でなければなりません。

ディレクトリがディレクトリへのソフトリンクだった場合は、ディレクトリを削除するために 2 つのリクエストが実行されます。

netrw はファイルを削除する前に確認ダイアログを表示します。"V" コマンド (ビジュアル選択) で範囲を選択して "D" を使うこともできます。

@{訳注: > 2つのリクエスト rmdir <file> || rm <file> 的な処理@}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If files have been marked with |netrw-mf|:   (local marked file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@strong{ファイルが |@ref{netrw-mf}| でマークされている場合: (local marked file list)}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    Marked files (and empty directories) will be deleted; again, you'll be
    asked to confirm the deletion before it actually takes place.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
マークされたファイル (と空ディレクトリ) が削除されます。netrw はファイルを削除する前に確認ダイアログを表示します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
A further approach is to delete files which match a pattern.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
パターンにマッチしたファイルを削除するには:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    * use  :MF pattern  (see |netrw-:MF|); then press "D".
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item :MF パターン (|@ref{netrw-:MF}| 参照) を使う。そして "D" を押す。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    * use mr (see |netrw-mr|) which will prompt you for pattern.
      This will cause the matching files to be marked.  Then,
      press "D".
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item mr (|@ref{netrw-mr}| 参照) を使う。パターンを入力するためのプロンプトが表示されます。入力したパターンにマッチしたファイルがマークされるので、それから "@key{D}" を押す。
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If your vim has 7.4 with patch#1107, then |g:netrw_localrmdir| no longer
is used to remove directories; instead, vim's |delete()| is used with
the "d" option.  Please note that only empty directories may be deleted
with the "D" mapping.  Regular files are deleted with |delete()|, too.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
もしも Patch#1107 を適用した Vim 7.4 を使っているなら、ディレクトリを削除するために |@ref{g:netrw_localrmdir}| はもう使われません。代わりに、Vim 自体の |@ref{delete()}| が "d" オプションで使われます。

どうか空のディレクトリは "D" マッピングで削除されるかもしれないことに注意してください。標準のファイルも |@ref{delete()}| で削除されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The |g:netrw_rm_cmd|, |g:netrw_rmf_cmd|, and |g:netrw_rmdir_cmd| variables are
used to control the attempts to remove remote files and directories.  The
g:netrw_rm_cmd is used with files, and its default value is:

	g:netrw_rm_cmd: ssh HOSTNAME rm
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
リモートのファイルとディレクトリの削除には、|@ref{g:netrw_rm_cmd}|, |@ref{g:netrw_rmf_cmd}|, |@ref{g:netrw_rmdir_cmd}| 変数が使われます。|@ref{g:netrw_rm_cmd}| はファイルの削除に使われます。初期設定は次のとおり:
@example
g:netrw_rm_cmd: ssh HOSTNAME rm
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The g:netrw_rmdir_cmd variable is used to support the removal of directories.
Its default value is:

	|g:netrw_rmdir_cmd|: ssh HOSTNAME rmdir
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:netrw_rmdir_cmd}| 変数はディレクトリの削除に使われます。初期設定は次のとおり:
@example
g:netrw_rmdir_cmd: ssh HOSTNAME rmdir
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If removing a directory fails with g:netrw_rmdir_cmd, netrw then will attempt
to remove it again using the g:netrw_rmf_cmd variable.  Its default value is:

	|g:netrw_rmf_cmd|: ssh HOSTNAME rm -f
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:netrw_rmdir_cmd}| によるディレクトリの削除が失敗した場合は、g:netrw_rmf_cmd を使用した削除が試されます。初期設定は次のとおり:
@example
g:netrw_rmf_cmd: ssh HOSTNAME rm -f
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics: |netrw-d|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目: |@ref{netrw-d}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated setting variable: |g:netrw_localrmdir| |g:netrw_rm_cmd|
                             |g:netrw_rmdir_cmd|   |g:netrw_ssh_cmd|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

関連設定: |@ref{g:netrw_localrmdir}| |@ref{g:netrw_rm_cmd}| |@ref{g:netrw_rmdir_cmd}| |@ref{g:netrw_ssh_cmd}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
*netrw-explore*  *netrw-hexplore* *netrw-nexplore* *netrw-pexplore*
*netrw-rexplore* *netrw-sexplore* *netrw-texplore* *netrw-vexplore* *netrw-lexplore*
DIRECTORY EXPLORATION COMMANDS  {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-explore}
@anchor{netrw-hexplore}
@anchor{netrw-nexplore}
@anchor{netrw-pexplore}
@anchor{netrw-rexplore}
@anchor{netrw-sexplore}
@anchor{netrw-texplore}
@anchor{netrw-vexplore}
@anchor{netrw-lexplore}
@cindex netrw-explore
@cindex netrw-hexplore
@cindex netrw-nexplore
@cindex netrw-pexplore
@cindex netrw-rexplore
@cindex netrw-sexplore
@cindex netrw-texplore
@cindex netrw-vexplore
@cindex netrw-lexplore
@unnumberedsubsec ディレクトリ探査コマンド
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
     :[N]Explore[!]  [dir]... Explore directory of current file      *:Explore*
     :[N]Hexplore[!] [dir]... Horizontal Split & Explore             *:Hexplore*
     :[N]Lexplore[!] [dir]... Left Explorer Toggle                   *:Lexplore*
     :[N]Sexplore[!] [dir]... Split&Explore current file's directory *:Sexplore*
     :[N]Vexplore[!] [dir]... Vertical   Split & Explore             *:Vexplore*
     :Texplore       [dir]... Tab & Explore                          *:Texplore*
     :Rexplore            ... Return to/from Explorer                *:Rexplore*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .5 .5
@anchor{:Explore}
@pindex :Explore
@item :[N]Explore[!] [dir] @tab カレントファイルのディレクトリを開く
@anchor{:Hexplore}
@pindex :Hexplore
@item :[N]Hexplore[!] [dir] @tab 水平分割で開く
@anchor{:Lexplore}
@pindex :Lexplore
@item :[N]Lexplore[!] [dir] @tab 左エクスプローラーを切り替える
@anchor{:Sexplore}
@pindex :Sexplore
@item :[N]Sexplore[!] [dir] @tab カレントファイルのディレクトリを分割して開く
@anchor{:Vexplore}
@pindex :Vexplore
@item :[N]Vexplore[!] [dir] @tab 垂直分割で開く
@anchor{:Texplore}
@pindex :Texplore
@item :Texplore [dir] @tab タブで開く
@anchor{:Rexplore}
@pindex :Rexplore
@item :Rexplore @tab エクスプローラーに/から戻る
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
     Used with :Explore **/pattern : (also see |netrw-starstar|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
:Explore **/pattern で開いたときに使うコマンド: (|@ref{netrw-starstar}| 参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
     :Nexplore............. go to next matching file                *:Nexplore*
     :Pexplore............. go to previous matching file            *:Pexplore*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .5 .5
@anchor{:Nexplore}
@pindex :Nexplore
@item :Nexplore @tab 次のファイルに移動
@anchor{:Pexplore}
@pindex :Pexplore
@item :Pexplore @tab 前のファイルに移動
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*netrw-:Explore*
:Explore  will open the local-directory browser on the current file's
          directory (or on directory [dir] if specified).  The window will be
	  split only if the file has been modified and |'hidden'| is not set,
	  otherwise the browsing window will take over that window.  Normally
	  the splitting is taken horizontally.
	  Also see: |netrw-:Rexplore|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@anchor{netrw-:Explore}
@pindex netrw-:Explore
@item :Explore
ローカルディレクトリブラウザーを開始してカレントファイルのディレクトリ (または [dir] で指定されたディレクトリ) を開きます。編集中のファイルに未保存の変更があり '@option{hidden}' が設定されていない場合は新しいウィンドウを作成します。そうでない場合は同じウィンドウを使用します。通常、ウィンドウの分割は水平分割です。|@ref{netrw-:Rexplore}| も参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
:Explore! is like :Explore, but will use vertical splitting.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item :Explore!
:Explore と同じですが、ウィンドウを垂直分割します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*netrw-:Hexplore*
:Hexplore  [dir] does an :Explore with |:belowright| horizontal splitting.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-:Hexplore}
@pindex netrw-:Hexplore
@item :Hexplore [dir]
|@ref{:belowright}| 水平分割を使って :Explore を実行します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
:Hexplore! [dir] does an :Explore with |:aboveleft|  horizontal splitting.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item :Hexplore! [dir]
|@ref{:aboveleft}| 水平分割を使って :Explore を実行します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*netrw-:Lexplore*
:[N]Lexplore [dir] toggles a full height Explorer window on the left hand side
	  of the current tab.  It will open a netrw window on the current
	  directory if [dir] is omitted; a :Lexplore [dir] will show the
	  specified directory in the left-hand side browser display no matter
	  from which window the command is issued.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-:Lexplore}
@pindex netrw-:Lexplore
@item :[N]Lexplore [dir]
現在のタブの左側に、エクスプローラーウィンドウを開いたり閉じたりします。[dir] を省略したときは現在のディレクトリを開きます。:Lexplore [dir] は、どのウィンドウで実行したかに関係なく、タブの左側でブラウザーを開き、指定されたディレクトリを表示します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	  By default, :Lexplore will change an uninitialized |g:netrw_chgwin|
	  to 2; edits will thus preferentially be made in window#2.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
初期設定では、:Lexplore は未初期化の |@ref{g:netrw_chgwin}| を 2 に設定します。つまりファイルを開くときには 2 番目のウィンドウが使われるようになります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	  The [N] specifies a |g:netrw_winsize| just for the new :Lexplore
	  window.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
[N] は新しい :Lexplore ウィンドウの |@ref{g:netrw_winsize}| を示します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	  Those who like this method often also like tree style displays;
	  see |g:netrw_liststyle|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
この方法を好む人達はしばしばツリービューも好むでしょう。|@ref{g:netrw_liststyle}| 参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
:[N]Lexplore! [dir] is similar to :Lexplore, except that the full-height
	  Explorer window will open on the right hand side and an
	  uninitialized |g:netrw_chgwin| will be set to 1 (eg. edits will
	  preferentially occur in the leftmost window).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item :[N]Lexplore! [dir]
:Lexplore と似ていますが、縦一杯のエクスプローラーウィンドウを左側に開きます。その際、未定義の |@ref{g:netrw_chgwin}| は 1 にセットされます (例えば、編集は優先的に一番左のウィンドウで生じます)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	  Also see: |netrw-C|           |g:netrw_browse_split|   |g:netrw_wiw|
		    |netrw-p| |netrw-P|   |g:netrw_chgwin|
		    |netrw-c-tab|       |g:netrw_winsize|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
以下も参照: |@ref{netrw-C}| |@ref{g:netrw_browse_split}| |@ref{g:netrw_wiw}| |@ref{netrw-p}| |@ref{netrw-P}| |@ref{g:netrw_chgwin}| |@ref{netrw-c-tab}| |@ref{g:netrw_winsize}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*netrw-:Sexplore*
:[N]Sexplore will always split the window before invoking the local-directory
	  browser.  As with Explore, the splitting is normally done
	  horizontally.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-:Sexplore}
@pindex netrw-:Sexplore
@item :[N]Sexplore
常に新しいウィンドウを作成してローカルディレクトリブラウザーを開始します。Explore と同様、通常はウィンドウは水平分割されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
:[N]Sexplore! [dir] is like :Sexplore, but the splitting will be done vertically.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item :[N]Sexplore! [dir]
:Sexplore と同じですが、ウィンドウを垂直分割します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*netrw-:Texplore*
:Texplore  [dir] does a |:tabnew| before generating the browser window
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-:Texplore}
@pindex netrw-:Texplore
@item :Texplore [dir]
ブラウザーウィンドウを作成する前に |@ref{:tabnew}| を実行します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*netrw-:Vexplore*
:[N]Vexplore  [dir] does an :Explore with |:leftabove|  vertical splitting.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-:Vexplore}
@pindex netrw-:Vexplore
@item :[N]Vexplore [dir]
|@ref{:leftabove}|  垂直分割を使って :Explore を実行します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
:[N]Vexplore! [dir] does an :Explore with |:rightbelow| vertical splitting.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item :[N]Vexplore! [dir]
|@ref{:rightbelow}| 垂直分割を使って :Explore を実行します。
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The optional parameters are:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
省略可能な引数:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 [N]: This parameter will override |g:netrw_winsize| to specify the quantity of
      rows and/or columns the new explorer window should have.
      Otherwise, the |g:netrw_winsize| variable, if it has been specified by the
      user, is used to control the quantity of rows and/or columns new
      explorer windows should have.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .1 .9
@item [N]: @tab この引数は新しいエクスプローラーウィンドウの高さかつ/または幅の量を指定するために |@ref{g:netrw_winsize}| を上書きします。

または |@ref{g:netrw_winsize}| がユーザーにより指定されれば、新しいエクスプローラーウィンドウの高さかつ/または幅の量を制御するのに使用されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 [dir]: By default, these explorer commands use the current file's directory.
        However, one may explicitly provide a directory (path) to use instead;
	ie. >

	:Explore /some/path
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item [dir]: @tab デフォルトでは、これらのエクスプローラーコマンドは現在のファイルのディレクトリを使用します。しかし、一部のコマンドでは使用されるディレクトリ (パス) を指定できます。例:
@example
:Explore /some/path
@end example
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
						*netrw-:Rexplore*
:Rexplore  This command is a little different from the other Explore commands
	   as it doesn't necessarily open an Explorer window.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@anchor{netrw-:Rexplore}
@pindex netrw-:Rexplore
@item :Rexplore
このコマンドは他のコマンドとは少し違い、あらかじめエクスプローラーウィンドウを開いてからでないと使えません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	   Return to Explorer~
	   When one edits a file using netrw which can occur, for example,
	   when pressing <cr> while the cursor is atop a filename in a netrw
	   browser window, a :Rexplore issued while editing that file will
	   return the display to that of the last netrw browser display in
	   that window.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@strong{エクスプローラーに戻る} @*
netrw を使用してファイルを編集する時、例えばカーソル位置が netrw ブラウザーウィンドウ内のファイル名にある時に @key{<CR>} を押すと、:Rexplore が実行されます。これによりそのウィンドウでの最後の netrw ブラウザーの表示に戻ることができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	   Return from Explorer~
	   Conversely, when one is editing a directory, issuing a :Rexplore
	   will return to editing the file that was last edited in that
	   window.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@strong{エクスプローラーから戻る} @*
逆に、ディレクトリを開いているとき、:Rexplore を使うと、そのウィンドウで最後に開いていたファイルに戻ることができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	   The <2-leftmouse> map (which is only available under gvim and
	   cooperative terms) does the same as :Rexplore.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
<2-leftmouse> マップ (gvim や一部の端末でのみ利用可) でも :Rexplore と同じことができます。
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Also see: |g:netrw_alto| |g:netrw_altv| |g:netrw_winsize|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
参照: |@ref{g:netrw_alto}| |@ref{g:netrw_altv}| |@ref{g:netrw_winsize}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
*netrw-star* *netrw-starpat* *netrw-starstar* *netrw-starstarpat* *netrw-grep*
EXPLORING WITH STARS AND PATTERNS {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-star}
@anchor{netrw-starpat}
@anchor{netrw-starstar}
@anchor{netrw-starstarpat}
@anchor{netrw-grep}
@c @cindex netrw-star
@cindex netrw-*
@cindex netrw-starpat
@c @cindex netrw-starstar
@cindex netrw-**
@cindex netrw-starstarpat
@cindex netrw-grep
@unnumberedsubsec スターとパターンを使った探索
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
When Explore, Sexplore, Hexplore, or Vexplore are used with one of the
following four patterns Explore generates a list of files which satisfy the
request for the local file system.  These exploration patterns will not work
with remote file browsing.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Explore, Sexplore, Hexplore, Vexplore それぞれのコマンドで、次のようなパターンが使われた場合、Explore はそれにマッチするようなファイルのリストをローカルファイルシステムに対して生成します。これらの探索パターンはリモートファイルのブラウジングに対しては機能しません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    */filepat	files in current directory which satisfy filepat
    **/filepat	files in current directory or below which satisfy the
		file pattern
    *//pattern	files in the current directory which contain the
		pattern (vimgrep is used)
    **//pattern	files in the current directory or below which contain
		the pattern (vimgrep is used)
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .2 .8
@item */filepat @tab カレントディレクトリの、filepat にマッチするファイル
@item **/filepat @tab カレントディレクトリとそれ以下のディレクトリの、filepat にマッチするファイル
@item *//pattern @tab カレントディレクトリの、pattern を含んでいるファイル (vimgrep が使用されます)
@item **//pattern @tab カレントディレクトリとそれ以下のディレクトリの、pattern を含んでいるファイル (vimgrep が使用されます)
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
The cursor will be placed on the first file in the list.  One may then
continue to go to subsequent files on that list via |:Nexplore| or to
preceding files on that list with |:Pexplore|.  Explore will update the
directory and place the cursor appropriately.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
カーソルはリストの最初のファイルの上に置かれます。|@ref{:Nexplore}| でファイルリストの次のファイルへ、|@ref{:Pexplore}| で前のファイルへ移動できます。netrw はディレクトリやカーソル位置を適切に更新します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
A plain >
	:Explore
will clear the explore list.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
引数を付けずに
@example
:Explore
@end example
と実行すると、ファイルリストがクリアされます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If your console or gui produces recognizable shift-up or shift-down sequences,
then you'll likely find using shift-downarrow and shift-uparrow convenient.
They're mapped by netrw as follows:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
あなたのコンソールまたは gui が shift-up と shift-down を解釈できるなら、shift-downarrow と shift-uparrow を使うと便利でしょう。次のマップが netrw によって定義されます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	<s-down>  == Nexplore, and
	<s-up>    == Pexplore.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
<s-down>  == Nexplore, and
<s-up>    == Pexplore.
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
As an example, consider
>
	:Explore */*.c
	:Nexplore
	:Nexplore
	:Pexplore
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
例
@example
:Explore */*.c
:Nexplore
:Nexplore
:Pexplore
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
The status line will show, on the right hand side of the status line, a
message like "Match 3 of 20".
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ステータスラインの右の方に "Match 3 of 20" のようなメッセージが表示されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Associated setting variables:
	|g:netrw_keepdir|          |g:netrw_browse_split|
	|g:netrw_fastbrowse|       |g:netrw_ftp_browse_reject|
	|g:netrw_ftp_list_cmd|     |g:netrw_ftp_sizelist_cmd|
	|g:netrw_ftp_timelist_cmd| |g:netrw_list_cmd|
	|g:netrw_liststyle|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連設定: |@ref{g:netrw_keepdir}| |@ref{g:netrw_browse_split}| |@ref{g:netrw_fastbrowse}| |@ref{g:netrw_ftp_browse_reject}| |@ref{g:netrw_ftp_list_cmd}| |@ref{g:netrw_ftp_sizelist_cmd}| |@ref{g:netrw_ftp_timelist_cmd}| |@ref{g:netrw_list_cmd}| |@ref{g:netrw_liststyle}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
DISPLAYING INFORMATION ABOUT FILE				*netrw-qf* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-qf}
@kindex netrw-qf
@unnumberedsubsec ファイルの情報を表示する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
With the cursor atop a filename, pressing "qf" will reveal the file's size
and last modification timestamp.  Currently this capability is only available
for local files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ファイル名の上にカーソルを移動して "qf" を押すと、ファイルのサイズと最終更新日時が表示されます。現在、この機能はローカルファイルのみ対応しています。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
EDIT FILE OR DIRECTORY HIDING LIST	*netrw-ctrl-h* *netrw-edithide* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-ctrl-h}
@anchor{netrw-edithide}
@kindex netrw-ctrl-h
@cindex netrw-edithide
@unnumberedsubsec 隠しリストを編集する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The "<ctrl-h>" map brings up a requestor allowing the user to change the
file/directory hiding list contained in |g:netrw_list_hide|.  The hiding list
consists of one or more patterns delimited by commas.  Files and/or
directories satisfying these patterns will either be hidden (ie. not shown) or
be the only ones displayed (see |netrw-a|).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"<ctrl-h>" マップを使うと、|@ref{g:netrw_list_hide}| に設定されたファイル/ディレクトリの隠しリストを変更できます。隠しリストはパターンをコンマで区切ったものです。パターンにマッチしたファイル/ディレクトリは表示されなくなります。あるいはマッチしたファイルのみを表示することができます (|@ref{netrw-a}| 参照)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The "gh" mapping (see |netrw-gh|) quickly alternates between the usual
hiding list and the hiding of files or directories that begin with ".".
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"gh" マップ (|@ref{netrw-gh}| 参照) を使うと、通常の隠しリストの使用と "." で始まるファイル/ディレクトリを非表示にするのを切り替えることができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
As an example, >
	let g:netrw_list_hide= '\(^\|\s\s\)\zs\.\S\+'
Effectively, this makes the effect of a |netrw-gh| command the initial setting.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
例:
@example
let g:netrw_list_hide= '\(^\|\s\s\)\zs\.\S\+'
@end example
これは |@ref{netrw-gh}| コマンドの初期設定での動作と実質的に同じになります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
What it means:

	\(^\|\s\s\)   : if the line begins with the following, -or-
	                two consecutive spaces are encountered
	\zs           : start the hiding match now
	\.            : if it now begins with a dot
	\S\+          : and is followed by one or more non-whitespace
	                characters
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

解説:
@multitable @columnfractions .3 .7
@item \(^\|\s\s\) @tab 行頭または連続した 2 つの空白文字が見つかったら
@item \zs @tab その場所からマッチを開始して
@item \. @tab ドットで始まり
@item \S\+ @tab 1 つ以上の非空白文字が続く名前にマッチする
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Associated setting variables: |g:netrw_hide| |g:netrw_list_hide|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連設定: |@ref{g:netrw_hide}| |@ref{g:netrw_list_hide}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated topics: |netrw-a| |netrw-gh| |netrw-mh|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

関連項目: |@ref{netrw-a}| |@ref{netrw-gh}| |@ref{netrw-mh}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
					*netrw-sort-sequence*
EDITING THE SORTING SEQUENCE		*netrw-S* *netrw-sortsequence* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-sort-sequence}
@anchor{netrw-S}
@anchor{netrw-sortsequence}
@cindex netrw-sort-sequence
@kindex netrw-S
@cindex netrw-sortsequence
@unnumberedsubsec ソートシーケンスを編集する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
When "Sorted by" is name, one may specify priority via the sorting sequence
(g:netrw_sort_sequence).  The sorting sequence typically prioritizes the
name-listing by suffix, although any pattern will do.  Patterns are delimited
by commas.  The default sorting sequence is (all one line):
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"Sorted by" が name (名前順ソート) のとき、g:netrw_sort_sequence を設定することで優先順位を指定できます。ソートシーケンスは典型的には順位の高い順に拡張子を並べたもので、パターンを使うこともできます。パターンはコンマで区切ります。ソートシーケンスの初期設定は次のとおり (実際にはすべて 1 行):
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
For Unix: >
	'[\/]$,\<core\%(\.\d\+\)\=,\.[a-np-z]$,\.h$,\.c$,\.cpp$,*,\.o$,\.obj$,
	\.info$,\.swp$,\.bak$,\~$'
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Unix では:
@example
'[\/]$,\<core\%(\.\d\+\)\=,\.[a-np-z]$,\.h$,\.c$,\.cpp$,*,\.o$,\.obj$,
\.info$,\.swp$,\.bak$,\~$'
@end example
<
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Otherwise: >
	'[\/]$,\.[a-np-z]$,\.h$,\.c$,\.cpp$,*,\.o$,\.obj$,\.info$,
	\.swp$,\.bak$,\~$'
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
その他:
@example
'[\/]$,\.[a-np-z]$,\.h$,\.c$,\.cpp$,*,\.o$,\.obj$,\.info$,
\.swp$,\.bak$,\~$'
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
The lone * is where all filenames not covered by one of the other patterns
will end up.  One may change the sorting sequence by modifying the
g:netrw_sort_sequence variable (either manually or in your <.vimrc>) or by
using the "S" map.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
単に * だけが指定されている場合は他のパターンにマッチしなかったすべてのファイルがマッチします。ソートシーケンスを変更するには、g:netrw_sort_sequence 変数を設定するか (手動または <.vimrc> で設定)、"S" マップを使います。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics:               |netrw-s|               |netrw-S|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目: |@ref{netrw-s}| |@ref{netrw-S}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated setting variables: |g:netrw_sort_sequence| |g:netrw_sort_options|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

関連設定: |@ref{g:netrw_sort_sequence}| |@ref{g:netrw_sort_options}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
EXECUTING FILE UNDER CURSOR VIA SYSTEM()			*netrw-X* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-X}
@kindex netrw-X
@unnumberedsubsec カーソル位置のファイルを system() で実行する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Pressing X while the cursor is atop an executable file will yield a prompt
using the filename asking for any arguments.  Upon pressing a [return], netrw
will then call |system()| with that command and arguments.  The result will be
displayed by |:echomsg|, and so |:messages| will repeat display of the result.
Ansi escape sequences will be stripped out.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
実行ファイルの上で X を押すと引数を入力するためのプロンプトが表示されます。そこで [return] を押すと、netrw はそのコマンドと引数で |@ref{system()}| を実行します。結果は |@ref{:echomsg}| で表示されるので、|@ref{:messages}| で再表示できます。Ansi エスケープシーケンスは除去されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
See |cmdline-window| for directions for more on how to edit the arguments.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
より多くの引数の編集方法の方針は |@ref{cmdline-window}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
FORCING TREATMENT AS A FILE OR DIRECTORY	*netrw-gd* *netrw-gf* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-gd}
@anchor{netrw-gf}
@kindex netrw-gd
@kindex netrw-gf
@unnumberedsubsec 取扱いをファイルまたはディレクトリに強制する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Remote symbolic links (ie. those listed via ssh or ftp) are problematic
in that it is difficult to tell whether they link to a file or to a
directory.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
リモートのシンボリックリンク (ssh や ftp を使用時) はリンク先がファイルなのかディレクトリなのかを知るのが難しいという問題があります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To force treatment as a file: use >
	gf
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
強制的にファイルとして扱うには次のコマンドを使います:
@example
gf
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
To force treatment as a directory: use >
	gd
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
強制的にディレクトリとして扱うには次のコマンドを使います:
@example
gd
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
GOING UP							*netrw--* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw--}
@cindex netrw@minus{}@minus{}
@unnumberedsubsec 親ディレクトリに移動する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To go up a directory, press "-" or press the <cr> when atop the ../ directory
entry in the listing.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
親ディレクトリに移動するには "-" を押すか、ファイル一覧の ../ ディレクトリの上で @key{<CR>} を押します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Netrw will use the command in |g:netrw_list_cmd| to perform the directory
listing operation after changing HOSTNAME to the host specified by the
user-prpvided url.  By default netrw provides the command as: >

	ssh HOSTNAME ls -FLa
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
netrw は |@ref{g:netrw_list_cmd}| を使ってディレクトリ一覧を取得します。変数の HOSTNAME の部分は実際の url に置き換えられます。初期設定は次のとおり:
@example
ssh HOSTNAME ls -FLa
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
where the HOSTNAME becomes the [user@]hostname as requested by the attempt to
read.  Naturally, the user may override this command with whatever is
preferred.  The NetList function which implements remote browsing
expects that directories will be flagged by a trailing slash.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
HOSTNAME の部分は実際のリクエストの [user@@]hostname に置換されます。設定は必要に応じて変更してください。リモートブラウズを実行する NetList 関数は、ディレクトリ名の末尾にはスラッシュが付くことを想定しています。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
HIDING FILES OR DIRECTORIES			*netrw-a* *netrw-hiding* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-a}
@anchor{netrw-hiding}
@kindex netrw-a
@cindex netrw-hiding
@unnumberedsubsec ファイル/ディレクトリを隠すにする
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Netrw's browsing facility allows one to use the hiding list in one of three
ways: ignore it, hide files which match, and show only those files which
match.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw のブラウジングでは隠しリストを使う方法が 3 つあります: 使用しない、マッチしたファイルを隠す、マッチしたファイルのみを表示する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If no files have been marked via |netrw-mf|:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@strong{ファイルが |@ref{netrw-mf}| によってマークされていない場合:}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The "a" map allows the user to cycle through the three hiding modes.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"a" マップを使うと 3 つの表示モードが順番に切り替わります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The |g:netrw_list_hide| variable holds a comma delimited list of patterns
based on regular expressions (ex. ^.*\.obj$,^\.) which specify the hiding list.
(also see |netrw-ctrl-h|)  To set the hiding list, use the <c-h> map.  As an
example, to hide files which begin with a ".", one may use the <c-h> map to
set the hiding list to '^\..*' (or one may put let g:netrw_list_hide= '^\..*'
in one's <.vimrc>).  One may then use the "a" key to show all files, hide
matching files, or to show only the matching files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:netrw_list_hide}| 変数にはコンマで区切られた正規表現に基づくパターンのリスト (例 @samp{^.*\.obj$,^\.}) が設定されます。隠しリストを設定するには <c-h> マップを使います (|@ref{netrw-ctrl-h}| 参照)。

例えば、"." で始まるファイルを非表示にしたい場合、<c-h> を押して隠しリストに '@samp{^\..*}' を設定します (あるいは <@file{.vimrc}> で @command{let g:netrw_list_hide= '^\..*'} を設定する)。そして、"@key{a}" キーを押して表示を切り替えます (すべてのファイルを表示、マッチしたファイルを隠す、マッチしたファイルのみ表示。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Example: \.[ch]$
		This hiding list command will hide/show all *.c and *.h files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@item 例: \.[ch]$
すべての *.c *.h ファイルを表示/非表示する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Example: \.c$,\.h$
		This hiding list command will also hide/show all *.c and *.h
		files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 例: \.c$,\.h$
同上。すべての *.c *.h ファイルを表示/非表示する。
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Don't forget to use the "a" map to select the mode (normal/hiding/show) you
want!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
表示モード (normal/hiding/show) の切り替えは "a" マップです。忘れないで！
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If files have been marked using |netrw-mf|, then this command will:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@strong{ファイルが |@ref{netrw-mf}| によってマークされている場合、次のように動作します:}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  if showing all files or non-hidden files:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@item すべてのファイルを表示 or 隠しファイル非表示の場合:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
   modify the g:netrw_list_hide list by appending the marked files to it
   and showing only non-hidden files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
マークされたファイルを g:netrw_list_hide に追加し、隠しファイル非表示モードにする
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  else if showing hidden files only:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 隠しファイルのみ表示の場合:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
   modify the g:netrw_list_hide list by removing the marked files from it
   and showing only non-hidden files.
  endif
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
マークされたファイルを g:netrw_list_hide から削除し、隠しファイル非表示モードにする
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
					*netrw-gh* *netrw-hide*
As a quick shortcut, one may press >
	gh
to toggle between hiding files which begin with a period (dot) and not hiding
them.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-gh}
@anchor{netrw-hide}
@kindex netrw-gh
@cindex netrw-hide
次のコマンドを使うと
@example
gh
@end example
ドットで始まるファイルを非表示にするかどうかを簡単に切り替えることができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Associated setting variables: |g:netrw_list_hide|  |g:netrw_hide|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連設定: |@ref{g:netrw_list_hide}| |@ref{g:netrw_hide}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated topics: |netrw-a| |netrw-ctrl-h| |netrw-mh|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

関連項目: |@ref{netrw-a}| |@ref{netrw-ctrl-h}| |@ref{netrw-mh}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
					*netrw-gitignore*
Netrw provides a helper function 'netrw_gitignore#Hide()' that, when used with
|g:netrw_list_hide| automatically hides all git-ignored files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-gitignore}
@cindex netrw-gitignore
netrw にはヘルパ関数の 'netrw_gitignore#Hide()' が用意されています。|@ref{g:netrw_list_hide}| と一緒に使うことで git の隠しファイルを自動的に隠すことができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
'netrw_gitignore#Hide' searches for patterns in the following files: >

	'./.gitignore'
	'./.git/info/exclude'
	global gitignore file: `git config --global core.excludesfile`
	system gitignore file: `git config --system core.excludesfile`
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
'netrw_gitignore#Hide' はこれらのファイルにあるパターンを検索します:
@example
'./.gitignore'
'./.git/info/exclude'
global gitignore file: `git config --global core.excludesfile`
system gitignore file: `git config --system core.excludesfile`
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Files that do not exist, are ignored.
Git-ignore patterns are taken from existing files, and converted to patterns for
hiding files. For example, if you had '*.log' in your '.gitignore' file, it
would be converted to '.*\.log'.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
存在しないファイルは無視されます。

git の隠しファイルのパターンは存在するファイルから取られ、隠しファイル設定のパターンに変換されます。例えば、'@file{.gitignore}' に '*.log' があったとすると、それは '.*\.log' に変換されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To use this function, simply assign its output to |g:netrw_list_hide| option.  >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
この関数を使うには、単にその戻り値を |@ref{g:netrw_list_hide}| オプションに代入します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Example: let g:netrw_list_hide= netrw_gitignore#Hide()
		Git-ignored files are hidden in Netrw.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@item 例: let g:netrw_list_hide= netrw_gitignore#Hide()
netrw で git の隠しファイルをすべて隠す。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Example: let g:netrw_list_hide= netrw_gitignore#Hide('my_gitignore_file')
		Function can take additional files with git-ignore patterns.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 例: let g:netrw_list_hide= netrw_gitignore#Hide('my_gitignore_file')
関数には git の隠しファイルのパターンを読み込む追加のファイルを指定できます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Example: g:netrw_list_hide= netrw_gitignore#Hide() . '.*\.swp$'
		Combining 'netrw_gitignore#Hide' with custom patterns.
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 例: g:netrw_list_hide= netrw_gitignore#Hide() . '.*\.swp$'
'netrw_gitignore#Hide' と独自のパターンを組み合わせる。
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
IMPROVING BROWSING			*netrw-listhack* *netrw-ssh-hack* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-listhack}
@anchor{netrw-ssh-hack}
@cindex netrw-listhack
@cindex netrw-ssh-hack
@unnumberedsubsec ブラウジングを改善する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Especially with the remote directory browser, constantly entering the password
is tedious.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
リモートディレクトリをブラウジングするときなどに、操作の度にパスワードを入力するのは面倒です。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
For Linux/Unix systems, the book "Linux Server Hacks - 100 industrial strength
tips & tools" by Rob Flickenger (O'Reilly, ISBN 0-596-00461-3) gives a tip
for setting up no-password ssh and scp and discusses associated security
issues.  It used to be available at http://hacks.oreilly.com/pub/h/66 ,
but apparently that address is now being redirected to some "hackzine".
I'll attempt a summary based on that article and on a communication from
Ben Schmidt:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Linux/Unix システム向けには

@example
「Linux Server Hacks - 100 industrial strength tips & tools"」
Rob Flickenger 著
O'Reilly, ISBN 0-596-00461-3
@end example

日本語版は
@example
「LinuxサーバHacks—プロが使うテクニック&ツール100選」
翻訳: 山口晴広、イメージズアンドワーズ
ISBN-10: 487311151X
ISBN-13: 978-4873111513
@end example

に、ssh と scp のパスワードを省略するための設定と、セキュリティ関係の議論があります。以前は @url{http://hacks.oreilly.com/pub/h/66} で参照できましたが、現在このアドレスは "hackzine" へのリダイレクトになっています。

記事の内容と Ben Schmidt とのやりとりを要約します:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	1. Generate a public/private key pair on the local machine
	   (ssh client): >
		ssh-keygen -t rsa
		(saving the file in ~/.ssh/id_rsa as prompted)
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@enumerate
@item ローカルマシン (sshクライアント) でパブリックキーとプライベートキーのペアを生成する:
@verbatim
ssh-keygen -t rsa
@end verbatim
(プロンプトに従ってファイルが ~/.ssh/id_rsa に保存されます)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	2. Just hit the <CR> when asked for passphrase (twice) for no
	   passphrase.  If you do use a passphrase, you will also need to use
	   ssh-agent so you only have to type the passphrase once per session.
	   If you don't use a passphrase, simply logging onto your local
	   computer or getting access to the keyfile in any way will suffice
	   to access any ssh servers which have that key authorized for login.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item パスフレーズを聞かれる (2 度) のでそのまま @key{<CR>} を押してパスフレーズを空にする。もしパスフレーズを設定するなら、ssh-agent を使うことでパスフレーズの入力をセッションごとに 1 度だけで済ますことができます。パスフレーズを設定しなかった場合、あなたのローカルコンピュータにログインするか、あるいはキーファイルにアクセスできれば、そのキーファイルが登録された ssh サーバーにアクセスできます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	3. This creates two files: >
		~/.ssh/id_rsa
		~/.ssh/id_rsa.pub
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 2 つのファイルが作成される:
@example
~/.ssh/id_rsa
~/.ssh/id_rsa.pub
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	4. On the target machine (ssh server): >
		cd
		mkdir -p .ssh
		chmod 0700 .ssh
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item ターゲットマシン (ssh サーバー) での操作:
@verbatim
cd
mkdir .ssh
chmod 0700 .ssh
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	5. On your local machine (ssh client): (one line) >
		ssh {serverhostname}
		  cat '>>' '~/.ssh/authorized_keys2' < ~/.ssh/id_rsa.pub
<
	   or, for OpenSSH, (one line) >
		ssh {serverhostname}
		  cat '>>' '~/.ssh/authorized_keys' < ~/.ssh/id_rsa.pub
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item ローカルマシン (ssh クライアント) での操作: (1 行で入力)
@verbatim
ssh {serverhostname} cat '>>' '~/.ssh/authorized_keys2' < ~/.ssh/id_rsa.pub
@end verbatim
もしくは OpenSSH で: (1 行で入力)
@verbatim
ssh {serverhostname} cat '>>' '~/.ssh/authorized_keys' < ~/.ssh/id_rsa.pub
@end verbatim
@end enumerate
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
You can test it out with >
	ssh {serverhostname}
and you should be log onto the server machine without further need to type
anything.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
次のコマンドで接続テストします:
@verbatim
ssh {serverhostname}
@end verbatim
他に何も入力しないでサーバーマシンにログインできるはずです。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If you decided to use a passphrase, do: >
	ssh-agent $SHELL
	ssh-add
	ssh {serverhostname}
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
パスフレーズを設定している場合は次のようにします:
@verbatim
ssh-agent $SHELL
ssh-add
ssh {serverhostname}
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
You will be prompted for your key passphrase when you use ssh-add, but not
subsequently when you use ssh.  For use with vim, you can use >
	ssh-agent vim
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ssh-add を実行するとパスフレーズを入力するプロンプトが表示されます。そして、ssh を使うときはそれは表示されません。vim で使うときは、次のようにもできます
@verbatim
ssh-agent vim
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
and, when next within vim, use >
	:!ssh-add
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
そして、vim の中で次のコマンドを実行します
@verbatim
:!ssh-add
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Alternatively, you can apply ssh-agent to the terminal you're planning on
running vim in: >
	ssh-agent xterm &
and do ssh-add whenever you need.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
あるいは、vim を実行する予定の端末に ssh-agent を適用する方法もあります:
@verbatim
ssh-agent xterm &
@end verbatim
そして、必要になったところで ssh-add を実行してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
For Windows, folks on the vim mailing list have mentioned that Pageant helps
with avoiding the constant need to enter the password.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Windows 向けには、vim メーリングリストにおいてパスワードの省略には Pagent を使うのがいいという話がありました。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Kingston Fung wrote about another way to avoid constantly needing to enter
passwords:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Kingston Fung 氏がパスワードを省略する別の方法について書いています:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    In order to avoid the need to type in the password for scp each time, you
    provide a hack in the docs to set up a non password ssh account. I found a
    better way to do that: I can use a regular ssh account which uses a
    password to access the material without the need to key-in the password
    each time. It's good for security and convenience. I tried ssh public key
    authorization + ssh-agent, implementing this, and it works! Here are two
    links with instructions:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@quotation
scp を使うたびにパスワードを入力しなくてもよくするには、ドキュメントにあるハックで空パスワードの ssh アカウントを作成する方法もあるが、もっといい方法がある。この方法では通常のパスワード付き ssh アカウントを使い、パスワードなしで操作を行える。これはセキュアかつ便利だ。方法としては、ssh パブリックキー認証と ssh-agent を使う。詳しくはリンク先を見て欲しい。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    http://www.ibm.com/developerworks/library/l-keyc2/
    http://sial.org/howto/openssh/publickey-auth/
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@url{http://www.ibm.com/developerworks/library/l-keyc2/} @*
@url{http://sial.org/howto/openssh/publickey-auth/}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
    Ssh hints:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Ssh ヒント:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Thomer Gil has provided a hint on how to speed up netrw+ssh:
	    http://thomer.com/howtos/netrw_ssh.html
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Thomer Gil は netrw+ssh の速度を改善するヒントを提供しています: @*
@url{http://thomer.com/howtos/netrw_ssh.html}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Alex Young has several hints on speeding ssh up:
	    http://usevim.com/2012/03/16/editing-remote-files/
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Alex Young は ssh の速度を改善するいくつかのヒントを提供しています: @*
@url{http://usevim.com/2012/03/16/editing-remote-files/}
@end quotation
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
LISTING BOOKMARKS AND HISTORY		*netrw-qb* *netrw-listbookmark* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-qb}
@anchor{netrw-listbookmark}
@kindex netrw-qb
@cindex netrw-listbookmark
@unnumberedsubsec ブックマークと履歴を一覧表示する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Pressing "qb" (query bookmarks) will list both the bookmarked directories and
directory traversal history.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"qb" (query bookmarks) を押すと、ブックマークされたディレクトリと移動履歴の一覧が表示されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related Topics:
	|netrw-gb| how to return (go) to a bookmark
	|netrw-mb| how to make a bookmark
	|netrw-mB| how to delete bookmarks
	|netrw-u|  change to a predecessor directory via the history stack
	|netrw-U|  change to a successor   directory via the history stack
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目:
@multitable @columnfractions .4 .6
@item |@ref{netrw-gb}| @tab ブックマークに戻る (移動する)
@item |@ref{netrw-mb}| @tab ブックマークを設定する
@item |@ref{netrw-mB}| @tab ブックマークを削除する
@item |@ref{netrw-u}| @tab 表示履歴の前のディレクトリに移動する
@item |@ref{netrw-U}| @tab 表示履歴の次のディレクトリに移動する
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
MAKING A NEW DIRECTORY					*netrw-d* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-d}
@kindex netrw-d
@unnumberedsubsec 新しいディレクトリを作成する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
With the "d" map one may make a new directory either remotely (which depends
on the global variable g:netrw_mkdir_cmd) or locally (which depends on the
global variable g:netrw_localmkdir).  Netrw will issue a request for the new
directory's name.  A bare <CR> at that point will abort the making of the
directory.  Attempts to make a local directory that already exists (as either
a file or a directory) will be detected, reported on, and ignored.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"d" マップを使うと新しいディレクトリを作成できます (リモート操作は g:netrw_mkdir_cmd 変数に依存。ローカル操作は g:netrw_localmkdir に依存)。コマンドを実行すると新しいディレクトリの名前を入力するプロンプトが表示されます。何も入力せずに @key{<CR>} を押すとディレクトリの作成をキャンセルできます。ローカルディレクトリを作成するときに既存のファイルまたはディレクトリと同じ名前を指定すると、エラーが表示され、操作は無視されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics: |netrw-D|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目: |@ref{netrw-D}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated setting variables:	|g:netrw_localmkdir|   |g:netrw_mkdir_cmd|
				|g:netrw_remote_mkdir| |netrw-%|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

関連設定変数: |@ref{g:netrw_localmkdir}| |@ref{g:netrw_mkdir_cmd}| |@ref{g:netrw_remote_mkdir}| |@ref{netrw-%}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MAKING THE BROWSING DIRECTORY THE CURRENT DIRECTORY	*netrw-cd* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-cd}
@kindex netrw-cd
@unnumberedsubsec ブラウジングディレクトリをカレントディレクトリにする
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
By default, |g:netrw_keepdir| is 1.  This setting means that the current
directory will not track the browsing directory. (done for backwards
compatibility with v6's file explorer).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:netrw_keepdir}| の初期設定は 1 です。この設定の場合、カレントディレクトリはブラウジングディレクトリに合わせて変更されません。(v6 のファイルエクスプローラーとの互換性のため)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Setting g:netrw_keepdir to 0 tells netrw to make vim's current directory
track netrw's browsing directory.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
g:netrw_keepdir を 0 に設定すると、ディレクトリを移動する度にカレントディレクトリが設定されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
However, given the default setting for g:netrw_keepdir of 1 where netrw
maintains its own separate notion of the current directory, in order to make
the two directories the same, use the "c" map (just type c).  That map will
set Vim's notion of the current directory to netrw's current browsing
directory.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
g:netrw_keepdir が 1 のときは netrw のブラウジングディレクトリとカレントディレクトリは別々です。2 つのディレクトリを同じにするには "c" マップを使います (c を押すだけ)。このマップは Vim のカレントディレクトリを netrw のブラウジングディレクトリに変更します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
*netrw-c* : This map's name has been changed from "c" to cd (see |netrw-cd|).
          This change was done to allow for |netrw-cb| and |netrw-cB| maps.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-c}
@kindex netrw-c
netrw-c : このマップの名前は "c" から cd に変更されました (|@ref{netrw-cd}| を参照)。この変更は |@ref{netrw-cb}| と |@ref{netrw-cB}| のマップも考慮されています。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Associated setting variable: |g:netrw_keepdir|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連設定: |@ref{g:netrw_keepdir}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
MARKING FILES					*netrw-:MF*	*netrw-mf* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-:MF}
@anchor{netrw-mf}
@pindex netrw-:MF
@kindex netrw-mf
@unnumberedsubsec ファイルをマークする
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	(also see |netrw-mr|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(|@ref{netrw-mr}| も参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Netrw provides several ways to mark files:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
netrw はファイルをマークする方法をいくつか提供しています:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* One may mark files with the cursor atop a filename and
	  then pressing "mf".
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item カーソルをファイル名の上に移動して "mf" を押す。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* With gvim, in addition one may mark files with
	  <s-leftmouse>. (see |netrw-mouse|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item gvim では、加えて <s-leftmouse> でもファイルをマークできる。(|@ref{netrw-mouse}| を参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* One may use the :MF command, which takes a list of
	  files (for local directories, the list may include
	  wildcards -- see |glob()|) >

		:MF *.c
<
	  (Note that :MF uses |<f-args>| to break the line
	  at spaces)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item @command{:MF} コマンドを使う。これはファイルのリストを指定して使う (ローカルディレクトリでは、リストにワイルドカードを指定できる @minus{}@minus{} |@ref{glob()}| 参照)
@example
:MF *.c
@end example
@quotation
@strong{Note:} @*
:MF の引数は |@ref{<f-args>}| として、空白区切りで解釈される
@end quotation
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* Mark files using the |argument-list| (|netrw-mA|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item |@ref{argument-list}| を使用してファイルをマークする (|@ref{netrw-mA}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* Mark files based upon a |location-list| (|netrw-qL|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item |@ref{location-list}| 上のファイルをマークする (|@ref{netrw-qL}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* Mark files based upon the quickfix list (|netrw-qF|)
	  (|quickfix-error-lists|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item クイックフィックスリストに基づいてマークする (|@ref{netrw-qF}|) (|@ref{quickfix-error-lists}|)
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The following netrw maps make use of marked files:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
マークしたファイルは以下の netrw マップを使って操作できます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    |netrw-a|	Hide marked files/directories
    |netrw-D|	Delete marked files/directories
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .3 .7
@item |@ref{netrw-a}| @tab ファイル/ディレクトリを隠す
@item |@ref{netrw-D}| @tab ファイル/ディレクトリを削除する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
    |netrw-ma|	Move marked files' names to |arglist|
    |netrw-mA|	Move |arglist| filenames to marked file list
    |netrw-mb|	Append marked files to bookmarks
    |netrw-mB|	Delete marked files from bookmarks
    |netrw-mc|	Copy marked files to target
    |netrw-md|	Apply vimdiff to marked files
    |netrw-me|	Edit marked files
    |netrw-mF|	Unmark marked files
    |netrw-mg|	Apply vimgrep to marked files
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item |@ref{netrw-ma}| @tab マークしたファイルを |@ref{arglist}| に移動する
@item |@ref{netrw-mA}| @tab |@ref{arglist}| をマークしたファイルに移動する
@item |@ref{netrw-mb}| @tab マークしたファイルをブックマークに追加する
@item |@ref{netrw-mB}| @tab マークしたファイルをブックマークから削除する
@item |@ref{netrw-mc}| @tab ファイルをターゲットディレクトリにコピーする
@item |@ref{netrw-md}| @tab マークしたファイルに vimdiff を適用する
@item |@ref{netrw-me}| @tab マークしたファイルを開く
@item |@ref{netrw-mF}| @tab ファイルのマークを外す
@item |@ref{netrw-mg}| @tab マークしたファイルに vimgrep を適用する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
    |netrw-mm|	Move marked files to target
    |netrw-mp|	Print marked files
    |netrw-ms|	Netrw will source marked files
    |netrw-mt|	Set target for |netrw-mm| and |netrw-mc|
    |netrw-mT|	Generate tags using marked files
    |netrw-mv|	Apply vim command to marked files
    |netrw-mx|	Apply shell command to marked files
    |netrw-mX|	Apply shell command to marked files, en bloc
    |netrw-mz|	Compress/Decompress marked files
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item |@ref{netrw-mm}| @tab マークしたファイルをターゲットに移動する
@item |@ref{netrw-mp}| @tab マークしたファイル印刷する
@item |@ref{netrw-mt}| @tab |@ref{netrw-mm}| または |@ref{netrw-mc}| 用のターゲットを設定する
@item |@ref{netrw-mT}| @tab マークしたファイルのタグを生成する
@item |@ref{netrw-mv}| @tab マークしたファイルに Vim コマンドを適用する
@item |@ref{netrw-mx}| @tab マークしたファイルにシェルコマンドを適用する
@item |@ref{netrw-mX}| @tab マークしたファイルに一括でシェルコマンドを適用する
@item |@ref{netrw-mz}| @tab マークしたファイルを圧縮/伸長する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
    |netrw-O|	Obtain marked files
    |netrw-R|	Rename marked files
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item |@ref{netrw-O}| @tab マークしたファイルを取得する
@item |@ref{netrw-R}| @tab マークしたファイルの名前を変更する
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may unmark files one at a time the same way one marks them; ie. place
the cursor atop a marked file and press "mf".  This process also works
with <s-leftmouse> using gvim.  One may unmark all files by pressing
"mu" (see |netrw-mu|).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
マークを解除したいときはマークを設定したときと同様に、ファイル名の上で "mf" を押します。gvim では <s-leftmouse> も使えます。すべてのマークを解除するには "mu" を使います (|@ref{netrw-mu}| 参照)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Marked files are highlighted using the "netrwMarkFile" highlighting group,
which by default is linked to "Identifier" (see Identifier under
|group-name|).  You may change the highlighting group by putting something
like >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
マークされたファイルは "netrwMarkFile" 強調グループで強調表示されます。これは初期設定では "Identifier" へのリンクです (|@ref{group-name}| の Identifier 参照)。次のようなコマンドで強調グループを設定することができます
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	highlight clear netrwMarkFile
	hi link netrwMarkFile ..whatever..
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
highlight clear netrwMarkFile
hi link netrwMarkFile ..何か..
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
into $HOME/.vim/after/syntax/netrw.vim .
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
これを $HOME/.vim/after/syntax/netrw.vim に書きます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If the mouse is enabled and works with your vim, you may use <s-leftmouse> to
mark one or more files.  You may mark multiple files by dragging the shifted
leftmouse.  (see |netrw-mouse|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
もしマウスが利用可能なら、<s-leftmouse> を使って複数のファイルをマークできます。@key{Shift} を押したままマウスの左ボタンでドラッグすることで複数のファイルをマークすることもできます。(|@ref{netrw-mouse}| 参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
			*markfilelist* *global_markfilelist* *local_markfilelist*
All marked files are entered onto the global marked file list; there is only
one such list.  In addition, every netrw buffer also has its own buffer-local
marked file list; since netrw buffers are associated with specific
directories, this means that each directory has its own local marked file
list.  The various commands which operate on marked files use one or the other
of the marked file lists.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{markfilelist}
@anchor{global_markfilelist}
@anchor{local_markfilelist}
@cindex markfilelist
@cindex global_markfilelist
@cindex local_markfilelist
マークされたすべてのファイルはグローバルマークファイルリストに記録されます。グローバルリストは 1 つだけ存在します。さらに、すべての netrw バッファはバッファローカルマークファイルリストを持っています。

netrw バッファは特定のディレクトリと結びついているので、ディレクトリごとにローカルマークファイルリストが存在することになります。マークされたファイルに対する操作はグローバル、またはローカルのマークファイルリストに作用します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Known Problem: if one is using tree mode (|g:netrw_liststyle|) and several
directories have files with the same name,  then marking such a file will
result in all such files being highlighted as if they were all marked.  The
|markfilelist|, however, will only have the selected file in it.  This problem
is unlikely to be fixed.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
既知の問題: ツリー表示モード (|@ref{g:netrw_liststyle}|) で表示していて、複数のディレクトリが同じ名前のファイルを持っているとき、そのどれかのファイルをマークすると、すべてのファイルがマークされたかのように強調表示されます。しかしマークファイルリスト (|@ref{markfilelist}|) は選択されたファイルのみを含んでいます。これはおそらく修正されないでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
UNMARKING FILES							*netrw-mF* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mF}
@kindex netrw-mF
@unnumberedsubsec ファイルのマークを外す
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	(also see |netrw-mf|, |netrw-mu|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(|@ref{netrw-mf}|, |@ref{netrw-mu}| も参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The "mF" command will unmark all files in the current buffer.  One may also use
mf (|netrw-mf|) on a specific, already marked, file to unmark just that file.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"mF" コマンドを使うとカレントバッファ内のすべてのファイルのマークを外すことができます。ファイルごとに個別にマークを外したい場合は mf (|@ref{netrw-mf}|) を使います。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
MARKING FILES BY LOCATION LIST					*netrw-qL* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-qL}
@kindex netrw-qL
@unnumberedsubsec ロケーションリストを使ってファイルをマークする
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	(also see |netrw-mf|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(|@ref{netrw-mf}| も参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may convert |location-list|s into a marked file list using "qL".
You may then proceed with commands such as me (|netrw-me|) to edit them.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{location-list}| のファイルをマークするには "qL" を使います。続けて me (|@ref{netrw-me}|) などのコマンドを使うとそれらのファイルを開くことができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MARKING FILES BY QUICKFIX LIST					*netrw-qF* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-qF}
@kindex netrw-qF
@unnumberedsubsec QuickFix リストを使ってファイルをマークする
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	(also see |netrw-mf|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(|@ref{netrw-mf}| も参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may convert |quickfix-error-lists| into a marked file list using "qF".
You may then proceed with commands such as me (|netrw-me|) to edit them.
Quickfix error lists are generated, for example, by calls to |:vimgrep|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{quickfix-error-lists}| のファイルをマークするには "qF" を使います。続けて me (|@ref{netrw-me}|) などのコマンドを使うとそれらのファイルを開くことができます。Quickfix エラーリストは |@ref{:vimgrep}| などのコマンドで生成されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MARKING FILES BY REGULAR EXPRESSION				*netrw-mr* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mr}
@kindex netrw-mr
@unnumberedsubsec 正規表現を使ってファイルをマークする
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	(also see |netrw-mf|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(|@ref{netrw-mf}| も参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may also mark files by pressing "mr"; netrw will then issue a prompt,
"Enter regexp: ".  You may then enter a shell-style regular expression such
as *.c$ (see |glob()|).  For remote systems, glob() doesn't work -- so netrw
converts "*" into ".*" (see |regexp|) and marks files based on that.  In the
future I may make it possible to use |regexp|s instead of glob()-style
expressions (yet-another-option).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
正規表現を使ってファイルをマークするには "mr" を使います。"mr" を押すと "Enter regexp: " というプロンプトが表示されるので、例えば *.c$ のようなシェル形式の正規表現 (|@ref{glob()}| 参照) を入力します。

リモートシステムに対しては glob() は使えないので、netrw は "*" を ".*" に変換し (|@ref{regexp}| 参照)、それを使ってファイルをマークします。将来的には glob() スタイルではなく |@ref{regexp}| スタイルの正規表現を使えるようにする予定です (また別のオプションで)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
See |cmdline-window| for directions on more on how to edit the regular
expression.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
より多くの正規表現の編集方法の方針は |@ref{cmdline-window}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MARKED FILES, ARBITRARY VIM COMMAND				*netrw-mv*  {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mv}
@kindex netrw-mv
@unnumberedsubsec マークファイル: Vimコマンド
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (uses the local marked-file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(ローカルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The "mv" map causes netrw to execute an arbitrary vim command on each file on
the local marked file list, individually:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"mv" マップはローカルマークファイルリストのファイルに対して netrw にそれぞれ任意の vim コマンドを実行させます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* 1split
	* sil! keepalt e file
	* run vim command
	* sil! keepalt wq!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
* 1split
* sil! keepalt e file
* run vim command
* sil! keepalt wq!
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
A prompt, "Enter vim command: ", will be issued to elicit the vim command you
wish used.  See |cmdline-window| for directions for more on how to edit the
command.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
あなたが実行したい vim コマンドを尋ねるため "Enter vim command: " というプロンプトが出ます。より多くのコマンドの編集方法の方針は |@ref{cmdline-window}| を参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MARKED FILES, ARBITRARY SHELL COMMAND				*netrw-mx* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mx}
@kindex netrw-mx
@unnumberedsubsec マークファイル: 任意のシェルコマンド
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (uses the local marked-file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(ローカルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Upon activation of the "mx" map, netrw will query the user for some (external)
command to be applied to all marked files.  All "%"s in the command will be
substituted with the name of each marked file in turn.  If no "%"s are in the
command, then the command will be followed by a space and a marked filename.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"mx" マップを実行すると(外部)コマンドを入力するためのプロンプトが表示され、マークしたファイルに対して入力したコマンドが実行されます。コマンド文字列内のすべての "%" は実行ごとにファイル名に置換されます。"%" が無い場合はコマンドの後ろにスペースとファイル名が付けられます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Example:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
例:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	(mark files)
	mx
	Enter command: cat

	The result is a series of shell commands:
	cat 'file1'
	cat 'file2'
	...
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
(ファイルをマークする)
mx
コマンドを入力する: cat

これにより次のシェルコマンドが実行されます:
cat 'file1'
cat 'file2'
...
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MARKED FILES, ARBITRARY SHELL COMMAND, EN BLOC 			*netrw-mX* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mX}
@kindex netrw-mX
@unnumberedsubsec マークファイル: 一括シェルコマンド
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (uses the global marked-file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(グローバルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Upon activation of the 'mX' map, netrw will query the user for some (external)
command to be applied to all marked files on the global marked file list.  The
"en bloc" means that one command will be executed on all the files at once: >

	command files
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
'mX' マップの実行の際、netrw はユーザーにグローバルマークファイルリストに対して適用する外部コマンドを尋ねます。"一括" の意味するものは、1 つのコマンドがすべてのファイルに対して一度に実行されるためです:
@example
command files
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
This approach is useful, for example, to select files and make a tarball: >

	(mark files)
	mX
	Enter command: tar cf mynewtarball.tar
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
このアプローチは、例えば tarball を作るためのファイルを選択するのに便利です:
@example
(ファイルをマークする)
mX
コマンドを入力する: tar cf mynewtarball.tar
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
The command that will be run with this example:

	tar cf mynewtarball.tar 'file1' 'file2' ...
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
この例により実行されるコマンド:
@verbatim
tar cf mynewtarball.tar 'file1' 'file2' ...
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MARKED FILES: ARGUMENT LIST				*netrw-ma* *netrw-mA*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-ma}
@anchor{netrw-mA}
@kindex netrw-ma
@kindex netrw-mA
@unnumberedsubsec マークファイル: 引数リスト
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (uses the global marked-file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(グローバルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Using ma, one moves filenames from the marked file list to the argument list.
Using mA, one moves filenames from the argument list to the marked file list.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ma を使うと、マークファイルリストを引数リストに移動します。mA を使うと、引数リストをマークファイルリストに移動します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
See Also: |netrw-cb| |netrw-cB| |netrw-qF| |argument-list| |:args|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
参照: |@ref{netrw-cb}| |@ref{netrw-cB}| |@ref{netrw-qF}| |@ref{argument-list}| |@ref{:args}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MARKED FILES: BUFFER LIST				*netrw-cb* *netrw-cB*
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-cb}
@anchor{netrw-cB}
@kindex netrw-cb
@kindex netrw-cB
@unnumberedsubsec マークファイル: バッファリスト
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (uses the global marked-file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(グローバルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Using cb, one moves  filenames from the marked file list to the buffer list.
Using cB, one copies filenames from the buffer list to the marked file list.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
cb を使うと、ファイル名をマークファイルリストからバッファリストに移動します。cB を使うと、ファイル名をバッファリストからマークファイルリストへコピーします。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
See Also: |netrw-ma| |netrw-mA| |netrw-qF| |buffer-list| |:buffers|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
参照: |@ref{netrw-ma}| |@ref{netrw-mA}| |@ref{netrw-qF}| |@ref{buffer-list}| |@ref{:buffers}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MARKED FILES: COMPRESSION AND DECOMPRESSION		*netrw-mz* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mz}
@kindex netrw-mz
@unnumberedsubsec マークファイル: 圧縮と伸長
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (uses the local marked file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(ローカルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If any marked files are compressed,   then "mz" will decompress them.
If any marked files are decompressed, then "mz" will compress them
using the command specified by |g:netrw_compress|; by default,
that's "gzip".
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
マークされたファイルが圧縮されている場合、"mz" はファイルを伸長します。マークされたファイルが圧縮されていない場合、"mz" はファイルを圧縮します。圧縮コマンドは |@ref{g:netrw_compress}| で設定できます。初期設定は "gzip" です。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
For decompression, netrw uses a |Dictionary| of suffices and their
associated decompressing utilities; see |g:netrw_decompress|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
伸長には、拡張子と伸長コマンドを関連付けた |@ref{Dictionary}| が使われます。|@ref{g:netrw_decompress}| 参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Remember that one can mark multiple files by regular expression
(see |netrw-mr|); this is particularly useful to facilitate compressing and
decompressing a large number of files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
正規表現で複数ファイルをマークできることを思い出してください (|@ref{netrw-mr}| 参照)。これはたくさんのファイルを圧縮・解凍するのに便利です。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Associated setting variables: |g:netrw_compress| |g:netrw_decompress|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連設定: |@ref{g:netrw_compress}| |@ref{g:netrw_decompress}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
MARKED FILES: COPYING						*netrw-mc* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mc}
@kindex netrw-mc
@unnumberedsubsec マークファイル: コピー
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (Uses the global marked file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(グローバルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Select a target directory with mt (|netrw-mt|).  Then change directory,
select file(s) (see |netrw-mf|), and press "mc".  The copy is done
from the current window (where one does the mf) to the target.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
mt (|@ref{netrw-mt}|) でコピー先ディレクトリを選択し、ファイルのあるディレクトリに移動し、mf (|@ref{netrw-mf}|) でファイルを選択し、"mc" を押します。カレントウィンドウ (mf を実行した場所) からターゲットディレクトリへ、ファイルがコピーされます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If one does not have a target directory set with |netrw-mt|, then netrw
will query you for a directory to copy to.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
もし |@ref{netrw-mt}| でセットした移動先ディレクトリがない場合、netrw はコピーするディレクトリを尋ねます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may also copy directories and their contents (local only) to a target
directory.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
また、ディレクトリとその内容 (ローカルに限ります) を移動先ディレクトリにコピーすることもできます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Associated setting variables:
	|g:netrw_localcopycmd|		|g:netrw_localcopycmdopt|
	|g:netrw_localcopydircmd|	|g:netrw_localcopydircmdopt|
	|g:netrw_ssh_cmd|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連設定: |@ref{g:netrw_localcopycmd}| |@ref{g:netrw_localcopycmdopt}| |@ref{g:netrw_localcopydircmd}| |@ref{g:netrw_localcopydircmdopt}| |@ref{g:netrw_ssh_cmd}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
MARKED FILES: DIFF						*netrw-md* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-md}
@kindex netrw-md
@unnumberedsubsec マークファイル: DIFF
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (uses the global marked file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(グローバルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Use |vimdiff| to visualize difference between selected files (two or
three may be selected for this).  Uses the global marked file list.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{vimdiff}| を使って選択したファイルの違いを表示します (選択できるファイルは 2 つか 3 つです)。グローバルマークファイルリストが使われます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
MARKED FILES: EDITING						*netrw-me* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-me}
@kindex netrw-me
@unnumberedsubsec マークファイル: 編集
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (uses the global marked file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(グローバルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The "me" command will place the marked files on the |arglist| and commence
editing them.  One may return the to explorer window with |:Rexplore|.
(use |:n| and |:p| to edit next and previous files in the arglist)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
この "me" コマンドはマークされたファイルを |@ref{arglist}| に設定し、編集を開始します。|@ref{:Rexplore}| でエクスプローラーウィンドウに戻ることができます。(引数リスト内の次のファイル、前のファイルを開くには |@ref{:n}| と |@ref{:p}| を使う)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
MARKED FILES: GREP						*netrw-mg* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mg}
@kindex netrw-mg
@unnumberedsubsec マークファイル: GREP
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (uses the global marked file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(グローバルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The "mg" command will apply |:vimgrep| to the marked files.
The command will ask for the requested pattern; one may then enter: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"mg" コマンドはマークされたファイルに対して |@ref{:vimgrep}| を適用します。検索パターンを入力するためのプロンプトが表示されます。次の形式で入力してください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	/pattern/[g][j]
	! /pattern/[g][j]
	pattern
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
/pattern/[g][j]
! /pattern/[g][j]
pattern
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
With /pattern/, editing will start with the first item on the |quickfix| list
that vimgrep sets up (see |:copen|, |:cnext|, |:cprevious|, |:cclose|).  The |:vimgrep|
command is in use, so without 'g' each line is added to quickfix list only
once; with 'g' every match is included.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
/pattern/ で vimgrep によりセットされた |@ref{quickfix}| リストの最初の項目が開かれます (|@ref{:copen}|, |@ref{:cnext}|, |@ref{:cprevious}|, |@ref{:cclose}| 参照)。'g' なしの場合、マッチしたすべての行が一度だけ追加されます。'g' ありの場合、すべてのマッチが追加されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
With /pattern/j, "mg" will winnow the current marked file list to just those
marked files also possessing the specified pattern.  Thus, one may use >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
/pattern/j により "mg" はマークされたファイルから指定されたパターンを持つもののみに選別します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	mr ...file-pattern...
	mg /pattern/j
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
mr ...file-pattern...
mg /pattern/j
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
to have a marked file list satisfying the file-pattern but also restricted to
files containing some desired pattern.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
上記のコマンドは file-pattern にマッチし、また pattern を持つものに限られます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MARKED FILES: HIDING AND UNHIDING BY SUFFIX			*netrw-mh* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mh}
@kindex netrw-mh
@unnumberedsubsec マークファイル: 拡張子による表示/非表示
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (uses the local marked file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(ローカルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The "mh" command extracts the suffices of the marked files and toggles their
presence on the hiding list.  Please note that marking the same suffix
this way multiple times will result in the suffix's presence being toggled
for each file (so an even quantity of marked files having the same suffix
is the same as not having bothered to select them at all).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
この "mh" コマンドは、マークされたファイルの拡張子を隠しリストに追加、または削除します。同じ拡張子のファイルが複数選択されていた場合はファイルの数だけ追加と削除が繰り返されることに注意してくだだい (つまり、同じ拡張子のファイルが偶数個選択されている場合はそれを選択しなかったのと同じ)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics: |netrw-a| |g:netrw_list_hide|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目: |@ref{netrw-a}| |@ref{g:netrw_list_hide}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
MARKED FILES: MOVING						*netrw-mm* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mm}
@kindex netrw-mm
@unnumberedsubsec マークファイル: 移動
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (uses the global marked file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(グローバルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	WARNING: moving files is more dangerous than copying them.
	A file being moved is first copied and then deleted; if the
	copy operation fails and the delete succeeds, you will lose
	the file.  Either try things out with unimportant files
	first or do the copy and then delete yourself using mc and D.
	Use at your own risk!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@quotation
@strong{警告:} @*
ファイルの移動はコピーと比べて危険です。ファイルの移動時は、まずコピーされ、それから削除されます。コピーが失敗して削除が成功するとファイルが失われます。実際に操作する前に適当なファイルで試してみるか、あるいは、mc と D を使って自分でコピーと削除を実行してください。自己責任で使ってください。
@end quotation
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Select a target directory with mt (|netrw-mt|).  Then change directory,
select file(s) (see |netrw-mf|), and press "mm".  The move is done
from the current window (where one does the mf) to the target.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
mt (|@ref{netrw-mt}|) で移動先ディレクトリを選択し、ファイルのあるディレクトリに移動し、mf (|@ref{netrw-mf}|) でファイルを選択し、"mm" を押します。カレントウィンドウ (mf を実行した場所) からターゲットディレクトリへ、ファイルが移動されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Associated setting variable: |g:netrw_localmovecmd| |g:netrw_ssh_cmd|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連設定: |@ref{g:netrw_localmovecmd}| |@ref{g:netrw_ssh_cmd}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
MARKED FILES: PRINTING						*netrw-mp* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mp}
@kindex netrw-mp
@unnumberedsubsec マークファイル: 印刷
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (uses the local marked file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(ローカルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
When "mp" is used, netrw will apply the |:hardcopy| command to marked files.
What netrw does is open each file in a one-line window, execute hardcopy, then
close the one-line window.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"mp" コマンドが使われると netrw はマークされたファイルに対して |@ref{:hardcopy}| コマンドを実行します。具体的には、それぞれのファイルを一行のウィンドウで開いて、hardcopy を実行し、一行ウィンドウを閉じます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MARKED FILES: SOURCING						*netrw-ms* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-ms}
@kindex netrw-ms
@unnumberedsubsec マークファイル: スクリプト実行
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (uses the local marked file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(ローカルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
With "ms", netrw will source the marked files (using vim's |:source| command)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"ms" を使うと netrw はマークされたファイルをスクリプト実行します (Vim の |@ref{:source}| コマンド使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MARKED FILES: SETTING THE TARGET DIRECTORY			*netrw-mt* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mt}
@kindex netrw-mt
@unnumberedsubsec マークファイル: ターゲットディレクトリを設定する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
     (See |netrw-mf| and |netrw-mr| for how to mark files)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Set the marked file copy/move-to target (see |netrw-mc| and |netrw-mm|):
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ファイルコピー/移動のターゲットを設定する (|@ref{netrw-mc}| と |@ref{netrw-mm}| 参照):
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  * If the cursor is atop a file name, then the netrw window's currently
    displayed directory is used for the copy/move-to target.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item カーソルがファイルの上にある場合、netrw ウィンドウに表示されているディレクトリがターゲットとして設定されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  * Also, if the cursor is in the banner, then the netrw window's currently
    displayed directory is used for the copy/move-to target.
    Unless the target already is the current directory.  In which case,
    typing "mf" clears the target.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item カーソルがバナーの上にある場合も、netrw ウィンドウに表示されているディレクトリがターゲットとして設定されます。

ターゲットがカレントディレクトリではない場合、"mf" と入力するとターゲットを解除します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  * However, if the cursor is atop a directory name, then that directory is
    used for the copy/move-to target
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item カーソルがディレクトリの上にある場合は、そのディレクトリがターゲットとして設定されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  * One may use the :MT [directory] command to set the target	*netrw-:MT*
    This command uses |<q-args>|, so spaces in the directory name are
    permitted without escaping.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-:MT}
@pindex netrw-:MT
@item @command{:MT [directory]} コマンドでターゲットを設定できます。このコマンドは |@ref{<q-args>}| を使うので、ディレクトリ名のスペースはエスケープしなくても構いません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  * With mouse-enabled vim or with gvim, one may select a target by using
    <c-leftmouse>
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item マウスが有効化された vim か gvim では、ターゲットを <c-leftmouse> によって選択できます。
@end itemize 
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
There is only one copy/move-to target at a time in a vim session; ie. the
target is a script variable (see |s:var|) and is shared between all netrw
windows (in an instance of vim).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ターゲットは Vim セッションで 1 つしか設定できません。ターゲットはスクリプト変数 (|@ref{s:var}| 参照) で管理されており、(Vim のインスタンスごとの) すべての netrw ウィンドウで共有されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
When using menus and gvim, netrw provides a "Targets" entry which allows one
to pick a target from the list of bookmarks and history.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
gvim でメニューを使っているなら、"Targets" エントリにブックマークと履歴が一覧されるので、そこからターゲットを選択できます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics:
      Marking Files......................................|netrw-mf|
      Marking Files by Regular Expression................|netrw-mr|
      Marked Files: Target Directory Using Bookmarks.....|netrw-Tb|
      Marked Files: Target Directory Using History.......|netrw-Th|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目:
@multitable @columnfractions .7 .3
@item ファイルをマークする @tab |@ref{netrw-mf}|
@item 正規表現を使ってファイルをマークする @tab |@ref{netrw-mr}|
@item マークファイル: ブックマークを使ったターゲットディレクトリ @tab |@ref{netrw-Tb}|
@item マークファイル: 履歴を使ったターゲットディレクトリ @tab |@ref{netrw-Th}|
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MARKED FILES: TAGGING						*netrw-mT* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mT}
@kindex netrw-mT
@unnumberedsubsec マークファイル: タグ生成
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	    (See |netrw-mf| and |netrw-mr| for how to mark files)
		      (uses the global marked file list)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(マークの設定方法は |@ref{netrw-mf}| と |@ref{netrw-mr}| を参照) @*
(ローカルマークファイルリスト使用)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The "mT" mapping will apply the command in |g:netrw_ctags| (by default, it is
"ctags") to marked files.  For remote browsing, in order to create a tags file
netrw will use ssh (see |g:netrw_ssh_cmd|), and so ssh must be available for
this to work on remote systems.  For your local system, see |ctags| on how to
get a version.  I myself use hdrtags, currently available at
http://www.drchip.org/astronaut/src/index.html , and have >

	let g:netrw_ctags= "hdrtag"
<
in my <.vimrc>.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"mT" マップはマークされたファイルに対して |@ref{g:netrw_ctags}| で指定されたコマンドを実行します (初期設定は "ctags")。リモートブラウジングでは、タグファイルを生成するために ssh が使われます (|@ref{g:netrw_ssh_cmd}| 参照)。

したがって、リモートシステムの ssh でコマンドが使えなければなりません。ローカルで使う場合は、|@ref{ctags}| を参照して ctags を準備してください。私は個人的に hdrtags を使っています。

hdrtags は @url{http://www.drchip.org/astronaut/src/index.html} から入手できます。これを使う場合は <@file{.vimrc}> で次のように設定してください:
@example
let g:netrw_ctags= "hdrtag"
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
When a remote set of files are tagged, the resulting tags file is "obtained";
ie. a copy is transferred to the local system's directory.  The now local tags
file is then modified so that one may use it through the network.  The
modification made concerns the names of the files in the tags; each filename is
preceded by the netrw-compatible URL used to obtain it.  When one subsequently
uses one of the go to tag actions (|tags|), the URL will be used by netrw to
edit the desired file and go to the tag.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
リモートでタグファイルを生成した場合、タグファイルが "取得" されます。つまり、ローカルシステムにファイルがコピーされます。そして、ネットワーク越しのファイルにアクセスできるように、タグファイルが変更されます。

変更されるのはタグファイル内のファイル名で、それぞれのファイル名の前に netrw で扱える形の url が挿入されます (url は元のタグファイルの場所に基づく)。タグ操作 (|@ref{tags}|) を実行すると、netrw によって url が開かれ、タグに移動できます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Associated setting variables: |g:netrw_ctags| |g:netrw_ssh_cmd|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連設定: |@ref{g:netrw_ctags}| |@ref{g:netrw_ssh_cmd}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
MARKED FILES: TARGET DIRECTORY USING BOOKMARKS		*netrw-Tb* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-Tb}
@kindex netrw-Tb
@unnumberedsubsec マークファイル: ブックマークを使ったターゲットディレクトリ
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Sets the marked file copy/move-to target.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ファイルコピー/移動のターゲットを設定する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The |netrw-qb| map will give you a list of bookmarks (and history).
One may choose one of the bookmarks to become your marked file
target by using [count]Tb (default count: 1).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{netrw-qb}| マップはブックマーク (と履歴) の一覧を表示します。[count]Tb (count のデフォルトは 1) を使って、ブックマークからマークファイルターゲットを選択できます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics:
      Copying files to target............................|netrw-mc|
      Listing Bookmarks and History......................|netrw-qb|
      Marked Files: Setting The Target Directory.........|netrw-mt|
      Marked Files: Target Directory Using History.......|netrw-Th|
      Marking Files......................................|netrw-mf|
      Marking Files by Regular Expression................|netrw-mr|
      Moving files to target.............................|netrw-mm|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目:
@multitable @columnfractions .7 .3
@item ファイルをターゲットにコピーする @tab |@ref{netrw-mc}|
@item ブックマークと履歴を一覧表示する @tab |@ref{netrw-qb}|
@item マークファイル: ターゲットディレクトリを設定する @tab |@ref{netrw-mt}|
@item マークファイル: 履歴を使ったターゲットディレクトリ @tab |@ref{netrw-Th}|
@item ファイルをマークする @tab |@ref{netrw-mf}|
@item ファイルのマークを外す @tab |@ref{netrw-mr}|
@item ファイルをターゲットに移動する @tab |@ref{netrw-mm}|
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MARKED FILES: TARGET DIRECTORY USING HISTORY			*netrw-Th* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-Th}
@kindex netrw-Th
@unnumberedsubsec マークファイル: 履歴を使ったターゲットディレクトリ
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Sets the marked file copy/move-to target.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ファイルコピー/移動のターゲットを設定する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The |netrw-qb| map will give you a list of history (and bookmarks).
One may choose one of the history entries to become your marked file
target by using [count]Th (default count: 0; ie. the current directory).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{netrw-qb}| マップは履歴 (とブックマーク) の一覧を表示します。[count]Th (count のデフォルトは 0。つまりカレントディレクトリ) を使って、履歴からマークファイルターゲットを選択できます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics:
      Copying files to target............................|netrw-mc|
      Listing Bookmarks and History......................|netrw-qb|
      Marked Files: Setting The Target Directory.........|netrw-mt|
      Marked Files: Target Directory Using Bookmarks.....|netrw-Tb|
      Marking Files......................................|netrw-mf|
      Marking Files by Regular Expression................|netrw-mr|
      Moving files to target.............................|netrw-mm|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目:
@multitable @columnfractions .7 .3
@item ファイルをターゲットにコピーする @tab |@ref{netrw-mc}|
@item ブックマークと履歴を一覧表示する @tab |@ref{netrw-qb}|
@item マークファイル: ターゲットディレクトリを設定する @tab |@ref{netrw-mt}|
@item マークファイル: ブックマークを使ったターゲットディレクトリ @tab |@ref{netrw-Tb}|
@item ファイルをマークする @tab |@ref{netrw-mf}|
@item ファイルのマークを外す @tab |@ref{netrw-mr}|
@item ファイルをターゲットに移動する @tab |@ref{netrw-mm}|
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
MARKED FILES: UNMARKING						*netrw-mu* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-mu}
@kindex netrw-mu
@unnumberedsubsec マークファイル: マーク解除
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
     (See |netrw-mf|, |netrw-mF|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(|@ref{netrw-mf}| と |@ref{netrw-mr}| を参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The "mu" mapping will unmark all currently marked files.  This command differs
from "mF" as the latter only unmarks files in the current directory whereas
"mu" will unmark global and all buffer-local marked files.
(see |netrw-mF|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"mu" マップを使うと現在設定されているすべてのマークが解除されます。このコマンドは "mF" とは異なります。"mu" はすべてのグローバルマークファイルリストとバッファローカルマークファイルリストを解除するのに対し、"mF" はカレントディレクトリのファイルの選択のみを解除します (|@ref{netrw-mF}| 参照)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
				*netrw-browser-settings*
NETRW BROWSER VARIABLES		*netrw-browser-options* *netrw-browser-var* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-browser-settings}
@anchor{netrw-browser-options}
@anchor{netrw-browser-var}
@cindex netrw-browser-settings
@cindex netrw-browser-options
@cindex netrw-browser-var
@unnumberedsubsec NETRW ブラウザー変数
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
(if you're interested in the netrw file transfer settings, see |netrw-options|
 and |netrw-protocol|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(ファイル転送の設定については |@ref{netrw-options}| と |@ref{netrw-protocol}| を参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The <netrw.vim> browser provides settings in the form of variables which
you may modify; by placing these settings in your <.vimrc>, you may customize
your browsing preferences.  (see also: |netrw-settings|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
netrw ブラウザーの各種設定は変数で管理されていて、それを変更することができます。<@file{.vimrc}> などで変数を設定することでブラウザーの動作をカスタマイズできます。(|@ref{netrw-settings}| も参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
>
   ---				-----------
   Var				Explanation
   ---				-----------
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@item 変数
説明
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
<  *g:netrw_altfile*		some like |CTRL-^| to return to the last
				edited file.  Choose that by setting this
				parameter to 1.
				Others like |CTRL-^| to return to the
				netrw browsing buffer.  Choose that by setting
				this parameter to 0.
				 default: =0
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_altfile}
@vindex g:netrw_altfile
@item g:netrw_altfile
|@ref{CTRL-^}| で最後に編集したファイルに戻りたいときは 1 を設定する。

|@ref{CTRL-^}| で netrw ブラウザーに戻りたいときは 0 を設定する。

初期設定: =0
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_alto*		change from above splitting to below splitting
				by setting this variable (see |netrw-o|)
				 default: =&sb           (see |'sb'|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_alto}
@vindex g:netrw_alto
@item g:netrw_alto
分割ウィンドウを (上ではなく) 下に開くようにする (|@ref{netrw-o}| 参照)

初期設定: =&sb (|@ref{'sb'}| 参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_altv*		change from left splitting to right splitting
				by setting this variable (see |netrw-v|)
				 default: =&spr          (see |'spr'|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_altv}
@vindex g:netrw_altv
@item g:netrw_altv
分割ウィンドウを (左ではなく) 右に開くようにする (|@ref{netrw-v}| 参照)

初期設定: =&spr (|@ref{'spr'}| 参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_banner*		enable/suppress the banner
				=0: suppress the banner
				=1: banner is enabled (default)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_banner}
@vindex g:netrw_banner
@item g:netrw_banner
バナーの表示を切り替える

=0: バナーを表示しない @*
=1: バナーを表示する (初期設定)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_bannerbackslash*	if this variable exists and is not zero, the
				banner will be displayed with backslashes
				rather than forward slashes.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_bannerbackslash}
@vindex g:netrw_bannerbackslash
@item g:netrw_bannerbackslash
この変数が存在し、ゼロ以外なら、バナーの表示に (スラッシュではなく) バックスラッシュが使われる。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_browse_split*	when browsing, <cr> will open the file by:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_browse_split}
@vindex g:netrw_browse_split
@item g:netrw_browse_split
ブラウザーで @key{<CR>} を押してファイルを開くとき:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
				=0: re-using the same window  (default)
				=1: horizontally splitting the window first
				=2: vertically   splitting the window first
				=3: open file in new tab
				=4: act like "P" (ie. open previous window)
				    Note that |g:netrw_preview| may be used
				    to get vertical splitting instead of
				    horizontal splitting.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

=0: 同じウィンドウを使う (デフォルト) @*
=1: ウィンドウを水平分割する @*
=2: ウィンドウを垂直分割する @*
=3: 新しいタブで開く @*
=4: "P" で開く (以前のウィンドウで開く)
@quotation
@strong{Note:} @*
|@ref{g:netrw_preview}| を使うと (水平分割から変更して) 垂直分割にできます。
@end quotation
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
				=[servername,tab-number,window-number]
				    Given a |List| such as this, a remote server
				    named by the "servername" will be used for
				    editing.  It will also use the specified tab
				    and window numbers to perform editing
				    (see |clientserver|, |netrw-ctrl-r|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
=[サーバー名,タブ番号,ウィンドウ番号]

このような |@ref{List}| を指定すると、"サーバー名" で指定したリモートサーバーは編集に使われます。また、指定されたタブとウィンドウも使われます (|@ref{clientserver}|, |@ref{netrw-ctrl-r}| 参照)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
				This option does not affect the production of
				|:Lexplore| windows.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

このオプションは |@ref{:Lexplore}| のウィンドウには影響を与えません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
				Related topics:
				    |g:netrw_alto|	|g:netrw_altv|
				    |netrw-C|		|netrw-cr|
				    |netrw-ctrl-r|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目: |@ref{g:netrw_alto}| |@ref{g:netrw_altv}| |@ref{netrw-C}| |@ref{netrw-cr}| |@ref{netrw-ctrl-r}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_browsex_viewer*	specify user's preference for a viewer: >
					"kfmclient exec"
					"gnome-open"
<				If >
					"-"
<				is used, then netrwFileHandler() will look for
				a script/function to handle the given
				extension.  (see |netrw_filehandler|).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_browsex_viewer}
@vindex g:netrw_browsex_viewer
@item g:netrw_browsex_viewer
ユーザー指定のビューア:
@example
"kfmclient exec"
"gnome-open"
@end example
値が "-" なら、netrwFileHandler() によってファイルを処理するスクリプト/関数が呼ばれます。(|@ref{netrw_filehandler}| 参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_chgperm*		Unix/Linux: "chmod PERM FILENAME"
				Windows:    "cacls FILENAME /e /p PERM"
				Used to change access permission for a file.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_chgperm}
@vindex g:netrw_chgperm
@item g:netrw_chgperm
Unix/Linux: "chmod PERM FILENAME" @*
Windows:    "cacls FILENAME /e /p PERM"

ファイルのアクセス権限を変更するのに使われます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_compress*		="gzip"
				    Will compress marked files with this
				    command
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_compress}
@vindex g:netrw_compress
@item g:netrw_compress
="gzip"

ファイル圧縮コマンド
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:Netrw_corehandler*		Allows one to specify something additional
				to do when handling <core> files via netrw's
				browser's "x" command (see |netrw-x|).  If
				present, g:Netrw_corehandler specifies
				either one or more function references
				(see |Funcref|).  (the capital g:Netrw...
				is required its holding a function reference)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:Netrw_corehandler}
@vindex g:Netrw_corehandler
@item g:Netrw_corehandler
netrw ブラウザーの "x" コマンド (|@ref{netrw-x}| 参照) で <core> ファイルを処理するときの追加処理を設定できます。g:Netrw_corehandler には 1 つ、または複数の関数参照 (|@ref{Funcref}|) を指定できます。(g:Netrw... で大文字が使われていますが、これは関数参照を保存するために必要です)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
  *g:netrw_ctags*		="ctags"
				The default external program used to create
				tags
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_ctags}
@vindex g:netrw_ctags
@item g:netrw_ctags
="ctags"

タグを作成するための外部コマンド
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_cursor*		= 2 (default)
				This option controls the use of the
				|'cursorline'| (cul) and |'cursorcolumn'|
				(cuc) settings by netrw:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_cursor}
@vindex g:netrw_cursor
@item g:netrw_cursor
= 2 (初期設定)

|@ref{'cursorline'}| (cul) と |@ref{'cursorcolumn'}| (cuc) を使用するかどうかをコントロールする:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
				Value   Thin-Long-Tree      Wide
				 =0      u-cul u-cuc      u-cul u-cuc
				 =1      u-cul u-cuc        cul u-cuc
				 =2        cul u-cuc        cul u-cuc
				 =3        cul u-cuc        cul   cuc
				 =4        cul   cuc        cul   cuc
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .3 .4 .3
@headitem Value @tab Thin-Long-Tree @tab Wide
@item =0 @tab u-cul u-cuc @tab u-cul u-cuc
@item =1 @tab u-cul u-cuc @tab cul u-cuc
@item =2 @tab cul u-cuc @tab cul u-cuc
@item =3 @tab cul u-cuc @tab cul cuc
@item =4 @tab cul cuc @tab cul cuc
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
				Where
				  u-cul : user's |'cursorline'|   setting used
				  u-cuc : user's |'cursorcolumn'| setting used
				  cul   : |'cursorline'|  locally set
				  cuc   : |'cursorcolumn'| locally set
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
記号の意味
@multitable @columnfractions .2 .8
@item u-cul @tab |@ref{'cursorline'}| のユーザー設定使用
@item u-cuc @tab |@ref{'cursorcolumn'}| のユーザー設定使用
@item cul @tab |@ref{'cursorline'}| をローカル設定する
@item cuc @tab |@ref{'cursorcolumn'}| をローカル設定する
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_decompress*		= { ".gz"  : "gunzip" ,
				    ".bz2" : "bunzip2" ,
				    ".zip" : "unzip" ,
				    ".tar" : "tar -xf"}
				  A dictionary mapping suffices to
				  decompression programs.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_decompress}
@vindex g:netrw_decompress
@item g:netrw_decompress
= @{".gz": "gunzip", ".bz2": "bunzip2", ".zip": "unzip", ".tar": "tar -xf"@}

拡張子と伸長プログラムを関連付ける辞書
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_dirhistmax*            =10: controls maximum quantity of past
                                     history.  May be zero to supppress
				     history.
				     (related: |netrw-qb| |netrw-u| |netrw-U|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_dirhistmax}
@vindex g:netrw_dirhistmax
@item g:netrw_dirhistmax
=10: 履歴の最大数を設定する。履歴を使用しない場合はゼロを設定する。

(関連: |@ref{netrw-qb}| |@ref{netrw-u}| |@ref{netrw-U}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_dynamic_maxfilenamelen* =32: enables dynamic determination of
				    |g:netrw_maxfilenamelen|, which affects
				    local file long listing.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_dynamic_maxfilenamelen}
@vindex g:netrw_dynamic_maxfilenamelen
@item g:netrw_dynamic_maxfilenamelen
=32: |@ref{g:netrw_maxfilenamelen}| (ローカルファイルの long 一覧表示で使用される) の動的判定を有効にする。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_errorlvl*		=0: error levels greater than or equal to
				    this are permitted to be displayed
				    0: notes
				    1: warnings
				    2: errors
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_errorlvl}
@vindex g:netrw_errorlvl
@item g:netrw_errorlvl
=0: この値以上のエラーレベルであれば表示が許可される。

0: 注意 @*
1: 警告 @*
2: エラー
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_fastbrowse*		=0: slow speed directory browsing;
				    never re-uses directory listings;
				    always obtains directory listings.
				=1: medium speed directory browsing;
				    re-use directory listings only
				    when remote directory browsing.
				    (default value)
				=2: fast directory browsing;
				    only obtains directory listings when the
				    directory hasn't been seen before
				    (or |netrw-ctrl-l| is used).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_fastbrowse}
@vindex g:netrw_fastbrowse
@item g:netrw_fastbrowse
=0: 低速ディレクトリブラウジング、ファイル一覧を再利用しない、常にファイル一覧取得を行う @*
=1: 中速ディレクトリブラウジング、リモートディレクトリのみファイル一覧を再利用する。(初期設定) @*
=2: 高速ディレクトリブラウジング、未取得のディレクトリ (または |@ref{netrw-ctrl-l}| が使われたとき) のみファイル一覧を取得する。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
				Fast browsing retains old directory listing
				buffers so that they don't need to be
				re-acquired.  This feature is especially
				important for remote browsing.  However, if
				a file is introduced or deleted into or from
				such directories, the old directory buffer
				becomes out-of-date.  One may always refresh
				such a directory listing with |netrw-ctrl-l|.
				This option gives the user the choice of
				trading off accuracy (ie. up-to-date listing)
				versus speed.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
高速ブラウジングは古いファイル一覧バッファを保持し、再取得処理を実行しません。これは特にリモートブラウジングで重要になります。ファイルが作成/削除されるとファイル一覧バッファは不正確な情報になります。

|@ref{netrw-ctrl-l}| を使うことでファイル一覧を更新できます。この設定によって正確さ (常に最新) とスピードのトレードオフを選択できます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_ffkeep*		(default: doesn't exist)
				If this variable exists and is zero, then
				netrw will not do a save and restore for
				|'fileformat'|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_ffkeep}
@vindex g:netrw_ffkeep
@item g:netrw_ffkeep
(初期設定: 変数なし)

この変数が存在して値がゼロなら、netrw は |@ref{'fileformat'}| を保存、復元しない。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_fname_escape*	=' ?&;%'
				Used on filenames before remote reading/writing
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_fname_escape}
@vindex g:netrw_fname_escape
@item g:netrw_fname_escape
=' ?&;%'

リモートで読み/書きするときにファイル名をエスケープするのに使われる。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_ftp_browse_reject*	ftp can produce a number of errors and warnings
				that can show up as "directories" and "files"
				in the listing.  This pattern is used to
				remove such embedded messages.  By default its
				value is:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_ftp_browse_reject}
@vindex g:netrw_ftp_browse_reject
@item g:netrw_ftp_browse_reject
ftp がエラーや警告を出力すると、それがファイルやディレクトリとして一覧に表示されてしまいます。この変数に設定したパターンを使ってそれらのメッセージが取り除かれます。初期設定は以下のとおり:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
				 '^total\s\+\d\+$\|
				 ^Trying\s\+\d\+.*$\|
				 ^KERBEROS_V\d rejected\|
				 ^Security extensions not\|
				 No such file\|
				 : connect to address [0-9a-fA-F:]*
				 : No route to host$'
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
'^total\s\+\d\+$\|
^Trying\s\+\d\+.*$\|
^KERBEROS_V\d rejected\|
^Security extensions not\|
No such file\|
: connect to address [0-9a-fA-F:]*
: No route to host$'
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_ftp_list_cmd*	options for passing along to ftp for directory
				listing.  Defaults:
				 unix or g:netrw_cygwin set: : "ls -lF"
				 otherwise                     "dir"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_ftp_list_cmd}
@vindex g:netrw_ftp_list_cmd
@item g:netrw_ftp_list_cmd
ftp に渡されるファイル一覧取得コマンド。

初期設定: @*
unix または g:netrw_cygwin の場合: "ls -lF" @*
そうでない場合: "dir"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
  *g:netrw_ftp_sizelist_cmd*	options for passing along to ftp for directory
				listing, sorted by size of file.
				Defaults:
				 unix or g:netrw_cygwin set: : "ls -slF"
				 otherwise                     "dir"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_ftp_sizelist_cmd}
@vindex g:netrw_ftp_sizelist_cmd
@item g:netrw_ftp_sizelist_cmd
ftp に渡されるファイル一覧取得コマンド。ファイルサイズでソートする。

初期設定: @*
unix または g:netrw_cygwin の場合: "ls -slF" @*
そうでない場合: "dir"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_ftp_timelist_cmd*	options for passing along to ftp for directory
				listing, sorted by time of last modification.
				Defaults:
				 unix or g:netrw_cygwin set: : "ls -tlF"
				 otherwise                     "dir"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_ftp_timelist_cmd}
@vindex g:netrw_ftp_timelist_cmd
@item g:netrw_ftp_timelist_cmd
ftp に渡されるファイル一覧取得コマンド。最終更新日時でソートする。

初期設定: @*
unix または g:netrw_cygwin の場合: "ls -tlF" @*
そうでない場合: "dir"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_glob_escape*		='[]*?`{~$'  (unix)
				='[]*?`{$'  (windows
				These characters in directory names are
				escaped before applying glob()
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_glob_escape}
@vindex g:netrw_glob_escape
@item g:netrw_glob_escape
='[]*?`@{~$' (unix) @*
='[]*?`@{$'  (windows @*

設定された文字がディレクトリ名に使われていたら glob() を適用する前にエスケープされる。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_gx*			="<cfile>"
 				This option controls how gx (|netrw-gx|) picks
				up the text under the cursor.  See |expand()|
				for possibilities.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_gx}
@vindex g:netrw_gx
@item g:netrw_gx
="<cfile>"

このオプションは gx (|@ref{netrw-gx}|) がどのようにカーソル位置のテキストを取得するかを制御します。可能な引数については |@ref{expand()}| を参照してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_hide*		Controlled by the "a" map (see |netrw-a|)
				=0 : show all
				=1 : show not-hidden files
				=2 : show hidden files only
				 default: =0
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_hide}
@vindex g:netrw_hide
@item g:netrw_hide
"a" マップを制御する (|@ref{netrw-a}| 参照)

=0 : すべて表示 @*
=1 : 非隠しファイルを表示 @*
=2 : 隠しファイルのみ表示 @*
初期設定: =0
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_home*		The home directory for where bookmarks and
				history are saved (as .netrwbook and
				.netrwhist).
				Netrw uses |expand()|on the string.
				 default: the first directory on the
				         |'runtimepath'|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_home}
@vindex g:netrw_home
@item g:netrw_home
ブックマークと履歴 (@file{.netrwbook} と @file{.netrwhist}) を保存するホームディレクトリ。

Netrw は文字列上の |@ref{expand()}| を使う。

初期設定: |@ref{'runtimepath'}| の最初のディレクトリ
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_keepdir*		=1 (default) keep current directory immune from
				   the browsing directory.
				=0 keep the current directory the same as the
				   browsing directory.
				The current browsing directory is contained in
				b:netrw_curdir (also see |netrw-c|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_keepdir}
@vindex g:netrw_keepdir
@item g:netrw_keepdir
=1 (初期設定) カレントディレクトリとブラウジングディレクトリを別にする @*
=0 カレントディレクトリとブラウジングディレクトリを同じにする。

現在のブラウジングディレクトリは b:netrw_curdir に保存されます。 (|@ref{netrw-c}| 参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_keepj*		="keepj" (default) netrw attempts to keep the
				         |:jumps| table unaffected.
				=""      netrw will not use |:keepjumps| with
					 exceptions only for the
					 saving/restoration of position.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_keepj}
@vindex g:netrw_keepj
@item g:netrw_keepj
="keepj" (デフォルト) netrw は |@ref{:jumps}| のエントリを保つよう試みます。 @*
="" netrw は保存/位置の復元以外に |@ref{:keepjumps}| を使わなくなります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_list_cmd*		command for listing remote directories
				 default: (if ssh is executable)
				          "ssh HOSTNAME ls -FLa"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_list_cmd}
@vindex g:netrw_list_cmd
@item g:netrw_list_cmd
リモートディレクトリのファイル一覧取得コマンド

初期設定: (sshがあるなら) "ssh HOSTNAME ls -FLa"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_list_cmd_options*	If this variable exists, then its contents are
				appended to the g:netrw_list_cmd.  For
				example, use "2>/dev/null" to get rid of banner
				messages on unix systems.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_list_cmd_options}
@vindex g:netrw_list_cmd_options
@item g:netrw_list_cmd_options
もしこの変数が存在するなら、値は g:netrw_list_cmd に追加されます。例えば、"2>/dev/null" はバナー用のメッセージを除去します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
  *g:netrw_liststyle*		Set the default listing style:
                                = 0: thin listing (one file per line)
                                = 1: long listing (one file per line with time
				     stamp information and file size)
				= 2: wide listing (multiple files in columns)
				= 3: tree style listing
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_liststyle}
@vindex g:netrw_liststyle
@item g:netrw_liststyle
デフォルトのファイル一覧表示スタイル:

= 0: thin listing (一行に 1 つのファイル) @*
= 1: long listing (一行に 1 つのファイル、タイムスタンプ、ファイルサイズ) @*
= 2: wide listing (一行に複数のファイル) @*
= 3: tree style listing (ツリー表示)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_list_hide*		comma separated pattern list for hiding files
				Patterns are regular expressions (see |regexp|)
				There's some special support for git-ignore
				files: you may add the output from the helper
				function 'netrw_gitignore#Hide() automatically
				hiding all gitignored files.
				For more details see |netrw-gitignore|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_list_hide}
@vindex g:netrw_list_hide
@item g:netrw_list_hide
隠しファイル用のパターンのリスト (コンマ区切り) パターンは正規表現です (|@ref{regexp}| 参照)

git の隠しファイル用に特別な関数が用意されています。この変数に 'netrw_gitignore#Hide()' ヘルパ関数の戻り値を追加することで、git の隠しファイルを自動的に隠すことができます。詳細は |@ref{netrw-gitignore}| 参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
				Examples:
				 let g:netrw_list_hide= '.*\.swp$'
				 let g:netrw_list_hide= netrw_gitignore#Hide().'.*\.swp$'
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
例:
@example
let g:netrw_list_hide= '.*\.swp$'
let g:netrw_list_hide= netrw_gitignore#Hide().'.*\.swp$'
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
				default: ""
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
初期設定: ""
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_localcopycmd*	="cp"           Linux/Unix/MacOS/Cygwin
				=expand("$COMSPEC")             Windows
				Copies marked files (|netrw-mf|) to target
				directory (|netrw-mt|, |netrw-mc|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_localcopycmd}
@vindex g:netrw_localcopycmd
@item g:netrw_localcopycmd
="cp" Linux/Unix/MacOS/Cygwin @*
=expand("$COMSPEC") Windows

マークされたファイル (|@ref{netrw-mf}|) をターゲットディレクトリにコピー (|@ref{netrw-mt}|, |@ref{netrw-mc}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_localcopycmdopt*	=''             Linux/Unix/MacOS/Cygwin
  				=' \c copy'                     Windows
				Options for the |g:netrw_localcopycmd|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_localcopycmdopt}
@vindex g:netrw_localcopycmdopt
@item g:netrw_localcopycmdopt
='' Linux/Unix/MacOS/Cygwin @*
=' \c copy' Windows

|@ref{g:netrw_localcopycmd}| 用のオプション
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_localcopydircmd*	="cp"           Linux/Unix/MacOS/Cygwin
 				=expand("$COMSPEC")             Windows
				Copies directories to target directory.
				(|netrw-mc|, |netrw-mt|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_localcopydircmd}
@vindex g:netrw_localcopydircmd
@item g:netrw_localcopydircmd
="cp" Linux/Unix/MacOS/Cygwin @*
=expand("$COMSPEC") Windows

ディレクトリをターゲットディレクトリにコピーします (|@ref{netrw-mc}|, |@ref{netrw-mt}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_localcopydircmdopt*	=" -R"          Linux/Unix/MacOS/Cygwin
				=" /c xcopy /e /c /h/ /i /k"    Windows
				Options for |g:netrw_localcopydircmd|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_localcopydircmdopt}
@vindex g:netrw_localcopydircmdopt
@item g:netrw_localcopydircmdopt
=" -R" Linux/Unix/MacOS/Cygwin @*
=" /c xcopy /e /c /h/ /i /k" Windows

|@ref{g:netrw_localcopydircmd}| 用のオプション
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_localmkdir*		="mkdir"        Linux/Unix/MacOS/Cygwin
				=expand("$COMSPEC")             Windows
                                command for making a local directory
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_localmkdir}
@vindex g:netrw_localmkdir
@item g:netrw_localmkdir
="mkdir" Linux/Unix/MacOS/Cygwin @*
=expand("$COMSPEC") Windows

ローカルディレクトリ作成コマンド
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_localmkdiropt*	=""             Linux/Unix/MacOS/Cygwin
				=" /c mkdir"                    Windows
				Options for |g:netrw_localmkdir|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_localmkdiropt}
@vindex g:netrw_localmkdiropt
@item g:netrw_localmkdiropt
="" Linux/Unix/MacOS/Cygwin @*
=" /c mkdir" Windows

|@ref{g:netrw_localmkdir}| 用のオプション
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_localmovecmd*	="mv"           Linux/Unix/MacOS/Cygwin
				=expand("$COMSPEC")             Windows
				Moves marked files (|netrw-mf|) to target
				directory (|netrw-mt|, |netrw-mm|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_localmovecmd}
@vindex g:netrw_localmovecmd
@item g:netrw_localmovecmd
="mv" Linux/Unix/MacOS/Cygwin @*
=expand("$COMSPEC") Windows

マークされたファイル (|@ref{netrw-mf}|) をターゲットディレクトリに移動 (|@ref{netrw-mt}|, |@ref{netrw-mm}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_localmovecmdopt*	=""             Linux/Unix/MacOS/Cygwin
				=" /c move"                     Windows
				Options for |g:netrw_localmovecmd|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_localmovecmdopt}
@vindex g:netrw_localmovecmdopt
@item g:netrw_localmovecmdopt
="" Linux/Unix/MacOS/Cygwin @*
=" /c move" Windows

|@ref{g:netrw_localmovecmd}| 用のオプション
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_localrmdir*		="rmdir"        Linux/Unix/MacOS/Cygwin
 				=expand("$COMSPEC")             Windows
				Remove directory command (rmdir)
				This variable is only used if your vim is
				earlier than 7.4 or if your vim doesn't
				have patch#1107.  Otherwise, |delete()|
				is used with the "d" option.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_localrmdir}
@vindex g:netrw_localrmdir
@item g:netrw_localrmdir
="rmdir" Linux/Unix/MacOS/Cygwin @*
=expand("$COMSPEC") Windows

ディレクトリ削除コマンド (rmdir)

この変数は Vim 7.4 以前もしくは Patch#1107 を適用していない Vim でのみ使えます。そうでなければ、|@ref{delete()}| が "d" オプションで使われます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_localrmdiropt*	=""             Linux/Unix/MacOS/Cygwin
				=" /c rmdir"                    Windows
				Options for |g:netrw_localrmdir|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_localrmdiropt}
@vindex g:netrw_localrmdiropt
@item g:netrw_localrmdiropt
="" Linux/Unix/MacOS/Cygwin @*
=" /c rmdir" Windows

|@ref{g:netrw_localrmdir}| 用のオプション
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_maxfilenamelen*	=32 by default, selected so as to make long
				    listings fit on 80 column displays.
				If your screen is wider, and you have file
				or directory names longer than 32 bytes,
				you may set this option to keep listings
				columnar.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_maxfilenamelen}
@vindex g:netrw_maxfilenamelen
@item g:netrw_maxfilenamelen
=32 (初期設定) long スタイルでの表示を 80 カラムのディスプレイに収められるような値。

大きい画面を使っているか、32 バイトより長い名前のファイル/ディレクトリがあるなら、このオプションを設定して表示を調整するといいでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_mkdir_cmd*		command for making a remote directory
				via ssh  (also see |g:netrw_remote_mkdir|)
				 default: "ssh USEPORT HOSTNAME mkdir"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_mkdir_cmd}
@vindex g:netrw_mkdir_cmd
@item g:netrw_mkdir_cmd
ssh 経由でのリモートディレクトリ作成コマンド (|@ref{g:netrw_remote_mkdir}| も参照)

初期設定: "ssh USEPORT HOSTNAME mkdir"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_mousemaps*		  =1 (default) enables mouse buttons while
				   browsing to:
				     leftmouse       : open file/directory
				     shift-leftmouse : mark file
				     middlemouse     : same as P
				     rightmouse      : remove file/directory
				=0: disables mouse maps
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_mousemaps}
@vindex g:netrw_mousemaps
@item g:netrw_mousemaps
=1 (初期設定) ブラウジングでマウスボタンを有効にする:
@multitable @columnfractions .5 .5
@item 左クリック @tab ファイル/ディレクトリを開く
@item Shift-左クリック @tab ファイルをマークする
@item 中クリック @tab P と同じ
@item 右クリック @tab ファイル/ディレクトリを削除
@end multitable
=0: マウスのマップを無効にする
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_nobeval*		doesn't exist (default)
				If this variable exists, then balloon
				evaluation will be suppressed
				(see |'ballooneval'|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_nobeval}
@vindex g:netrw_nobeval
@item g:netrw_nobeval
未設定 (初期設定)

この変数を定義するとバルーン評価は抑制される。(参照 |@ref{'ballooneval'}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_sizestyle*		not defined: actual bytes (default)
 				="b" : actual bytes       (default)
 				="h" : human-readable (ex. 5k, 4m, 3g)
				       uses 1000 base
 				="H" : human-readable (ex. 5K, 4M, 3G)
				       uses 1024 base
				The long listing (|netrw-i|) and query-file
				maps (|netrw-qf|) will display file size
				using the specified style.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_sizestyle}
@vindex g:netrw_sizestyle
@item g:netrw_sizestyle
未定義: 実際のバイト数 (デフォルト)

="b" : 実際のバイト数  (デフォルト) @*
="h" : 人間が読める形式 (例: 5k, 4m, 3g) 1000 ベース @*
="H" : 人間が読める形式 (例: 5K, 4M, 3G) 1024 ベース

long 形式の一覧表示スタイル (|@ref{netrw-i}|) と query-file maps (|@ref{netrw-qf}|) はファイルサイズを指定されたスタイルで表示します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_usetab*		if this variable exists and is non-zero, then
				the <tab> map supporting shrinking/expanding a
				Lexplore or netrw window will be enabled.
				(see |netrw-c-tab|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_usetab}
@vindex g:netrw_usetab
@item g:netrw_usetab
もしこの変数が存在し、その値が 非0 なら、<tab> マップは Lexplore または netrw ウィンドウの縮小・拡張をサポートするようになります。(|@ref{netrw-c-tab}| 参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_remote_mkdir*	command for making a remote directory
				via ftp  (also see |g:netrw_mkdir_cmd|)
				 default: "mkdir"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_remote_mkdir}
@vindex g:netrw_remote_mkdir
@item g:netrw_remote_mkdir
ftp 経由でのリモートディレクトリ作成コマンド (|@ref{g:netrw_mkdir_cmd}| も参照)

初期設定: "mkdir"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_retmap*		if it exists and is set to one, then:
				 * if in a netrw-selected file, AND
				 * no normal-mode <2-leftmouse> mapping exists,
				then the <2-leftmouse> will be mapped for easy
				return to the netrw browser window.
				 example: click once to select and open a file,
				          double-click to return.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_retmap}
@vindex g:netrw_retmap
@item g:netrw_retmap
この変数が存在し、その値が 1 なら:
@itemize
@item netrw でファイルを開いたとき
@item <2-leftmouse> のノーマルモードのマップが他に定義されていない
@end itemize
という場合、netrw ブラウザーウィンドウに戻るための機能として <2-leftmouse> マップが設定されます。

例: クリックしてファイルを開き、ダブルクリックで戻る。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
				Note that one may instead choose to:
				 * let g:netrw_retmap= 1, AND
				 * nmap <silent> YourChoice <Plug>NetrwReturn
				and have another mapping instead of
				<2-leftmouse> to invoke the return.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@quotation
@strong{Note:} @*
<2-leftmouse> 以外のキーを割り当てたい場合は:
@itemize
@item let g:netrw_retmap= 1
@item nmap <silent> 好きなキー <Plug>NetrwReturn
@end itemize
を設定してください。
@end quotation
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
				You may also use the |:Rexplore| command to do
				the same thing.

				  default: =0
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{:Rexplore}| コマンドを使っても同じことができます。

初期設定: =0
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_rm_cmd*		command for removing remote files
				 default: "ssh USEPORT HOSTNAME rm"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_rm_cmd}
@vindex g:netrw_rm_cmd
@item g:netrw_rm_cmd
リモートのファイル削除コマンド

初期設定: "ssh USEPORT HOSTNAME rm"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_rmdir_cmd*		command for removing remote directories
				 default: "ssh USEPORT HOSTNAME rmdir"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_rmdir_cmd}
@vindex g:netrw_rmdir_cmd
@item g:netrw_rmdir_cmd
リモートのディレクトリ削除コマンド

初期設定: "ssh USEPORT HOSTNAME rmdir"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_rmf_cmd*		command for removing remote softlinks
				 default: "ssh USEPORT HOSTNAME rm -f"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_rmf_cmd}
@vindex g:netrw_rmf_cmd
@item g:netrw_rmf_cmd
リモートのソフトリンク削除コマンド

初期設定: "ssh USEPORT HOSTNAME rm -f"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_servername*		use this variable to provide a name for
				|netrw-ctrl-r| to use for its server.
				 default: "NETRWSERVER"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_servername}
@vindex g:netrw_servername
@item g:netrw_servername
使用するサーバーに |@ref{netrw-ctrl-r}| の名前を渡すための変数。

初期設定: "NETRWSERVER"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_sort_by*		sort by "name", "time", "size", or
  				"exten".
				 default: "name"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_sort_by}
@vindex g:netrw_sort_by
@item g:netrw_sort_by
ソートの種類: "name", "time", "size", "exten"

初期設定: "name"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_sort_direction*	sorting direction: "normal" or "reverse"
				 default: "normal"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_sort_direction}
@vindex g:netrw_sort_direction
@item g:netrw_sort_direction
ソートの順序: "normal" または "reverse"

初期設定: "normal"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_sort_options*	sorting is done using |:sort|; this
				variable's value is appended to the
				sort command.  Thus one may ignore case,
				for example, with the following in your
				.vimrc: >
					let g:netrw_sort_options="i"
<				 default: ""
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_sort_options}
@vindex g:netrw_sort_options
@item g:netrw_sort_options
ソートには |@ref{:sort}| が使われます。この変数に設定された値はソートコマンドに追加されます。例えば @file{.vimrc} で次のように設定すると、大文字小文字を無視できます:
@example
let g:netrw_sort_options="i"
@end example
初期設定: ""
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_sort_sequence*	when sorting by name, first sort by the
				comma-separated pattern sequence.  Note that
				any filigree added to indicate filetypes
				should be accounted for in your pattern.
				 default: '[\/]$,*,\.bak$,\.o$,\.h$,
				           \.info$,\.swp$,\.obj$'
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_sort_sequence}
@vindex g:netrw_sort_sequence
@item g:netrw_sort_sequence
名前でソートするとき、まずこの変数で指定されたパターンを使ってソートする。コンマで区切られたパターンのリスト。
@quotation
@strong{Note:} @* ソート時のファイル名にはファイルタイプを示す装飾文字 (|@ref{netrw-filigree}|) が含まれます。
@end quotation
初期設定: '@samp{[\/]$,*,\.bak$,\.o$,\.h$, \.info$,\.swp$,\.obj$}'
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_special_syntax*	If true, then certain files will be shown
				using special syntax in the browser:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_special_syntax}
@vindex g:netrw_special_syntax
@item g:netrw_special_syntax
true なら、特定の種類のファイルが特別な色 (シンタックス) で表示されます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
					netrwBak     : *.bak
					netrwCompress: *.gz *.bz2 *.Z *.zip
					netrwData    : *.dat
					netrwHdr     : *.h
					netrwLib     : *.a *.so *.lib *.dll
					netrwMakefile: [mM]akefile *.mak
					netrwObj     : *.o *.obj
					netrwTags    : tags ANmenu ANtags
					netrwTilde   : *
					netrwTmp     : tmp* *tmp
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
netrwBak     : *.bak
netrwCompress: *.gz *.bz2 *.Z *.zip
netrwData    : *.dat
netrwHdr     : *.h
netrwLib     : *.a *.so *.lib *.dll
netrwMakefile: [mM]akefile *.mak
netrwObj     : *.o *.obj
netrwTags    : tags ANmenu ANtags
netrwTilde   : *
netrwTmp     : tmp* *tmp
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
				In addition, those groups mentioned in
				|'suffixes'| are also added to the special
				file highlighting group.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
加えて、|@ref{'suffixes'}| で触れられているこれらのグループは、ハイライトグループの特別なファイルに追加されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
				 These syntax highlighting groups are linked
				to netrwGray or Folded by default
				(see |hl-Folded|), but one may put lines like >
					hi link netrwCompress Visual
<				into one's <.vimrc> to use one's own
				preferences.  Alternatively, one may
				put such specifications into >
					.vim/after/syntax/netrw.vim.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
これらの構文ハイライトグループは、初期設定では netrwGray か Folded へのリンクですが (|@ref{hl-Folded}| 参照)、例えば <.vimrc> で次のように設定することで 
@example
hi link netrwCompress Visual
@end example
好みの配色を設定できます。あるいは、このような設定を .vim/after/syntax/netrw.vim に書く方法もあります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
<				 The netrwGray highlighting is set up by
				netrw when >
	       				* netrwGray has not been previously
					  defined
					* the gui is running
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
netrwGray ハイライトは次の場合に netrw によって設定されます。
@itemize
@item netrwGray が以前に設定されていない
@item GUI で動作している
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
<				 As an example, I myself use a dark-background
				colorscheme with the following in
				.vim/after/syntax/netrw.vim: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
例として、私自身は暗背景カラースキームを使っていて .vim/after/syntax/netrw.vim で以下のよう設定しています:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 hi netrwCompress term=NONE cterm=NONE gui=NONE ctermfg=10 guifg=green  ctermbg=0 guibg=black
 hi netrwData	  term=NONE cterm=NONE gui=NONE ctermfg=9 guifg=blue ctermbg=0 guibg=black
 hi netrwHdr	  term=NONE cterm=NONE,italic gui=NONE guifg=SeaGreen1
 hi netrwLex	  term=NONE cterm=NONE,italic gui=NONE guifg=SeaGreen1
 hi netrwYacc	  term=NONE cterm=NONE,italic gui=NONE guifg=SeaGreen1
 hi netrwLib	  term=NONE cterm=NONE gui=NONE ctermfg=14 guifg=yellow
 hi netrwObj	  term=NONE cterm=NONE gui=NONE ctermfg=12 guifg=red
 hi netrwTilde	  term=NONE cterm=NONE gui=NONE ctermfg=12 guifg=red
 hi netrwTmp	  term=NONE cterm=NONE gui=NONE ctermfg=12 guifg=red
 hi netrwTags	  term=NONE cterm=NONE gui=NONE ctermfg=12 guifg=red
 hi netrwDoc	  term=NONE cterm=NONE gui=NONE ctermfg=220 ctermbg=27 guifg=yellow2 guibg=Blue3
 hi netrwSymLink  term=NONE cterm=NONE gui=NONE ctermfg=220 ctermbg=27 guifg=grey60
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
hi netrwCompress term=NONE cterm=NONE gui=NONE ctermfg=10 guifg=green ctermbg=0 guibg=black
hi netrwData     term=NONE cterm=NONE gui=NONE ctermfg=9 guifg=blue ctermbg=0 guibg=black
hi netrwHdr      term=NONE cterm=NONE,italic gui=NONE guifg=SeaGreen1
hi netrwLex      term=NONE cterm=NONE,italic gui=NONE guifg=SeaGreen1
hi netrwYacc     term=NONE cterm=NONE,italic gui=NONE guifg=SeaGreen1
hi netrwLib      term=NONE cterm=NONE gui=NONE ctermfg=14 guifg=yellow
hi netrwObj      term=NONE cterm=NONE gui=NONE ctermfg=12 guifg=red
hi netrwTilde    term=NONE cterm=NONE gui=NONE ctermfg=12 guifg=red
hi netrwTmp      term=NONE cterm=NONE gui=NONE ctermfg=12 guifg=red
hi netrwTags     term=NONE cterm=NONE gui=NONE ctermfg=12 guifg=red
hi netrwDoc      term=NONE cterm=NONE gui=NONE ctermfg=220 ctermbg=27 guifg=yellow2 guibg=Blue3
hi netrwSymLink  term=NONE cterm=NONE gui=NONE ctermfg=220 ctermbg=27 guifg=grey60
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
  *g:netrw_ssh_browse_reject*	ssh can sometimes produce unwanted lines,
				messages, banners, and whatnot that one doesn't
				want masquerading as "directories" and "files".
				Use this pattern to remove such embedded
				messages.  By default its value is:
					 '^total\s\+\d\+$'
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_ssh_browse_reject}
@vindex g:netrw_ssh_browse_reject
@item g:netrw_ssh_browse_reject
ssh の出力に不要なテキスト (メッセージ、バナー等) が混ざっていて、それらがディレクトリやファイルとして認識されると困ります。この変数に設定されたパターンを使って余計なメッセージを取り除きます。

初期設定: '@samp{^total\s\+\d\+$}'
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_ssh_cmd*		One may specify an executable command
				to use instead of ssh for remote actions
				such as listing, file removal, etc.
				 default: ssh
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_ssh_cmd}
@vindex g:netrw_ssh_cmd
@item g:netrw_ssh_cmd
リモートアクセス時に ssh として使われる実行可能ファイル。ファイル一覧取得やファイル削除などに使われます。

初期設定: ssh
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
 *g:netrw_suppress_gx_mesg*	=1 : browsers sometimes produce messages
				which are normally unwanted intermixed
				with the page.
				However, when using links, for example,
				those messages are what the browser produces.
				By setting this option to 0, netrw will not
				suppress browser messages.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_suppress_gx_mesg}
@vindex g:netrw_suppress_gx_mesg
@item g:netrw_suppress_gx_mesg
=1 : ブラウザーは時々、ページと入り混じった不必要と思われるメッセージを出力することがあります。しかし、例えば links を使用している時、それらの出力はブラウザーが出力したものです。このオプションを 0 にセットすることで、netrw はブラウザーのメッセージを抑制しなくなります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_tmpfile_escape*	=' &;'
				escape() is applied to all temporary files
				to escape these characters.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_tmpfile_escape}
@vindex g:netrw_tmpfile_escape
@item g:netrw_tmpfile_escape
=' &;'

一時ファイルを escape() で処理するときに使われるエスケープ文字列。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_timefmt*		specify format string to vim's strftime().
				The default, "%c", is "the preferred date
				and time representation for the current
				locale" according to my manpage entry for
				strftime(); however, not all are satisfied
				with it.  Some alternatives:
				 "%a %d %b %Y %T",
				 " %a %Y-%m-%d  %I-%M-%S %p"
				 default: "%c"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_timefmt}
@vindex g:netrw_timefmt
@item g:netrw_timefmt
Vim の strftime() で使用するフォーマット文字列を指定します。初期設定は "%c" で、これは手元の strftime() のマニュアルページによれば "現在のロケールにおいて一般的な日付・時刻の表記" です。"%c" の結果に不満な場合は例えば次のような設定が便利でしょう:
@example
"%a %d %b %Y %T",
" %a %Y-%m-%d  %I-%M-%S %p"
@end example
初期設定: "%c"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_use_noswf*		netrw normally avoids writing swapfiles
				for browser buffers.  However, under some
				systems this apparently is causing nasty
				ml_get errors to appear; if you're getting
				ml_get errors, try putting
				  let g:netrw_use_noswf= 0
				in your .vimrc.
				  default: 1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_use_noswf}
@vindex g:netrw_use_noswf
@item g:netrw_use_noswf
netrw のブラウザーバッファではスワップファイルを使わないようにしています。しかし、あるシステムではそれによって ml_get エラーが発生することがあります。そのようなエラーが出た場合は @file{.vimrc} で次のように設定してみてください
@example
let g:netrw_use_noswf= 0
@end example
初期設定: 1
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_winsize*		specify initial size of new windows made with
				"o" (see |netrw-o|), "v" (see |netrw-v|),
				|:Hexplore| or |:Vexplore|.  The g:netrw_winsize
				is an integer describing the percentage of the
				current netrw buffer's window to be used for
				the new window.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_winsize}
@vindex g:netrw_winsize
@item g:netrw_winsize
ウィンドウを作成したときの初期サイズ。"o" (|@ref{netrw-o}|), "v" (|@ref{netrw-v}|), |@ref{:Hexplore}|, |@ref{:Vexplore}| で使用。g:netrw_winsize の値は整数です。新しいウィンドウのサイズを netrw のカレントバッファウィンドウに対する比率で指定します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
				 If g:netrw_winsize is less than zero, then
				the absolute value of g:netrw_winsize lines
				or columns will be used for the new window.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
g:netrw_winsize が 0 より小さい場合、新しいウィンドウの行または列の大きさにはその値の絶対値が使われる。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
				 If g:netrw_winsize is zero, then a normal
				split will be made (ie. |'equalalways'| will
				take effect, for example).
				 default: 50  (for 50%)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
g:netrw_winsize がゼロなら、通常どおりウィンドウが分割される (つまり、例えば |@ref{'equalalways'}| が機能するなど)。

初期設定: 50 (50%)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_wiw*			=1 specifies the minimum window width to use
				when shrinking a netrw/Lexplore window
				(see |netrw-c-tab|).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_wiw}
@vindex g:netrw_wiw
@item g:netrw_wiw
=1 netrw ウィンドウ/Lexplore ウィンドウを縮小する時に使われる最小のウィンドウ幅を指定します (|@ref{netrw-c-tab}| 参照)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:netrw_xstrlen*		Controls how netrw computes string lengths,
				including multi-byte characters' string
				length. (thanks to N Weibull, T Mechelynck)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:netrw_xstrlen}
@vindex g:netrw_xstrlen
@item g:netrw_xstrlen
マルチバイト文字列の長さを計算する方法を指定する。(N Weibull, T Mechelynck ありがとう)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
				=0: uses Vim's built-in strlen()
				=1: number of codepoints (Latin a + combining
				    circumflex is two codepoints)  (DEFAULT)
				=2: number of spacing codepoints (Latin a +
				    combining circumflex is one spacing
				    codepoint; a hard tab is one; wide and
				    narrow CJK are one each; etc.)
				=3: virtual length (counting tabs as anything
				    between 1 and |'tabstop'|, wide CJK as 2
				    rather than 1, Arabic alif as zero when
				    immediately preceded by lam, one
				    otherwise, etc)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

=0: Vim の組み込み関数 strlen() を使う @*
=1: 文字数。(Latin a + combining circumflex は 2 文字) (初期設定) @*
=2: 文字数。(Latin a + combining circumflex は 1 文字。タブ文字は 1。CJK 文字は全角半角ともに 1。...) @*
=3: 表示幅 (タブ文字は 1 から |@ref{'tabstop'}| までの可変幅。CJK 文字は全角は 2、その他は 1。アラビア文字の alif は、lam が前置されている場合は 0、そうでなければ 1。...)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  *g:NetrwTopLvlMenu*		This variable specifies the top level
				menu name; by default, it's "Netrw.".  If
				you wish to change this, do so in your
				.vimrc.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{g:NetrwTopLvlMenu}
@vindex g:NetrwTopLvlMenu
@item g:NetrwTopLvlMenu
トップレベルメニューの名前を指定する。初期設定は "Netrw."。これを変更したい場合は @file{.vimrc} で設定してください。
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
NETRW BROWSING AND OPTION INCOMPATIBILITIES	*netrw-incompatible* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-incompatible}
@cindex netrw-incompatible
@unnumberedsubsec NETRW ブラウザーとオプション設定の互換性
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Netrw has been designed to handle user options by saving them, setting the
options to something that's compatible with netrw's needs, and then restoring
them.  However, the autochdir option: >
	:set acd
is problematic.  Autochdir sets the current directory to that containing the
file you edit; this apparently also applies to directories.  In other words,
autochdir sets the current directory to that containing the "file" (even if
that "file" is itself a directory).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw 内部でオプションを変更するときは、ユーザー設定を保存してから netrw 用の値を設定し、後で元に戻すという方法が使われます。しかし、autochdir オプション:
@example
:set acd
@end example
の扱いには問題があります。autochdir は開いているファイルが置かれているディレクトリをカレントディレクトリとして設定しますが、これはディレクトリを開いたときも適用されます。つまり、autochdir によってファイル (それがディレクトリであっても) が置かれているディレクトリがカレントディレクトリとして設定されてしまいます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
NETRW SETTINGS WINDOW				*netrw-settings-window* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-settings-window}
@cindex netrw-settings-window
@unnumberedsubsec NETRW 設定ウィンドウ
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
With the NetrwSettings.vim plugin, >
	:NetrwSettings
will bring up a window with the many variables that netrw uses for its
settings.  You may change any of their values; when you save the file, the
settings therein will be used.  One may also press "?" on any of the lines for
help on what each of the variables do.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
NetrwSettings.vim プラグインのコマンド
@verbatim
:NetrwSettings
@end verbatim
を実行すると、netrw の設定変数が表示されたウィンドウが表示されます。値を編集してファイルを保存すると設定が反映されます。それぞれの変数の上で "?" を押すとその変数のヘルプが表示されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
(also see: |netrw-browser-var| |netrw-protocol| |netrw-variables|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(参照: |@ref{netrw-browser-var}| |@ref{netrw-protocol}| |@ref{netrw-variables}|)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
==============================================================================
OBTAINING A FILE					*netrw-obtain* *netrw-O* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-obtain}
@anchor{netrw-O}
@cindex netrw-obtain
@kindex netrw-O
@unnumberedsubsec ファイルを取得する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If there are no marked files:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@strong{マークされたファイルがない場合:}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    When browsing a remote directory, one may obtain a file under the cursor
    (ie.  get a copy on your local machine, but not edit it) by pressing the O
    key.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
リモートディレクトリを表示しているとき、ファイル名の上で O を押すことでファイルを取得できます (ローカルマシンにファイルがコピーされる。編集は開始されない)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If there are marked files:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@strong{マークされたファイルがある場合:}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    The marked files will be obtained (ie. a copy will be transferred to your
    local machine, but not set up for editing).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
マークされたファイルが取得されます (ローカルマシンにファイルがコピーされる。編集は開始されない)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Only ftp and scp are supported for this operation (but since these two are
available for browsing, that shouldn't be a problem).  The status bar will
then show, on its right hand side, a message like "Obtaining filename".  The
statusline will be restored after the transfer is complete.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
この操作は ftp と scp でサポートされています  (ブラウジングが動作しているなら問題なく使えるはずです)。ステータスラインの右側に "Obtaining filename" のようなメッセージが表示されます。ファイル転送が完了するとステータスラインは元に戻ります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Netrw can also "obtain" a file using the local browser.  Netrw's display
of a directory is not necessarily the same as Vim's "current directory",
unless |g:netrw_keepdir| is set to 0 in the user's <.vimrc>.  One may select
a file using the local browser (by putting the cursor on it) and pressing
"O" will then "obtain" the file; ie. copy it to Vim's current directory.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw はローカルマシンのファイルを "取得" することもできます。<@file{.vimrc}> で |@ref{g:netrw_keepdir}| が 0 に設定されていなければ、Netrw では Vim のカレントディレクトリとは別のディレクトリを表示できます。ローカルブラウザーでファイルを選択 (ファイル名の上にカーソルを移動) し、"O" を押すことで、ファイルを "取得" (Vim のカレントディレクトリにコピー) できます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics:
 * To see what the current directory is, use |:pwd|
 * To make the currently browsed directory the current directory, see |netrw-c|
 * To automatically make the currently browsed directory the current
   directory, see |g:netrw_keepdir|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目:
@itemize
@item カレントディレクトリを確認するには: |@ref{:pwd}| 参照。
@item ブラウザーで表示しているディレクトリをカレントディレクトリにしたい場合は: |@ref{netrw-c}| 参照。
@item ブラウザーで表示しているディレクトリをカレントディレクトリに自動的にしたい場合は: |@ref{g:netrw_keepdir}| 参照。
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
					*netrw-newfile* *netrw-createfile*
OPEN A NEW FILE IN NETRW'S CURRENT DIRECTORY		*netrw-%* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-newfile}
@anchor{netrw-createfile}
@anchor{netrw-%}
@cindex netrw-newfile
@cindex netrw-createfile
@kindex netrw-%
@unnumberedsubsec NETRW のカレントディレクトリで新しいファイルを作成する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To open a new file in netrw's current directory, press "%".  This map
will query the user for a new filename; an empty file by that name will
be placed in the netrw's current directory (ie. b:netrw_curdir).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
netrw のカレントディレクトリで新しいファイルを作成するには "@key{%}" を押します。ファイル名を入力するためのプロンプトが表示されます。指定した名前の空のファイルが netrw のカレントディレクトリ (b:netrw_curdir) に作成されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics:               |netrw-d|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目: |@ref{netrw-d}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
PREVIEW WINDOW				*netrw-p* *netrw-preview* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p}
@anchor{netrw-preview}
@kindex netrw-p
@cindex netrw-preview
@unnumberedsubsec プレビューウィンドウ
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may use a preview window by using the "p" key when the cursor is atop the
desired filename to be previewed.  The display will then split to show both
the browser (where the cursor will remain) and the file (see |:pedit|).  By
default, the split will be taken horizontally; one may use vertical splitting
if one has set |g:netrw_preview| first.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ファイルの上で "p" キーを押すと、そのファイルをプレビューウィンドウで開くことができます。ブラウザーウィンドウとは別にファイルを表示するウィンドウが作成されます (|@ref{:pedit}| 参照。カーソルは移動しません)。初期設定ではウィンドウは水平分割されます。|@ref{g:netrw_preview}| を設定することで垂直分割に変更できます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
An interesting set of netrw settings is: >

	let g:netrw_preview   = 1
	let g:netrw_liststyle = 3
	let g:netrw_winsize   = 30
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
netrw を次のように設定すると便利かもしれません:
@example
let g:netrw_preview   = 1
let g:netrw_liststyle = 3
let g:netrw_winsize   = 30
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
These will:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
これは:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	1. Make vertical splitting the default for previewing files
	2. Make the default listing style "tree"
	3. When a vertical preview window is opened, the directory listing
	   will use only 30% of the columns available; the rest of the window
	   is used for the preview window.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@enumerate
@item ファイルのプレビューを垂直分割で開く。
@item デフォルトの一覧表示スタイルを "tree" にする。
@item 垂直分割でプレビューウィンドウを開いたときに、ディレクトリの一覧表示ウィンドウは列の幅の 30% しか使わないので、残りの領域をプレビューウィンドウの表示に使用できる。
@end enumerate
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Related: if you like this idea, you may also find :Lexplore
	         (|netrw-:Lexplore|) or |g:netrw_chgwin| of interest
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連: もしあなたがこのアイデアを気に入るようなら、:Lexplore (|@ref{netrw-:Lexplore}|) や |@ref{g:netrw_chgwin}| にも興味を持つでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Also see: |g:netrw_chgwin| |netrw-P| |'previewwindow'| |CTRL-W_z| |:pclose|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
参照: |@ref{g:netrw_chgwin}| |@ref{netrw-P}| |@ref{'previewwindow'}| |@ref{CTRL-W_z}| |@ref{:pclose}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
PREVIOUS WINDOW					*netrw-P* *netrw-prvwin* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-P}
@anchor{netrw-prvwin}
@kindex netrw-P
@cindex netrw-prvwin
@unnumberedsubsec 以前のウィンドウ
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To edit a file or directory under the cursor in the previously used (last
accessed) window (see :he |CTRL-W_p|), press a "P".  If there's only one
window, then the one window will be horizontally split (by default).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
カーソル下のファイル/ディレクトリを以前の (最後にアクセスした) ウィンドウ (:he |@ref{CTRL-W_p}|) で開くには、"@key{P}" を押します。ウィンドウが 1 つしかない場合は、新しいウィンドウが水平分割 (初期設定) で作成されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If there's more than one window, the previous window will be re-used on
the selected file/directory.  If the previous window's associated buffer
has been modified, and there's only one window with that buffer, then
the user will be asked if s/he wishes to save the buffer first (yes,
no, or cancel).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ウィンドウが複数ある場合は、以前のウィンドウを使ってファイル/ディレクトリが開かれます。以前のウィンドウで表示されているバッファに未保存の変更があり、そのバッファを表示しているウィンドウが 1 つだけの場合、バッファを保存するかどうかを尋ねるプロンプトが表示されます (yes, no, または cancel)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related Actions |netrw-cr| |netrw-o| |netrw-t| |netrw-v|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連アクション |@ref{netrw-cr}| |@ref{netrw-o}| |@ref{netrw-t}| |@ref{netrw-v}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated setting variables:
   |g:netrw_alto|    control above/below splitting
   |g:netrw_altv|    control right/left splitting
   |g:netrw_preview| control horizontal vs vertical splitting
   |g:netrw_winsize| control initial sizing
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

関連設定変数:
@multitable @columnfractions .5 .5
@item |@ref{g:netrw_alto}| @tab 分割の方向 (上/下) を制御
@item |@ref{g:netrw_altv}| @tab 分割の方向 (右/左) を制御
@item |@ref{g:netrw_preview}| @tab 分割の方向 (水平/垂直) を制御
@item |@ref{g:netrw_winsize}| @tab 初期サイズを制御
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Also see: |g:netrw_chgwin| |netrw-p|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
参照: |@ref{g:netrw_chgwin}| |@ref{netrw-p}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
REFRESHING THE LISTING		*netrw-refresh* *netrw-ctrl-l* *netrw-ctrl_l* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-refresh}
@anchor{netrw-ctrl-l}
@anchor{netrw-ctrl_l}
@cindex netrw-refresh
@kindex netrw-ctrl-l
@cindex netrw-ctrl_l
@unnumberedsubsec 一覧を更新する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
To refresh either a local or remote directory listing, press ctrl-l (<c-l>) or
hit the <cr> when atop the ./ directory entry in the listing.  One may also
refresh a local directory by using ":e .".
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ローカル/リモートのディレクトリのファイル一覧は、@kbd{Ctrl-l} (<c-l>) を押すか、一覧の ./ の上で @key{<CR>} を押すことで更新できます。"@command{:e .}" でローカルディレクトリを更新することもできます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
REVERSING SORTING ORDER		*netrw-r* *netrw-reverse* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-r}
@anchor{netrw-reverse}
@kindex netrw-r
@cindex netrw-reverse
@unnumberedsubsec ソートの順番を逆にする
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may toggle between normal and reverse sorting order by pressing the
"r" key.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"@key{r}" キーを押すことでソートの順番を昇順/降順に切り替えることができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics:              |netrw-s|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目: |@ref{netrw-s}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated setting variable: |g:netrw_sort_direction|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

関連設定: |@ref{g:netrw_sort_direction}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
RENAMING FILES OR DIRECTORIES	*netrw-move* *netrw-rename* *netrw-R* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-move}
@anchor{netrw-rename}
@anchor{netrw-R}
@cindex netrw-move
@cindex netrw-rename
@kindex netrw-R
@unnumberedsubsec ファイルの名前を変更する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If there are no marked files: (see |netrw-mf|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@strong{マークされたファイルがない場合: (|@ref{netrw-mf}| 参照)}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    Renaming files and directories involves moving the cursor to the
    file/directory to be moved (renamed) and pressing "R".  You will then be
    queried for what you want the file/directory to be renamed to.  You may
    select a range of lines with the "V" command (visual selection), and then
    press "R"; you will be queried for each file as to what you want it
    renamed to.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
移動 (名前変更) したいファイル/ディレクトリにカーソルを移動して "@key{R}" を押します。プロンプトが表示されるのでファイル/ディレクトリの移動先を入力してください。"V" コマンド (ビジュアル選択) で複数の行を選択して "R" を使うこともできます。それぞれのファイルに対して、リネームしたいファイル名を尋ねられます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If there are marked files:  (see |netrw-mf|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@strong{マークされたファイルがある場合: (|@ref{netrw-mf}| 参照)}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    Marked files will be renamed (moved).  You will be queried as above in
    order to specify where you want the file/directory to be moved.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
マークされたファイルを移動 (名前変更) します。プロンプトが表示されるのでファイル/ディレクトリの移動先を入力してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    If you answer a renaming query with a "s/frompattern/topattern/", then
    subsequent files on the marked file list will be renamed by taking each
    name, applying that substitute, and renaming each file to the result.
    As an example : >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
もしあなたが "s/frompattern/topattern/" と入力したら、マークファイルリストのそれぞれのファイル名を取得し、置換を適用し、ファイル名を変更します。

例:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    	mr  [query: reply with *.c]
	R   [query: reply with s/^\(.*\)\.c$/\1.cpp/]
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
mr  [質問: *.c と入力]
R   [質問: s/^\(.*\)\.c$/\1.cpp/ と入力]
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
    This example will mark all *.c files and then rename them to *.cpp
    files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
この例ではすべての *.c ファイルを *.cpp に変更します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    The ctrl-X character has special meaning for renaming files: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ctrl-X はファイルをリネームするのに特別な意味を持ちます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
    	<c-x>      : a single ctrl-x tells netrw to ignore the portion of the response
	             lying between the last '/' and the ctrl-x.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@multitable @columnfractions .3 .7
@item <c-x> @tab 単一の ctrl-x は netrw に最後の '/' と ctrl-x の間の分割の位置を伝えます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	<c-x><c-x> : a pair of contiguous ctrl-x's tells netrw to ignore any
		     portion of the string preceding the double ctrl-x's.
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item <c-x><c-x> @tab 連続した ctrl-x は 2 つの ctrl-x の前のすべての分割を無視します。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
    WARNING:~

@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@strong{警告:}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
    Note that moving files is a dangerous operation; copies are safer.  That's
    because a "move" for remote files is actually a copy + delete -- and if
    the copy fails and the delete succeeds you may lose the file.
    Use at your own risk.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@quotation
@strong{Note:} @*
ファイルの移動はコピーと比べて危険です。なぜなら、リモートのファイルを "移動" するとき、実際には コピー + 削除 を実行しているからです。コピーが失敗して削除が成功するとファイルが失われます。自己責任で使ってください。
@end quotation
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The *g:netrw_rename_cmd* variable is used to implement remote renaming.  By
default its value is: >

	ssh HOSTNAME mv
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
g:netrw_rename_cmd 変数でリモートの名前変更のコマンドを指定できます。初期設定は次のとおり:
@example
ssh HOSTNAME mv
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
One may rename a block of files and directories by selecting them with
V (|linewise-visual|) when using thin style.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
V (|@ref{linewise-visual}|) で選択することで複数のファイル/ディレクトリを名前変更できます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
See |cmdline-editing| for more on how to edit the command line; in particular,
you'll find <ctrl-f> (initiates cmdline window editing) and <ctrl-c> (uses the
command line under the cursor) useful in conjunction with the R command.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
より多くのコマンドラインの編集方法の方針は |@ref{cmdline-editing}| を参照。特に、<ctrl-f> (コマンドラインウィンドウで編集を開始) と <ctrl-c> (カーソル下のコマンド行を使用) は R コマンドと組み合せると便利であることがわかるでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
SELECTING SORTING STYLE			*netrw-s* *netrw-sort* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-s}
@anchor{netrw-sort}
@kindex netrw-s
@cindex netrw-sort
@unnumberedsubsec ソートの種類を変更する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may select the sorting style by name, time, or (file) size.  The "s" map
allows one to circulate amongst the three choices; the directory listing will
automatically be refreshed to reflect the selected style.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ファイル一覧は名前、時間、ファイルサイズのいずれかでソートできます。"s" マップを使うことでソートの種類を順番に切り替えることができます。ファイルの一覧は自動的に更新されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics:               |netrw-r| |netrw-S|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目: |@ref{netrw-r}| |@ref{netrw-S}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated setting variables: |g:netrw_sort_by| |g:netrw_sort_sequence|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

関連設定: |@ref{g:netrw_sort_by}| |@ref{g:netrw_sort_sequence}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
SETTING EDITING WINDOW		*netrw-editwindow* *netrw-C* *netrw-:NetrwC* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-editwindow}
@anchor{netrw-C}
@anchor{netrw-:NetrwC}
@cindex netrw-editwindow
@kindex netrw-C
@pindex netrw-:NetrwC
@unnumberedsubsec ファイルを開くウィンドウを指定する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may select a netrw window for editing with the "C" mapping, using the
:NetrwC [win#] command, or by setting |g:netrw_chgwin| to the selected window
number.  Subsequent selection of a file to edit (|netrw-cr|) will use that
window.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ファイルを開くウィンドウを指定するには、netrw ウィンドウで "C" マップを押すか、|@ref{g:netrw_chgwin}| にウィンドウ番号を設定します。ファイルを開く (|@ref{netrw-cr}|) と、指定されたウィンドウが使われます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* C : by itself, will select the current window holding a netrw buffer
	  for subsequent editing via |netrw-cr|.  The C mapping is only available
	  while in netrw buffers.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item C だけを押すと |@ref{netrw-cr}| でファイルを開くときにカレントウィンドウが使われます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* [count]C : the count will be used as the window number to be used
	  for subsequent editing via |netrw-cr|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item [count]C カウントを指定すると |@ref{netrw-cr}| でファイルを開くときに指定された番号のウィンドウが使用されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* :NetrwC will set |g:netrw_chgwin| to the current window
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item :NetrwC は |@ref{g:netrw_chgwin}| をカレントウィンドウにセットします。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* :NetrwC win#  will set |g:netrw_chgwin| to the specified window
	  number
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item :NetrwC win#  は |@ref{g:netrw_chgwin}| を指定されたウィンドウ番号にセットします。
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Using >
	let g:netrw_chgwin= -1
will restore the default editing behavior
(ie. subsequent editing will use the current window).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
次のように設定すると
@example
let g:netrw_chgwin= -1
@end example
デフォルトの動作に戻すことができます (つまり、カレントウィンドウを使う)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Related topics:			|netrw-cr| |g:netrw_browse_split|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目: |@ref{netrw-cr}| |@ref{g:netrw_browse_split}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated setting variables:	|g:netrw_chgwin|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連設定: |@ref{g:netrw_chgwin}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
SHRINKING OR EXPANDING A NETRW OR LEXPLORE WINDOW	*netrw-c-tab* {{{2
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-c-tab}
@kindex netrw-c-tab
@unnumberedsubsec netrw ウィンドウ/エクスプローラーウィンドウを拡大・縮小する
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The <c-tab> key will toggle a netrw or |:Lexplore| window's width,
but only if |g:netrw_usetab| exists and is non-zero (and, of course,
only if your terminal supports differentiating <c-tab> from a plain
<tab>).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
<@key{c-tab}> キーは netrw または |@ref{:Lexplore}| ウィンドウの幅をトグルします。しかしこれは |@ref{g:netrw_usetab}| が存在し 非 0 である場合のみ有効です (また、もちろんあなたの端末が <c-tab> と <tab> を区別できる場合のみ)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  * If the current window is a netrw window, toggle its width
    (between |g:netrw_wiw| and its original width)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item もし現在のウィンドウが netrw ウィンドウなら、その幅をトグルします (|@ref{g:netrw_wiw}|と元の幅を行き来します)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  * Else if there is a |:Lexplore| window in the current tab, toggle
    its width
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 次に、もし現在のタブに |@ref{:Lexplore}| ウィンドウが存在するなら、その幅をトグルします
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  * Else bring up a |:Lexplore| window
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 最後に、|@ref{:Lexplore}| ウィンドウを持ち上げます
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
If |g:netrw_usetab| exists and is zero, or if there is a pre-existing mapping
for <c-tab>, then the <c-tab> will not be mapped.  One may map something other
than a <c-tab>, too: (but you'll still need to have had |g:netrw_usetab| set). >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
もし |@ref{g:netrw_usetab}| が存在し 非 0 の場合、もしくはすでに <c-tab> にマッピングが存在するなら、<c-tab> はマッピングされません。もし <c-tab> 以外にマップされていた場合も同様です: (しかしその場合も |@ref{g:netrw_usetab}| をセットしている必要があります)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	nmap <unique> (whatever)	<Plug>NetrwShrink
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
nmap <unique> (whatever)        <Plug>NetrwShrink
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Related topics:			|:Lexplore|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
関連項目: |@ref{:Lexplore}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Associated setting variable:	|g:netrw_usetab|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------

関連設定: |@ref{g:netrw_usetab}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
USER SPECIFIED MAPS					*netrw-usermaps* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-usermaps}
@cindex netrw-usermaps
@unnumberedsubsec ユーザー定義のマッピング
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
One may make customized user maps.  Specify a variable, |g:Netrw_UserMaps|,
to hold a |List| of lists of keymap strings and function names: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ユーザー定義のマップを作成することができます。キーマップの文字列と関数名の |@ref{List}| を保持する |@ref{g:Netrw_UserMaps}| を指定してください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	[["keymap-sequence","ExampleUserMapFunc"],...]
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
[["keymap-sequence","ExampleUserMapFunc"],...]
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
When netrw is setting up maps for a netrw buffer, if |g:Netrw_UserMaps|
exists, then the internal function netrw#UserMaps(islocal) is called.
This function goes through all the entries in the |g:Netrw_UserMaps| list:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
netrw が netrw バッファ用のマップを設定する時、もし |@ref{g:Netrw_UserMaps}| が存在するなら、内部関数 netrw#UserMaps(islocal) が呼ばれます。この関数は |@ref{g:Netrw_UserMaps}| のすべての要素を走査します:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	* sets up maps: >
		nno <buffer> <silent> KEYMAP-SEQUENCE
		:call s:UserMaps(islocal,"ExampleUserMapFunc")
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item マップを設定します:
@example
nno <buffer> <silent> KEYMAP-SEQUENCE
:call s:UserMaps(islocal,"ExampleUserMapFunc")
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
<	* refreshes if result from that function call is the string
	  "refresh"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item その関数からの戻り値が文字列の "refresh" ならリフレッシュします。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	* if the result string is not "", then that string will be
	  executed (:exe result)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item もしその戻り値の文字列が "" ではない場合、その文字列は実行されます (:exe 戻り値)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	* if the result is a List, then the above two actions on results
	  will be taken for every string in the result List
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item もし戻り値が List なら、上記の結果に対する2つのアクションは List の中のすべての文字列に行われます。
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The user function is passed one argument; it resembles >

	fun! ExampleUserMapFunc(islocal)
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ユーザー関数には 1 つの引数が渡されます。以下のように
@example
fun! ExampleUserMapFunc(islocal)
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
where a:islocal is 1 if its a local-directory system call or 0 when
remote-directory system call.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
もしそれがローカルディレクトリの呼び出しなら a:islocal は 1、もしそれがリモートディレクトリの呼び出しなら a:islocal は 0 になります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
			        *netrw-call*  *netrw-expose*  *netrw-modify*
Use netrw#Expose("varname")          to access netrw-internal (script-local)
				     variables.
Use netrw#Modify("varname",newvalue) to change netrw-internal variables.
Use netrw#Call("funcname"[,args])    to call a netrw-internal function with
				     specified arguments.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-call}
@anchor{netrw-expose}
@anchor{netrw-modify}
@cindex netrw-call
@cindex netrw-expose
@cindex netrw-modify
@multitable @columnfractions .5 .5
@item netrw#Expose("varname") @tab netrw の (スクリプトローカルな) 内部変数にアクセスできます。
@item netrw#Modify("varname",newvalue) @tab netrw の内部変数を変更できます。
@item netrw#Call("funcname"[,args]) @tab netrw の内部関数を指定の引数で呼び出すことができます。
@end multitable
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Example: Get a copy of netrw's marked file list: >

	let netrwmarkfilelist= netrw#Expose("netrwmarkfilelist")
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
例: netrw のマークファイルリストのコピーを取得します:
@example
let netrwmarkfilelist= netrw#Expose("netrwmarkfilelist")
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Example: Modify the value of netrw's marked file list: >

	call netrw#Modify("netrwmarkfilelist",[])
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
例: netrw のマークファイルリストの値を変更します:
@example
call netrw#Modify("netrwmarkfilelist",[])
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Example: Clear netrw's marked file list via a mapping on gu >
    " ExampleUserMap: {{{2
    fun! ExampleUserMap(islocal)
      call netrw#Modify("netrwmarkfilelist",[])
      call netrw#Modify('netrwmarkfilemtch_{bufnr("%")}',"")
      let retval= ["refresh"]
      return retval
    endfun
    let g:Netrw_UserMaps= [["gu","ExampleUserMap"]]
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
例: netrw のマークファイルリストを gu マッピング経由でクリアします:
@example
" ExampleUserMap:
fun! ExampleUserMap(islocal)
  call netrw#Modify("netrwmarkfilelist",[])
  call netrw#Modify('netrwmarkfilemtch_@{bufnr("%")@}',"")
  let retval= ["refresh"]
  return retval
endfun
let g:Netrw_UserMaps= [["gu","ExampleUserMap"]]
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
10. Problems and Fixes					*netrw-problems* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-problems}
@cindex netrw-problems
@section 10. 問題と対策
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	(This section is likely to grow as I get feedback)
	(also see |netrw-debug|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(何かフィードバックがあればこの項に追加していきます) @*
(|@ref{netrw-debug}| も参照)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
								*netrw-p1*
	P1. I use windows 95, and my ftp dumps four blank lines at the
	    end of every read.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@table @asis
@anchor{netrw-p1}
@cindex netrw-p1
@item P1. Windows 95 を使っています。ftp が読み込みのたびに末尾に 4 行の空行を出力します。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		See |netrw-fixup|, and put the following into your
		<.vimrc> file:

			let g:netrw_win95ftp= 1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{netrw-fixup}| を見て、次の設定を <.vimrc> に加えてください:
@example
let g:netrw_win95ftp= 1
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-p2*
	P2. I use Windows, and my network browsing with ftp doesn't sort by
	    time or size!  -or-  The remote system is a Windows server; why
	    don't I get sorts by time or size?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p2}
@cindex netrw-p2
@item P2. Windows を使っています。ftp を使ったブラウジングで時間やサイズでソートできません。- あるいは - リモートシステムが Windows サーバーなんですが、時間やサイズでソートできません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Windows' ftp has a minimal support for ls (ie. it doesn't
		accept sorting options).  It doesn't support the -F which
		gives an explanatory character (ABC/ for "ABC is a directory").
		Netrw then uses "dir" to get both its thin and long listings.
		If you think your ftp does support a full-up ls, put the
		following into your <.vimrc>: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Windows の ftp の ls には最低限の機能しかありません (ソートオプションが使えない等)。注釈文字を得るための -F もサポートされていません (例えば ABC がディレクトリなら ABC/ になる機能)。そのため、Netrw は "dir" を使って thin と long スタイルの一覧を取得します。あなたの ftp がこれらの機能をサポートしているなら、<.vimrc> に次の設定を書いてください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
			let g:netrw_ftp_list_cmd    = "ls -lF"
			let g:netrw_ftp_timelist_cmd= "ls -tlF"
			let g:netrw_ftp_sizelist_cmd= "ls -slF"
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
let g:netrw_ftp_list_cmd    = "ls -lF"
let g:netrw_ftp_timelist_cmd= "ls -tlF"
let g:netrw_ftp_sizelist_cmd= "ls -slF"
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Alternatively, if you have cygwin on your Windows box, put
		into your <.vimrc>: >

			let g:netrw_cygwin= 1
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
あるいは、あなたの Windows に cygwin がインストールされているなら、<.vimrc> に次の設定を書いてください:
@example
let g:netrw_cygwin= 1
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		This problem also occurs when the remote system is Windows.
		In this situation, the various g:netrw_ftp_[time|size]list_cmds
		are as shown above, but the remote system will not correctly
		modify its listing behavior.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
この問題はリモートシステムが Windows だった場合にも起こります。その場合、以上のように g:netrw_ftp_[time|size]list_cmd を設定しても、リモートシステムは期待した動作をしないでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
								*netrw-p3*
	P3. I tried rcp://user@host/ (or protocol other than ftp) and netrw
	    used ssh!  That wasn't what I asked for...
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p3}
@cindex netrw-p3
@item P3. rcp://user@@host/ (あるいは他の ftp 以外のプロトコル) を指定したのに netrw は ssh を使おうとする。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Netrw has two methods for browsing remote directories: ssh
		and ftp.  Unless you specify ftp specifically, ssh is used.
		When it comes time to do download a file (not just a directory
		listing), netrw will use the given protocol to do so.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw はリモートディレクトリを表示する方法として ssh と ftp を使います。ftp 以外が指定された場合は ssh が使われます。(ファイル一覧取得ではなく) ファイルをダウンロードするときに、指定されたプロトコルが使われます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-p4*
	P4. I would like long listings to be the default.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p4}
@cindex netrw-p4
@item P4. ファイル一覧の表示スタイルを long をデフォルトにしたい。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Put the following statement into your |.vimrc|: >

			let g:netrw_liststyle= 1
<
		Check out |netrw-browser-var| for more customizations that
		you can set.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{.vimrc}| に次のコマンドを書いてください:
@example
let g:netrw_liststyle= 1
@end example
他にもいろいろカスタマイズできます。|@ref{netrw-browser-var}| を参照してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-p5*
	P5. My times come up oddly in local browsing
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p5}
@cindex netrw-p5
@item P5. ローカルブラウザーでの時間の表示がおかしい
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Does your system's strftime() accept the "%c" to yield dates
		such as "Sun Apr 27 11:49:23 1997"?  If not, do a
		"man strftime" and find out what option should be used.  Then
		put it into your |.vimrc|: >

			let g:netrw_timefmt= "%X"  (where X is the option)
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
あなたのシステムの strftime() は "%c" を指定したときに "Sun Apr 27 11:49:23 1997" のような出力を返しますか？ そうでない場合は、"man strftime" を実行して適切なオプションを確認してください。そして、|@ref{.vimrc}| にその設定を書いてください: 
@example
let g:netrw_timefmt= "%X"  (X は調べたオプション)
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
								*netrw-p6*
	P6. I want my current directory to track my browsing.
	    How do I do that?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p6}
@cindex netrw-p6
@item P6. ブラウザーで移動するごとにカレントディレクトリを設定したい。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	    Put the following line in your |.vimrc|:
>
		let g:netrw_keepdir= 0
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
次の設定を |@ref{.vimrc}| に書いてください:
@example
let g:netrw_keepdir= 0
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
								*netrw-p7*
	P7. I use Chinese (or other non-ascii) characters in my filenames, and
	    netrw (Explore, Sexplore, Hexplore, etc) doesn't display them!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p7}
@cindex netrw-p7
@item P7. ファイル名に中国語 (などの非 ascii) の文字が使われていると、netrw (Explore, Sexplore, Hexplore, etc) でそれが表示されない。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		(taken from an answer provided by Wu Yongwei on the vim
		mailing list)
		I now see the problem. Your code page is not 936, right? Vim
		seems only able to open files with names that are valid in the
		current code page, as are many other applications that do not
		use the Unicode version of Windows APIs. This is an OS-related
		issue. You should not have such problems when the system
		locale uses UTF-8, such as modern Linux distros.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(Vim メーリングリストでの Wu Yongwei 氏による回答)

問題は確認できました。936 以外のコードページを使っていませんか？ Windows の Unicode 版 API に対応していない他のアプリケーション同様、どうやら Vim ではカレントコードページの文字以外は使えないようです。これは OS の問題です。最近の Linux ディストリビューションのような UTF-8 ロケールが使えるシステムではこのような問題は起こらないでしょう。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		(...it is one more reason to recommend that people use utf-8!)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(こういうのが utf-8 が推奨される理由の 1 つです！)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-p8*
	P8. I'm getting "ssh is not executable on your system" -- what do I
	    do?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p8}
@cindex netrw-p8
@item P8. "ssh is not executable on your system" (ssh という実行可能ファイルがない) って表示されるんだけど、どうすればいいの？
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		(Dudley Fox) Most people I know use putty for windows ssh.  It
		is a free ssh/telnet application. You can read more about it
		here:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(Dudley Fox) 私の知る限りほとんどの windows ユーザーは ssh として putty を使っています。putty はフリーの ssh/telnet アプリケーションです。詳しくは url を参照してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		http://www.chiark.greenend.org.uk/~sgtatham/putty/ Also:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@url{http://www.chiark.greenend.org.uk/~sgtatham/putty/ Also:}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		(Marlin Unruh) This program also works for me. It's a single
		executable, so he/she can copy it into the Windows\System32
		folder and create a shortcut to it.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(Marlin Unruh) このプログラムは私のところでも動作しました。実行ファイル 1 つなので、Windows\System32 フォルダにコピーしてショートカットを作っておくといいかも。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		(Dudley Fox) You might also wish to consider plink, as it
		sounds most similar to what you are looking for. plink is an
		application in the putty suite.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(Dudley Fox) plink も試してみるといいでしょう。こっちの方が目的にあっていると思います。plink は putty スイートに含まれています。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
           http://the.earth.li/~sgtatham/putty/0.58/htmldoc/Chapter7.html#plink
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@url{http://the.earth.li/~sgtatham/putty/0.58/htmldoc/Chapter7.html#plink}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		(Vissale Neang) Maybe you can try OpenSSH for windows, which
		can be obtained from:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(Vissale Neang) OpenSSH の windows 版もあります。次の場所から入手可能:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		http://sshwindows.sourceforge.net/
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@url{http://sshwindows.sourceforge.net/}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		It doesn't need the full Cygwin package.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
これは Cygwin をインストールしなくても使えます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		(Antoine Mechelynck) For individual Unix-like programs needed
		for work in a native-Windows environment, I recommend getting
		them from the GnuWin32 project on sourceforge if it has them:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(Antoine Mechelynck) Windows 環境でネイティブに動く Unix プログラムが個別に欲しい場合は sourceforge の GnuWin32 プロジェクトのものがいいと思います:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		    http://gnuwin32.sourceforge.net/
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@url{http://gnuwin32.sourceforge.net/}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Unlike Cygwin, which sets up a Unix-like virtual machine on
		top of Windows, GnuWin32 is a rewrite of Unix utilities with
		Windows system calls, and its programs works quite well in the
		cmd.exe "Dos box".
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Cygwin が Windows の上に Unix 仮想マシンを作っているのと違い、GnuWin32 は Windows のシステムコールで Unix のユーティリティを実装しています。なので、それらのプログラムは cmd.exe と相性がいいです。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		(dave) Download WinSCP and use that to connect to the server.
		In Preferences > Editors, set gvim as your editor:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(dave) WinSCP を使ってサーバーに接続する方法もあります。Preferences > Editors で gvim をエディタとして設定する:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
			- Click "Add..."
			- Set External Editor (adjust path as needed, include
			  the quotes and !.! at the end):
			    "c:\Program Files\Vim\vim70\gvim.exe" !.!
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item "Add..." をクリック
@item 外部エディタを設定 (パスは適当に調節してください。クォートを付けて最後に !.! を付ける):
@example
"c:\Program Files\Vim\vim70\gvim.exe" !.!
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
			- Check that the filetype in the box below is
			  {asterisk}.{asterisk} (all files), or whatever types
			  you want (cec: change {asterisk} to * ; I had to
			  write it that way because otherwise the helptags
			  system thinks it's a tag)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 設定画面の下の方を見てファイルタイプが @{asterisk@}.@{asterisk@} (すべてのファイル)、または自分の設定したい値になっているのを確認する (cec: @{asterisk@} は * に読み替えてください。こういう風に書かないとヘルプのタグとして認識されてしまうので...)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
			- Make sure it's at the top of the listbox (click it,
			  then click "Up" if it's not)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 設定がリストボックスの一番上にくるようにする (なっていない場合は設定をクリックして "Up" をクリックする)
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		If using the Norton Commander style, you just have to hit <F4>
		to edit a file in a local copy of gvim.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Norton Commander スタイルを使っている場合は @key{<F4>} を押すことでファイルをローカルにコピーしたものを gvim で開くことができます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		(Vit Gottwald) How to generate public/private key and save
		public key it on server: >
  http://www.chiark.greenend.org.uk/~sgtatham/putty/0.60/htmldoc/Chapter8.html#pubkey-gettingready
			(8.3 Getting ready for public key authentication)
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(Vit Gottwald) パブリックキーとプライベートキーを生成してパブリックキーをサーバーに保存する方法:

@url{http://www.chiark.greenend.org.uk/~sgtatham/putty/0.60/htmldoc/Chapter8.html#pubkey-gettingready} @*
(8.3 Getting ready for public key authentication)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		How to use a private key with 'pscp': >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
'pscp' でプライベートキーを使う方法:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
  http://www.chiark.greenend.org.uk/~sgtatham/putty/0.60/htmldoc/Chapter5.html
			(5.2.4 Using public key authentication with PSCP)
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@url{http://www.chiark.greenend.org.uk/~sgtatham/putty/0.60/htmldoc/Chapter5.html} @*
(5.2.4 Using public key authentication with PSCP)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		(Ben Schmidt) I find the ssh included with cwRsync is
		brilliant, and install cwRsync or cwRsyncServer on most
		Windows systems I come across these days. I guess COPSSH,
		packed by the same person, is probably even better for use as
		just ssh on Windows, and probably includes sftp, etc. which I
		suspect the cwRsync doesn't, though it might
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(Ben Schmidt) cwRsync に付属している ssh が便利だと思います。私は最近これを見つけてほとんどの Windows システムに cwRsync か cwRsyncServer をインストールしました。ssh だけ使いたい場合は同じ人が配布している COPSSH を使った方がいいかもしれません。こっちには多分 sftp とかも入ってると思います。cwRsync には入ってないのでよくわかりませんが。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		(cec) To make proper use of these suggestions above, you will
		need to modify the following user-settable variables in your
		.vimrc:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(cec) 以上の提案を実行する場合は以下の変数を @file{.vimrc} で設定する必要があるでしょう:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		|g:netrw_ssh_cmd| |g:netrw_list_cmd|  |g:netrw_mkdir_cmd|
		|g:netrw_rm_cmd|  |g:netrw_rmdir_cmd| |g:netrw_rmf_cmd|
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:netrw_ssh_cmd}| |@ref{g:netrw_list_cmd}| |@ref{g:netrw_mkdir_cmd}| |@ref{g:netrw_rm_cmd}| |@ref{g:netrw_rmdir_cmd}| |@ref{g:netrw_rmf_cmd}|
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		The first one (|g:netrw_ssh_cmd|) is the most important; most
		of the others will use the string in g:netrw_ssh_cmd by
		default.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
最初の変数 (|@ref{g:netrw_ssh_cmd}|) が一番重要です。他の変数は g:netrw_ssh_cmd の文字列を使って初期値が設定されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
						*netrw-p9* *netrw-ml_get*
	P9. I'm browsing, changing directory, and bang!  ml_get errors
	    appear and I have to kill vim.  Any way around this?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p9}
@anchor{netrw-ml_get}
@cindex netrw-p9
@cindex netrw-ml_get
@item P9. ブラウザーでディレクトリを変更するとなんか変になる。ml_get エラーが表示されて、vim を kill するしかなくなる。どうすればいいの？
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Normally netrw attempts to avoid writing swapfiles for
		its temporary directory buffers.  However, on some systems
		this attempt appears to be causing ml_get errors to
		appear.  Please try setting |g:netrw_use_noswf| to 0
		in your <.vimrc>: >
			let g:netrw_use_noswf= 0
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw ではディレクトリを表示しているバッファに対してスワップファイルが作成されないようにしていますが、その影響で、システムによっては ml_get エラーが発生することがあります。<.vimrc> で |@ref{g:netrw_use_noswf}| を 0 に設定してみてください:
@example
let g:netrw_use_noswf= 0
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
								*netrw-p10*
	P10. I'm being pestered with "[something] is a directory" and
	     "Press ENTER or type command to continue" prompts...
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p10}
@cindex netrw-p10
@item P10. "[something] is a directory" と表示されて "Press ENTER or type command to continue" というプロンプトが出るのがいやなんだけど...
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		The "[something] is a directory" prompt is issued by Vim,
		not by netrw, and there appears to be no way to work around
		it.  Coupled with the default cmdheight of 1, this message
		causes the "Press ENTER..." prompt.  So:  read |hit-enter|;
		I also suggest that you set your |'cmdheight'| to 2 (or more) in
		your <.vimrc> file.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
"[something] is a directory" プロンプトは (netrw ではなく) Vim によって出力されていて、この表示をなくす方法はありません。cmdheight が 1 (初期設定) の場合にこのメッセージによって "Press ENTER..." プロンプトが表示されます。|@ref{hit-enter}| を読んでください。|@ref{'cmdheight'}| を 2 (かそれ以上) に設定するといいかもしれません。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-p11*
	P11. I want to have two windows; a thin one on the left and my editing
	     window on the right.  How may I accomplish this?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p11}
@cindex netrw-p11
@item P11. ウィンドウを二分割して、左の細いウィンドウをブラウザー表示に、右のウィンドウをファイル編集用にしたいんだけど、どうすればいいの？
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	     You probably want netrw running as in a side window.  If so, you
	     will likely find that ":[N]Lexplore" does what you want.  The
	     optional "[N]" allows you to select the quantity of columns you
	     wish the |:Lexplore|r window to start with (see |g:netrw_winsize|
	     for how this parameter works).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
おそらく netrw を横のウィンドウで表示させたいのではないでしょうか。もしそうなら、":[N]Lexplore" が目的のものかと思います。省略可能な "[N]" で |@ref{:Lexplore}|r ウィンドウの起動時の幅を指定することができます (設定値については |@ref{g:netrw_winsize}| を参照)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	     Previous solution:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@strong{以前の解決法:}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		* Put the following line in your <.vimrc>:
			let g:netrw_altv = 1
		* Edit the current directory:  :e .
		* Select some file, press v
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@itemize
@item <.vimrc> に次の設定を書く:
@example
let g:netrw_altv = 1
@end example
@item カレントディレクトリを ":e ." で開く
@item ファイルを選択して v を押す
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		* Resize the windows as you wish (see |CTRL-W_<| and
		  |CTRL-W_>|).  If you're using gvim, you can drag
		  the separating bar with your mouse.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 適当にウィンドウのサイズを変更する (|@ref{CTRL-W_<}| と |@ref{CTRL-W_>}| 参照)。gvim を使っている場合はウィンドウの区切りをマウスでドラッグすることでもサイズを変更できる。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		* When you want a new file, use  ctrl-w h  to go back to the
		  netrw browser, select a file, then press P  (see |CTRL-W_h|
		  and |netrw-P|).  If you're using gvim, you can press
		  <leftmouse> in the browser window and then press the
		  <middlemouse> to select the file.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@item 他のファイルを開く場合は @kbd{Ctrl-w h} で netrw ブラウザーに戻り、ファイルを選択し、P を押す (|@ref{CTRL-W_h}| と |@ref{netrw-P}| 参照)。gvim を使っている場合はブラウザーウィンドウで <leftmouse> 押してから開きたいファイルを <middlemouse> で選択する。
@end itemize
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
								*netrw-p12*
	P12. My directory isn't sorting correctly, or unwanted letters are
	     appearing in the listed filenames, or things aren't lining
	     up properly in the wide listing, ...
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p12}
@cindex netrw-p12
@item P12. ディレクトリが正しくソートされない、一覧のファイル名になんか変な文字が付く、wide 表示でファイルが正しく整列されない、...。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	     This may be due to an encoding problem.  I myself usually use
	     utf-8, but really only use ascii (ie. bytes from 32-126).
	     Multibyte encodings use two (or more) bytes per character.
	     You may need to change |g:netrw_sepchr| and/or |g:netrw_xstrlen|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
おそらくエンコーディングの問題です。私は普段 utf-8 を使っていますが、しかし ascii文字 (32-126の範囲のバイト) しか使っていません。マルチバイトエンコーディングでは 1 つの文字を 2 バイトかそれ以上のバイトで表現します。|@ref{g:netrw_sepchr}| や |@ref{g:netrw_xstrlen}| の設定を変更してみてください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-p13*
	P13. I'm a Windows + putty + ssh user, and when I attempt to browse,
	     the directories are missing trailing "/"s so netrw treats them
	     as file transfers instead of as attempts to browse
	     subdirectories.  How may I fix this?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p13}
@cindex netrw-p13
@item P13. Windows + putty + ssh を使っています。ブラウズするときにディレクトリの末尾に "/" が付いていないため、netrw はそれをファイルとして転送しようとするので、サブディレクトリをブラウズできません。なんとかなりませんか？
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	     (mikeyao) If you want to use vim via ssh and putty under Windows,
	     try combining the use of pscp/psftp with plink.  pscp/psftp will
	     be used to connect and plink will be used to execute commands on
	     the server, for example: list files and directory using 'ls'.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(mikeyao) Windows 環境で vim を ssh と putty で使いたいなら、plink と pscp/psftp の組み合わせを試してみてください。pscp/psftp は接続に、plink はサーバー上でのコマンドの実行 (例えば 'ls' を使ってファイルとディレクトリの一覧を取得) に使用されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	     These are the settings I use to do this:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
私は次のように設定して使っています:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
>
	    " list files, it's the key setting, if you haven't set,
	    " you will get a blank buffer
	    let g:netrw_list_cmd = "plink HOSTNAME ls -Fa"
	    " if you haven't add putty directory in system path, you should
	    " specify scp/sftp command.  For examples:
	    "let g:netrw_sftp_cmd = "d:\\dev\\putty\\PSFTP.exe"
	    "let g:netrw_scp_cmd = "d:\\dev\\putty\\PSCP.exe"
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
" ファイルの一覧取得用。一番大事な設定。これを設定しないと空のバッ
" ファが表示される
let g:netrw_list_cmd = "plink HOSTNAME ls -Fa"
" putty のディレクトリのシステムパスに追加していない場合は
" scp/sftp コマンドを指定する必要がある。例:
"let g:netrw_sftp_cmd = "d:\\dev\\putty\\PSFTP.exe"
"let g:netrw_scp_cmd = "d:\\dev\\putty\\PSCP.exe"
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
								*netrw-p14*
	P14. I would like to speed up writes using Nwrite and scp/ssh
	     style connections.  How?  (Thomer M. Gil)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p14}
@cindex netrw-p14
@item P14. scp/ssh 接続で Nwrite の速度をスピードアップしたいんだけど？(Thomer M. Gil)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	     Try using ssh's ControlMaster and ControlPath (see the ssh_config
	     man page) to share multiple ssh connections over a single network
	     connection. That cuts out the cryptographic handshake on each
	     file write, sometimes speeding it up by an order of magnitude.
	     (see  http://thomer.com/howtos/netrw_ssh.html)
	     (included by permission)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
ssh の ControlMaster と ControlPath を試してみてください (ssh_config のマンページ参照)。1 つのネットワーク接続を複数の ssh 接続で共有できます。これにより、ファイル書き込みごとの暗号ハンドシェイクを省略でき、時には一桁くらい速くなります。

(@url{http://thomer.com/howtos/netrw_ssh.html} 参照) @*
(取り込み許可取得済み)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	     Add the following to your ~/.ssh/config: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
~/.ssh/config に以下の設定を追加してください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		 # you change "*" to the hostname you care about
		 Host *
		   ControlMaster auto
		   ControlPath /tmp/%r@%h:%p
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
# "*" は目的のホスト名に変更してください
Host *
  ControlMaster auto
  ControlPath /tmp/%r@@%h:%p
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
<	     Then create an ssh connection to the host and leave it running: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
そして、ホストに ssh 接続し、それを実行したままにしておきます:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		 ssh -N host.domain.com
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
ssh -N host.domain.com
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
<	     Now remotely open a file with Vim's Netrw and enjoy the
	     zippiness: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
そして、Vim の Netrw でファイルを開きます。快適な速度をお楽しみください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		vim scp://host.domain.com//home/user/.bashrc
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
vim scp://host.domain.com//home/user/.bashrc
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
								*netrw-p15*
	P15. How may I use a double-click instead of netrw's usual single click
	     to open a file or directory?  (Ben Fritz)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p15}
@cindex netrw-p15
@item P15. ファイルやディレクトリを開くのにシングルクリックじゃなくてダブルクリックを使うようにするにはどうすればいいの？  (Ben Fritz)
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	     First, disable netrw's mapping with >
		    let g:netrw_mousemaps= 0
<	     and then create a netrw buffer only mapping in
	     $HOME/.vim/after/ftplugin/netrw.vim: >
		    nmap <buffer> <2-leftmouse> <CR>
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
まず、netrw のマップを無効化します
@example
let g:netrw_mousemaps= 0
@end example
そして、netrw バッファのみで使うマップを $HOME/.vim/after/ftplugin/netrw.vim で定義します:
@example
nmap <buffer> <2-leftmouse> <CR>
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
<	     Note that setting g:netrw_mousemaps to zero will turn off
	     all netrw's mouse mappings, not just the <leftmouse> one.
	     (see |g:netrw_mousemaps|)
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@quotation
@strong{Note:} @*
g:netrw_mousemaps をゼロに設定すると、<leftmouse> だけでなく、netrw のマウス関連のマップはすべて無効化されます。(|@ref{g:netrw_mousemaps}| 参照)
@end quotation
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-p16*
	P16. When editing remote files (ex. :e ftp://hostname/path/file),
	     under Windows I get an |E303| message complaining that its unable
	     to open a swap file.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p16}
@cindex netrw-p16
@item P16. リモートファイルを開くと (例: :e ftp://hostname/path/file)、Windows では |@ref{E303}| メッセージが出てスワップファイルが開けないと言われる。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	     (romainl) It looks like you are starting Vim from a protected
	     directory.  Start netrw from your $HOME or other writable
	     directory.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(romainl) もしかして保護ディレクトリの上で Vim を起動していませんか。@env{$HOME} やその他の書き込み可能なディレクトリで Vim を起動してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-p17*
	P17. Netrw is closing buffers on its own.
	     What steps will reproduce the problem?
		1. :Explore, navigate directories, open a file
		2. :Explore, open another file
		3. Buffer opened in step 1 will be closed. o
	    What is the expected output? What do you see instead?
		I expect both buffers to exist, but only the last one does.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-p17}
@cindex netrw-p17
@item P17. Netrw が自身のバッファを閉じてしまう。どうやって問題を再現させればいいの？ @* @ @ @ @ @ 1. :Explore する、ディレクトリを歩く、ファイルを開く @* @ @ @ @ @ 2. :Explore する、別のファイルを開く @* @ @ @ @ @ 3. ステップ 1 で開いたバッファが閉じる @* 上記であなたが期待している出力は何でしょうか？また、あなたの環境では何が表示されますか？私は両方のバッファが存在していて欲しいけど、実際は最後のバッファだけが残ります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	   (Lance) Problem is caused by "set autochdir" in .vimrc.
	   (drchip) I am able to duplicate this problem with |'acd'| set.
	            It appears that the buffers are not exactly closed;
		    a ":ls!" will show them (although ":ls" does not).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
(Lance) @file{.vimrc} に書かれた "set autochdir" が原因です。

(drchip) |@ref{'acd'}| オプションをセットすると再現できました。バッファが正しく閉じられていないように見えます。":ls!" するとそれらの閉じられていないバッファが表示されます (":ls" では表示されません)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-P18*
	P18. How to locally edit a file that's only available via
	     another server accessible via ssh?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-P18}
@cindex netrw-P18
@item P18. ssh でのみ到達可能なサーバー上のファイルをローカルで編集するにはどうしたらいいの？
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	     See http://stackoverflow.com/questions/12469645/
	     "Using Vim to Remotely Edit A File on ServerB Only
	      Accessible From ServerA"
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
以下を参照してください。

@url{http://stackoverflow.com/questions/12469645/} @*
"Using Vim to Remotely Edit A File on ServerB Only Accessible From ServerA"
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-P19*
	P19. How do I get numbering on in directory listings?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-P19}
@cindex netrw-P19
@item P19. ディレクトリのファイル一覧表示の際に行番号を表示するにはどうしたらいいの？
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		With |g:netrw_bufsettings|, you can control netrw's buffer
		settings; try putting >
		  let g:netrw_bufsettings="noma nomod nu nobl nowrap ro nornu"
<		in your .vimrc.  If you'd like to have relative numbering
		instead, try >
		  let g:netrw_bufsettings="noma nomod nonu nobl nowrap ro rnu"
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
|@ref{g:netrw_bufsettings}| によって netrw バッファの設定を制御できます。以下を @file{.vimrc} に書いてみてください。
@example
let g:netrw_bufsettings="noma nomod nu nobl nowrap ro nornu"
@end example
もし相対的な行番号を表示したかったら、代わりにこれを試してください。
@example
let g:netrw_bufsettings="noma nomod nonu nobl nowrap ro rnu"
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
								*netrw-P20*
	P20. How may I have gvim start up showing a directory listing?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-P20}
@cindex netrw-P20
@item P20. ディレクトリのファイル一覧を表示して gvim を起動できますか？
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
		Try putting the following code snippet into your .vimrc: >
		    augroup VimStartup
		      au!
		      au VimEnter * if expand("%") == "" && argc() == 0 &&
		      \ (v:servername =~ 'GVIM\d*' || v:servername == "")
		      \ | e . | endif
		    augroup END
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
次のコードを @file{.vimrc} に書いてみてください:
@example
augroup VimStartup
  au!
  au VimEnter * if expand("%") == "" && argc() == 0 &&
  \ (v:servername =~ 'GVIM\d*' || v:servername == "")
  \ | e . | endif
augroup END
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
<		You may use Lexplore instead of "e" if you're so inclined.
		This snippet assumes that you have client-server enabled
		(ie. a "huge" vim version).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
もしよければ "e" の代わりに Lexplore を使うこともできます。このコードは client-server が有効化されているのを仮定しています (例えば "huge" バージョンの vim)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
								*netrw-P21*
	P21. I've made a directory (or file) with an accented character, but
		netrw isn't letting me enter that directory/read that file:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-P21}
@cindex netrw-P21
@item P21. アクセント記号付き文字を含んだディレクトリ (またはファイル) を作成したけど、netrw でそのディレクトリに入ったり、そのファイルを読み込んだりできません:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		Its likely that the shell or o/s is using a different encoding
		than you have vim (netrw) using.  A patch to vim supporting
		"systemencoding" may address this issue in the future; for
		now, just have netrw use the proper encoding.  For example: >

			au FileType netrw set enc=latin1
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
おそらくあなたのシェルか o/s が、あなたの vim が使っているエンコーディングと異なるエンコーディングを使っていることが原因ではないでしょうか。将来 vim に "systemencoding" をサポートさせるパッチがこれを解決してくれると思われます。今は netrw に適切なエンコーディングを使わせるようにしてください。例えば:
@example
au FileType netrw set enc=latin1
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
								*netrw-P22*
	P22. I get an error message when I try to copy or move a file:

		**error** (netrw) tried using g:netrw_localcopycmd<cp>; it doesn't work!

	     What's wrong?
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-P22}
@cindex netrw-P22
@item P22. ファイルをコピーもしくは移動させようとするとエラーが出ます: @* @ @ @ @ @ **error** (netrw) tried using g:netrw_localcopycmd<cp>; it doesn't work! @* 何がおかしいの？
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	     Netrw uses several system level commands to do things (see

		 |g:netrw_localcopycmd|, |g:netrw_localmovecmd|,
		 |g:netrw_localrmdir|, |g:netrw_mkdir_cmd|).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Netrw はコピーや移動を行うためにいくつかのシステム用コマンドを持っています (次を参照 |@ref{g:netrw_localcopycmd}|, |@ref{g:netrw_localmovecmd}|, |@ref{g:netrw_localrmdir}|, |@ref{g:netrw_mkdir_cmd}|)。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	    You may need to adjust the default commands for one or more of
	    these commands by setting them properly in your .vimrc.  Another
	    source of difficulty is that these commands use vim's local
	    directory, which may not be the same as the browsing directory
	    shown by netrw (see |g:netrw_keepdir|).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
もしかしたら @file{.vimrc} でそれらを適切に設定して、デフォルトのコマンドを 1 つかそれ以上調整する必要があるかもしれません。またその他に問題を難しくしている原因としてこれらのコマンドは vim のローカルディレクトリを使用します。それは netrw でブラウズしているディレクトリと同じではないかもしれません (|@ref{g:netrw_keepdir}| 参照)。
@end table
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------


@ifset EN
==============================================================================
11. Debugging Netrw Itself				*netrw-debug* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-debug}
@cindex netrw-debug
@section 11. Netrw をデバッグする
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Step 1: check that the problem you've encountered hasn't already been resolved
by obtaining a copy of the latest (often developmental) netrw at:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec ステップ 1: あなたが直面した問題が以下の netrw の最新版 (開発版) のコピーを取得することで解決するか確認してください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	http://www.drchip.org/astronaut/vim/index.html#NETRW
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@url{http://www.drchip.org/astronaut/vim/index.html#NETRW}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
The <netrw.vim> script is typically installed on systems as something like:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
<netrw.vim> スクリプトはたいていは次のような場所にあります:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
>
	/usr/local/share/vim/vim7x/plugin/netrwPlugin.vim
	/usr/local/share/vim/vim7x/autoload/netrw.vim
		(see output of :echo &rtp)
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
/usr/local/share/vim/vim7x/plugin/netrwPlugin.vim
/usr/local/share/vim/vim7x/autoload/netrw.vim
(@command{:echo &rtp} の出力を参照)
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
which is loaded automatically at startup (assuming :set nocp).  If you
installed a new netrw, then it will be located at >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
これらは起動時に自動的に読み込まれます (@command{:set nocp} を想定)。新しい netrw を次の場所にインストールしてください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	$HOME/.vim/plugin/netrwPlugin.vim
	$HOME/.vim/autoload/netrw.vim
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
$HOME/.vim/plugin/netrwPlugin.vim
$HOME/.vim/autoload/netrw.vim
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Step 2: assuming that you've installed the latest version of netrw,
check that your problem is really due to netrw.  Create a file
called netrw.vimrc with the following contents: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec ステップ 2: netrw の最新版をインストールしたら、その問題が本当に netrw によるものか確認してください。@file{netrw.vimrc} という次の内容のファイルを作成してください。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	set nocp
	so $HOME/.vim/plugin/netrwPlugin.vim
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
set nocp
so $HOME/.vim/plugin/netrwPlugin.vim
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Then run netrw as follows: >

	vim -u netrw.vimrc --noplugins -i NONE [some path here]
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
次に netrw を次のように起動してください:
@verbatim
vim -u netrw.vimrc --noplugins -i NONE [他にパスがあればここに追加]
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
Perform whatever netrw commands you need to, and check that the problem is
still present.  This procedure sidesteps any issues due to personal .vimrc
settings, .viminfo file, and other plugins.  If the problem does not appear,
then you need to determine which setting in your .vimrc is causing the
conflict with netrw or which plugin(s) is/are involved.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
必要な netrw のコマンドを実行し、問題がまだ起きていることを確認してください。この手順は個人の @file{.vimrc} の設定、@file{.viminfo} ファイル、他のプラグインによる問題を回避するためです。もし問題が再現しなくなったら、あなたの @file{.vimrc} のどの設定が netrw かあるいは関与している他のプラグインと衝突しているかを見極める必要があります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
Step 3: If the problem still is present, then get a debugging trace from
netrw:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsec ステップ 3: 問題がまだ起きているようなら、netrw からデバッグトレースを取得してください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	1. Get the <Decho.vim> script, available as:
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsubsec 1. <Decho.vim> スクリプトを入手してください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	     http://www.drchip.org/astronaut/vim/index.html#DECHO
	   or
	     http://vim.sourceforge.net/scripts/script.php?script_id=120
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@url{http://www.drchip.org/astronaut/vim/index.html#DECHO} @*
または @*
@url{http://vim.sourceforge.net/scripts/script.php?script_id=120}
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	  Decho.vim is provided as a "vimball"; see |vimball-intro|.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
Decho.vim は "vimball" の形で提供されています。|@ref{vimball-intro}| 参照。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	2. Edit the <netrw.vim> file by typing: >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsubsec 2. 次のようにして <netrw.vim> ファイルを編集してください:
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		vim netrw.vim
		:DechoOn
		:wq
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
vim netrw.vim
:DechoOn
:wq
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   To restore to normal non-debugging behavior, re-edit <netrw.vim>
	   and type >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
通常のデバッグなし状態に戻すには再び <netrw.vim> を編集します
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		vim netrw.vim
		:DechoOff
		:wq
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
vim netrw.vim
:DechoOff
:wq
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
	   This command, provided by <Decho.vim>, will comment out all
	   Decho-debugging statements (Dfunc(), Dret(), Decho(), Dredir()).
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
このコマンドは <Decho.vim> で定義されており、すべての Decho デバッグステートメント (Dfunc(), Dret(), Decho(), Dredir()) をコメントアウトします。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	3. Then bring up vim and attempt to evoke the problem by doing a
	   transfer or doing some browsing.  A set of messages should appear
	   concerning the steps that <netrw.vim> took in attempting to
	   read/write your file over the network in a separate tab or
	   server vim window.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@unnumberedsubsubsec 3. Vim を起動して、ネットワークファイルを開いたりブラウジングしたりして問題を再現してください。<netrw.vim> がネットワーク上のファイルを読み込んだり書き込んだりする過程が別のタブか、サーバー Vim のウィンドウに出力されます。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	   To save the file, use >
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
出力をファイルに保存するには次のようにします
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
		:tabnext
		:set bt=
		:w! DBG
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@example
:tabnext
:set bt=
:w! DBG
@end example
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
<	   Furthermore, it'd be helpful if you would type >
		:Dsep <command>
<	   where <command> is the command you're about to type next,
	   thereby making it easier to associate which part of the
	   debugging trace is due to which command.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
加えて、次のコマンドも使ってもらえる助かります
@example
:Dsep <command>
@end example
<command> は次にあなたがタイプするコマンドです。これによって、デバッグ出力のどの部分がどのコマンドに対応するかを関連付けるのが簡単になります。
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	   Please send that information to <netrw.vim>'s maintainer along
	   with the o/s you're using and the vim version that you're using
	   (see |:version|) >
		NdrOchip at ScampbellPfamily.AbizM - NOSPAM
<
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
その情報を <netrw.vim> のメンテナーに送ってください。あなたが使用している OS や Vim のバージョン情報も一緒に添えてください。

(|@ref{:version}| 参照) @*
NdrOchip at ScampbellPfamily.AbizM - NOSPAM
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------
@ifset EN
==============================================================================
12. History						*netrw-history* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-history}
@cindex netrw-history
@section 12. 変更履歴
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	v162:	Sep 19, 2016	* (haya14busa) pointed out two syntax errors
				  with a patch; these are now fixed.
		Oct 26, 2016	* I started using mate-terminal and found that
				  x and gx (|netrw-x| and |netrw-gx|) were no
				  longer working.  Fixed (using atril when
				  $DESKTOP_SESSION is "mate").
		Nov 04, 2016	* (Martin Vuille) pointed out that @+ was
				  being restored with keepregstar rather than
				  keepregplus.
		Nov 09, 2016	* Broke apart the command from the options,
				  mostly for Windows.  Introduced new netrw
				  settings: |g:netrw_localcopycmdopt|
				  |g:netrw_localcopydircmdopt| |g:netrw_localmkdiropt|
				  |g:netrw_localmovecmdopt| |g:netrw_localrmdiropt|
		Nov 21, 2016	* (mattn) provided a patch for preview; swapped
				  winwidth() with winheight()
		Nov 22, 2016	* (glacambre) reported that files containing
				  spaces weren't being obtained properly via
				  scp.  Fix: apparently using single quotes
				  such as with 'file name' wasn't enough; the
				  spaces inside the quotes also had to be
				  escaped (ie. 'file\ name').
				* Also fixed obtain (|netrw-O|) to be able to
				  obtain files with spaces in their names
		Dec 20, 2016	* (xc1427) Reported that using "I" (|netrw-I|)
				  when atop "Hiding" in the banner also caused
				  the active-banner hiding control to occur
		Jan 03, 2017	* (Enno Nagel) reported that attempting to
				  apply netrw to a directory that was without
				  read permission caused a syntax error.
		Jan 13, 2017	* (Ingo Karkat) provided a patch which makes
				  using netrw#Call() better.  Now returns
				  value of internal routines return, for example.
		Jan 13, 2017	* (Ingo Karkat) changed netrw#FileUrlRead to
				  use |:edit| instead of |:read|.  I also
				  changed the routine name to netrw#FileUrlEdit.
		Jan 16, 2017	* (Sayem) reported a problem where :Lexplore
				  could generate a new listing buffer and
				  window instead of toggling the netrw display.
				  Unfortunately, the directions for eliciting
				  the problem weren't complete, so I may or
				  may not have fixed that issue.
		Feb 06, 2017	* Implemented cb and cB.  Changed "c" to "cd".
				  (see |netrw-cb|, |netrw-cB|, and |netrw-cd|)
		Mar 21, 2017	* previously, netrw would specify (safe) settings
				  even when the setting was already safe for
				  netrw.  Netrw now attempts to leave such
				  already-netrw-safe settings alone.
				  (affects s:NetrwOptionRestore() and
				  s:NetrwSafeOptions(); also introduced
				  s:NetrwRestoreSetting())
		Jun 26, 2017	* (Christian Brabandt) provided a patch to
				  allow curl to follow redirects (ie. -L
				  option)
		Jun 26, 2017	* (Callum Howard) reported a problem with
				  :Lexpore not removing the Lexplore window
				  after a change-directory
		Aug 30, 2017	* (Ingo Karkat) one cannot switch to the
				  previously edited file (e.g. with CTRL-^)
				  after editing a file:// URL.  Patch to
				  have a "keepalt" included.
		Oct 17, 2017	* (Adam Faryna) reported that gn (|netrw-gn|)
				  did not work on directories in the current
				  tree
	v157:	Apr 20, 2016	* (Nicola) had set up a "nmap <expr> ..." with
				  a function that returned a 0 while silently
				  invoking a shell command.  The shell command
				  activated a ShellCmdPost event which in turn
				  called s:LocalBrowseRefresh().  That looks
				  over all netrw buffers for changes needing
				  refreshes.  However, inside a |:map-<expr>|,
				  tab and window changes are disallowed.  Fixed.
				  (affects netrw's s:LocalBrowseRefresh())
				* |g:netrw_localrmdir| not used any more, but
				  the relevant patch that causes |delete()| to
				  take over was #1107 (not #1109).
				* |expand()| is now used on |g:netrw_home|;
				  consequently, g:netrw_home may now use
				  environment variables
				* s:NetrwLeftmouse and s:NetrwCLeftmouse will
				  return without doing anything if invoked
				  when inside a non-netrw window
		Jun 15, 2016	* gx now calls netrw#GX() which returns
				  the word under the cursor.  The new
				  wrinkle: if one is in a netrw buffer,
				  then netrw's s:NetrwGetWord().
		Jun 22, 2016	* Netrw was executing all its associated
				  Filetype commands silently; I'm going
				  to try doing that "noisily" and see if
				  folks have a problem with that.
		Aug 12, 2016	* Changed order of tool selection for
				  handling http://... viewing.
				  (Nikolay Aleksandrovich Pavlov)
		Aug 21, 2016	* Included hiding/showing/all for tree
				  listings
				* Fixed refresh (^L) for tree listings
	v156:	Feb 18, 2016	* Changed =~ to =~# where appropriate
		Feb 23, 2016	* s:ComposePath(base,subdir) now uses
				  fnameescape() on the base portion
		Mar 01, 2016	* (gt_macki) reported where :Explore would
				  make file unlisted. Fixed (tst943)
		Apr 04, 2016	* (reported by John Little) netrw normally
				  suppresses browser messages, but sometimes
				  those "messages" are what is wanted.
				  See |g:netrw_suppress_gx_mesg|
		Apr 06, 2016	* (reported by Carlos Pita) deleting a remote
				  file was giving an error message.  Fixed.
		Apr 08, 2016	* (Charles Cooper) had a problem with an
				  undefined b:netrw_curdir.  He also provided
				  a fix.
		Apr 20, 2016	* Changed s:NetrwGetBuffer(); now uses
				  dictionaries.  Also fixed the "No Name"
				  buffer problem.
	v155:	Oct 29, 2015	* (Timur Fayzrakhmanov) reported that netrw's
				  mapping of ctrl-l was not allowing refresh of
				  other windows when it was done in a netrw
				  window.
		Nov 05, 2015	* Improved s:TreeSqueezeDir() to use search()
				  instead of a loop
				* NetrwBrowse() will return line to
				  w:netrw_bannercnt if cursor ended up in
				  banner
		Nov 16, 2015	* Added a <Plug>NetrwTreeSqueeze (|netrw-s-cr|)
		Nov 17, 2015	* Commented out imaps -- perhaps someone can
				  tell me how they're useful and should be
				  retained?
		Nov 20, 2015	* Added |netrw-ma| and |netrw-mA| support
		Nov 20, 2015	* gx (|netrw-gx|) on a URL downloaded the
				  file in addition to simply bringing up the
				  URL in a browser.  Fixed.
		Nov 23, 2015	* Added |g:netrw_sizestyle| support
		Nov 27, 2015	* Inserted a lot of <c-u>s into various netrw
				  maps.
		Jan 05, 2016	* |netrw-qL| implemented to mark files based
				  upon |location-list|s; similar to |netrw-qF|.
		Jan 19, 2016	* using - call delete(directoryname,"d") -
				  instead of using g:netrw_localrmdir if
				  v7.4 + patch#1107 is available
		Jan 28, 2016	* changed to using |winsaveview()| and
				  |winrestview()|
		Jan 28, 2016	* s:NetrwTreePath() now does a save and
				  restore of view
		Feb 08, 2016	* Fixed a tree-listing problem with remote
				  directories
	v154:	Feb 26, 2015	* (Yuri Kanivetsky) reported a situation where
				  a file was not treated properly as a file
				  due to g:netrw_keepdir == 1
		Mar 25, 2015	* (requested by Ben Friz) one may now sort by
				  extension
		Mar 28, 2015	* (requested by Matt Brooks) netrw has a lot
				  of buffer-local mappings; however, some
				  plugins (such as vim-surround) set up
				  conflicting mappings that cause vim to wait.
				  The "<nowait>" modifier has been included
				  with most of netrw's mappings to avoid that
				  delay.
		Jun 26, 2015	* |netrw-gn| mapping implemted
				* :Ntree NotADir resulted in having
				  the tree listing expand in the error messages
				  window.  Fixed.
		Jun 29, 2015	* Attempting to delete a file remotely caused
				  an error with "keepsol" mentioned; fixed.
		Jul 08, 2015	* Several changes to keep the |:jumps| table
				  correct when working with
				  |g:netrw_fastbrowse| set to 2
				* wide listing with accented characters fixed
				  (using %-S instead of %-s with a |printf()|
		Jul 13, 2015	* (Daniel Hahler) CheckIfKde() could be true
				  but kfmclient not installed.  Changed order
				  in netrw#BrowseX(): checks if kde and
				  kfmclient, then will use xdg-open on a unix
				  system (if xdg-open is executable)
		Aug 11, 2015	* (McDonnell) tree listing mode wouldn't
				  select a file in a open subdirectory.
				* (McDonnell) when multiple subdirectories
				  were concurrently open in tree listing
				  mode, a ctrl-L wouldn't refresh properly.
				* The netrw:target menu showed duplicate
				  entries
		Oct 13, 2015	* (mattn) provided an exception to handle
				  windows with shellslash set but no shell
		Oct 23, 2015	* if g:netrw_usetab and <c-tab> now used
				  to control whether NetrwShrink is used
				  (see |netrw-c-tab|)
	v153:	May 13, 2014	* added another |g:netrw_ffkeep| usage {{{2
		May 14, 2014	* changed s:PerformListing() so that it
				  always sets ft=netrw for netrw buffers
				  (ie. even when syntax highlighting is
				  off, not available, etc)
		May 16, 2014	* introduced the |netrw-ctrl-r| functionality
		May 17, 2014	* introduced the |netrw-:NetrwMB| functionality
				* mb and mB (|netrw-mb|, |netrw-mB|) will
				  add/remove marked files from bookmark list
		May 20, 2014	* (Enno Nagel) reported that :Lex <dirname>
				  wasn't working.  Fixed.
		May 26, 2014	* restored test to prevent leftmouse window
				  resizing from causing refresh.
				  (see s:NetrwLeftmouse())
				* fixed problem where a refresh caused cursor
				  to go just under the banner instead of
				  staying put
		May 28, 2014	* (László Bimba) provided a patch for opening
				  the |:Lexplore| window 100% high, optionally
				  on the right, and will work with remote
				  files.
		May 29, 2014	* implemented :NetrwC  (see |netrw-:NetrwC|)
		Jun 01, 2014	* Removed some "silent"s from commands used
				  to implemented scp://... and pscp://...
				  directory listing.  Permits request for
				  password to appear.
		Jun 05, 2014	* (Enno Nagel) reported that user maps "/"
				  caused problems with "b" and "w", which
				  are mapped (for wide listings only) to
				  skip over files rather than just words.
		Jun 10, 2014	* |g:netrw_gx| introduced to allow users to
				  override default "<cfile>" with the gx
				  (|netrw-gx|) map
		Jun 11, 2014	* gx (|netrw-gx|), with |'autowrite'| set,
				  will write modified files.  s:NetrwBrowseX()
				  will now save, turn off, and restore the
				  |'autowrite'| setting.
		Jun 13, 2014	* added visual map for gx use
		Jun 15, 2014	* (Enno Nagel) reported that with having hls
				  set and wide listing style in use, that the
				  b and w maps caused unwanted highlighting.
		Jul 05, 2014	* |netrw-mv| and |netrw-mX| commands included
		Jul 09, 2014	* |g:netrw_keepj| included, allowing optional
				  keepj
		Jul 09, 2014	* fixing bugs due to previous update
		Jul 21, 2014	* (Bruno Sutic) provided an updated
				  netrw_gitignore.vim
		Jul 30, 2014	* (Yavuz Yetim) reported that editing two
				  remote files of the same name caused the
				  second instance to have a "temporary"
				  name.  Fixed: now they use the same buffer.
		Sep 18, 2014	* (Yasuhiro Matsumoto) provided a patch which
				  allows scp and windows local paths to work.
		Oct 07, 2014	* gx (see |netrw-gx|) when atop a directory,
				  will now do |gf| instead
		Nov 06, 2014	* For cygwin: cygstart will be available for
				  netrw#BrowseX() to use if its executable.
		Nov 07, 2014	* Began support for file://... urls.  Will use
				  |g:netrw_file_cmd| (typically elinks or links)
		Dec 02, 2014	* began work on having mc (|netrw-mc|) copy
				  directories.  Works for linux machines,
				  cygwin+vim, but not for windows+gvim.
		Dec 02, 2014	* in tree mode, netrw was not opening
				  directories via symbolic links.
		Dec 02, 2014	* added resolved link information to
				  thin and tree modes
		Dec 30, 2014	* (issue#231) |:ls| was not showing
				  remote-file buffers reliably.  Fixed.
	v152:	Apr 08, 2014	* uses the |'noswapfile'| option (requires {{{2
				  vim 7.4 with patch 213)
				* (Enno Nagel) turn |'rnu'| off in netrw
				  buffers.
				* (Quinn Strahl) suggested that netrw
				  allow regular window splitting to occur,
				  thereby allowing |'equalalways'| to take
				  effect.
				* (qingtian zhao) normally, netrw will
				  save and restore the |'fileformat'|;
				  however, sometimes that isn't wanted
		Apr 14, 2014	* whenever netrw marks a buffer as ro,
				  it will also mark it as nomod.
		Apr 16, 2014	* sftp protocol now supported by
				  netrw#Obtain(); this means that one
				  may use "mc" to copy a remote file
				  to a local file using sftp, and that
				  the |netrw-O| command can obtain remote
				  files via sftp.
				* added [count]C support (see |netrw-C|)
		Apr 18, 2014	* when |g:netrw_chgwin| is one more than
				  the last window, then vertically split
				  the last window and use it as the
				  chgwin window.
		May 09, 2014	* SavePosn was "saving filename under cursor"
				  from a non-netrw window when using :Rex.
	v151:	Jan 22, 2014	* extended :Rexplore to return to buffer {{{2
				  prior to Explore or editing a directory
				* (Ken Takata) netrw gave error when
				  clipboard was disabled.  Sol'n: Placed
				  several if has("clipboard") tests in.
				* Fixed ftp://X@Y@Z// problem; X@Y now
				  part of user id, and only Z is part of
				  hostname.
				* (A Loumiotis) reported that completion
				  using a directory name containing spaces
				  did not work.  Fixed with a retry in
				  netrw#Explore() which removes the
				  backslashes vim inserted.
		Feb 26, 2014	* :Rexplore now records the current file
				   using w:netrw_rexfile when returning via
				  |:Rexplore|
		Mar 08, 2014	* (David Kotchan) provided some patches
				  allowing netrw to work properly with
				  windows shares.
				* Multiple one-liner help messages available
				  by pressing <cr> while atop the "Quick
				  Help" line
				* worked on ShellCmdPost, FocusGained event
				  handling.
				* |:Lexplore| path: will be used to update
				  a left-side netrw browsing directory.
		Mar 12, 2014	* |netrw-s-cr|: use <s-cr>  to close
				  tree directory implemented
		Mar 13, 2014	* (Tony Mechylynck) reported that using
				  the browser with ftp on a directory,
				  and selecting a gzipped txt file, that
				  an E19 occurred (which was issued by
				  gzip.vim).  Fixed.
		Mar 14, 2014	* Implemented :MF and :MT (see |netrw-:MF|
				  and |netrw-:MT|, respectively)
		Mar 17, 2014	* |:Ntree| [dir] wasn't working properly; fixed
		Mar 18, 2014	* Changed all uses of set to setl
		Mar 18, 2014	* Commented the netrw_btkeep line in
				  s:NetrwOptionSave(); the effect is that
				  netrw buffers will remain as |'bt'|=nofile.
				  This should prevent swapfiles being created
				  for netrw buffers.
		Mar 20, 2014	* Changed all uses of lcd to use s:NetrwLcd()
				  instead.  Consistent error handling results
				  and it also handles Window's shares
				* Fixed |netrw-d| command when applied with ftp
				* https: support included for netrw#NetRead()
	v150:	Jul 12, 2013	* removed a "keepalt" to allow ":e #" to {{{2
				  return to the netrw directory listing
		Jul 13, 2013	* (Jonas Diemer) suggested changing
				  a <cWORD> to <cfile>.
		Jul 21, 2013	* (Yuri Kanivetsky) reported that netrw's
				  use of mkdir did not produce directories
				  following the user's umask.
		Aug 27, 2013	* introduced |g:netrw_altfile| option
		Sep 05, 2013	* s:Strlen() now uses |strdisplaywidth()|
				  when available, by default
		Sep 12, 2013	* (Selyano Baldo) reported that netrw wasn't
				  opening some directories properly from the
				  command line.
		Nov 09, 2013	* |:Lexplore| introduced
				* (Ondrej Platek) reported an issue with
				  netrw's trees (P15).  Fixed.
				* (Jorge Solis) reported that "t" in
				  tree mode caused netrw to forget its
				  line position.
		Dec 05, 2013	* Added <s-leftmouse> file marking
				  (see |netrw-mf|)
		Dec 05, 2013	* (Yasuhiro Matsumoto) Explore should use
				  strlen() instead s:Strlen() when handling
				  multibyte chars with strpart()
				  (ie. strpart() is byte oriented, not
				  display-width oriented).
		Dec 09, 2013	* (Ken Takata) Provided a patch; File sizes
				  and a portion of timestamps were wrongly
				  highlighted with the directory color when
				  setting `:let g:netrw_liststyle=1` on Windows.
				* (Paul Domaskis) noted that sometimes
				  cursorline was activating in non-netrw
				  windows.  All but one setting of cursorline
				  was done via setl; there was one that was
				  overlooked.  Fixed.
		Dec 24, 2013	* (esquifit) asked that netrw allow the
				  /cygdrive prefix be a user-alterable
				  parameter.
		Jan 02, 2014	* Fixed a problem with netrw-based ballon
				  evaluation (ie. netrw#NetrwBaloonHelp()
				  not having been loaded error messages)
		Jan 03, 2014	* Fixed a problem with tree listings
				* New command installed: |:Ntree|
		Jan 06, 2014	* (Ivan Brennan) reported a problem with
				  |netrw-P|.  Fixed.
		Jan 06, 2014	* Fixed a problem with |netrw-P| when the
				  modified file was to be abandoned.
		Jan 15, 2014	* (Matteo Cavalleri) reported that when the
				  banner is suppressed and tree listing is
				  used, a blank line was left at the top of
				  the display.  Fixed.
		Jan 20, 2014	* (Gideon Go) reported that, in tree listing
				  style, with a previous window open, that
				  the wrong directory was being used to open
				  a file.  Fixed. (P21)
	v149:	Apr 18, 2013	* in wide listing format, now have maps for {{{2
				  w and b to move to next/previous file
		Apr 26, 2013	* one may now copy files in the same
				  directory; netrw will issue requests for
				  what names the files should be copied under
		Apr 29, 2013	* Trying Benzinger's problem again.  Seems
				  that commenting out the BufEnter and
				  installing VimEnter (only) works.  Weird
				  problem!  (tree listing, vim -O Dir1 Dir2)
		May 01, 2013	* :Explore ftp://... wasn't working.  Fixed.
		May 02, 2013	* introduced |g:netrw_bannerbackslash| as
				  requested by Paul Domaskis.
		Jul 03, 2013	* Explore now avoids splitting when a buffer
				  will be hidden.
	v148:	Apr 16, 2013	* changed Netrw's Style menu to allow direct {{{2
				  choice of listing style, hiding style, and
				  sorting style
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
v162:   Sep 19, 2016    * (haya14busa) pointed out two syntax errors
                          with a patch; these are now fixed.
        Oct 26, 2016    * I started using mate-terminal and found that
                          x and gx (|netrw-x| and |netrw-gx|) were no
                          longer working.  Fixed (using atril when
                          $DESKTOP_SESSION is "mate").
        Nov 04, 2016    * (Martin Vuille) pointed out that @+ was
                          being restored with keepregstar rather than
                          keepregplus.
        Nov 09, 2016    * Broke apart the command from the options,
                          mostly for Windows.  Introduced new netrw
                          settings: |g:netrw_localcopycmdopt|
                          |g:netrw_localcopydircmdopt| |g:netrw_localmkdiropt|
                          |g:netrw_localmovecmdopt| |g:netrw_localrmdiropt|
        Nov 21, 2016    * (mattn) provided a patch for preview; swapped
                          winwidth() with winheight()
        Nov 22, 2016    * (glacambre) reported that files containing
                          spaces weren't being obtained properly via
                          scp.  Fix: apparently using single quotes
                          such as with 'file name' wasn't enough; the
                          spaces inside the quotes also had to be
                          escaped (ie. 'file\ name').
                        * Also fixed obtain (|netrw-O|) to be able to
                          obtain files with spaces in their names
        Dec 20, 2016    * (xc1427) Reported that using "I" (|netrw-I|)
                          when atop "Hiding" in the banner also caused
                          the active-banner hiding control to occur
        Jan 03, 2017    * (Enno Nagel) reported that attempting to
                          apply netrw to a directory that was without
                          read permission caused a syntax error.
        Jan 13, 2017    * (Ingo Karkat) provided a patch which makes
                          using netrw#Call() better.  Now returns
                          value of internal routines return, for example.
        Jan 13, 2017    * (Ingo Karkat) changed netrw#FileUrlRead to
                          use |:edit| instead of |:read|.  I also
                          changed the routine name to netrw#FileUrlEdit.
        Jan 16, 2017    * (Sayem) reported a problem where :Lexplore
                          could generate a new listing buffer and
                          window instead of toggling the netrw display.
                          Unfortunately, the directions for eliciting
                          the problem weren't complete, so I may or
                          may not have fixed that issue.
        Feb 06, 2017    * Implemented cb and cB.  Changed "c" to "cd".
                          (see |netrw-cb|, |netrw-cB|, and |netrw-cd|)
        Mar 21, 2017    * previously, netrw would specify (safe) settings
                          even when the setting was already safe for
                          netrw.  Netrw now attempts to leave such
                          already-netrw-safe settings alone.
                          (affects s:NetrwOptionRestore() and
                          s:NetrwSafeOptions(); also introduced
                          s:NetrwRestoreSetting())
        Jun 26, 2017    * (Christian Brabandt) provided a patch to
                          allow curl to follow redirects (ie. -L
                          option)
        Jun 26, 2017    * (Callum Howard) reported a problem with
                          :Lexpore not removing the Lexplore window
                          after a change-directory
        Aug 30, 2017    * (Ingo Karkat) one cannot switch to the
                          previously edited file (e.g. with CTRL-^)
                          after editing a file:// URL.  Patch to
                          have a "keepalt" included.
        Oct 17, 2017    * (Adam Faryna) reported that gn (|netrw-gn|)
                          did not work on directories in the current
                          tree
v157:   Apr 20, 2016    * (Nicola) had set up a "nmap <expr> ..." with
                          a function that returned a 0 while silently
                          invoking a shell command.  The shell command
                          activated a ShellCmdPost event which in turn
                          called s:LocalBrowseRefresh().  That looks
                          over all netrw buffers for changes needing
                          refreshes.  However, inside a |:map-<expr>|,
                          tab and window changes are disallowed.  Fixed.
                          (affects netrw's s:LocalBrowseRefresh())
                        * |g:netrw_localrmdir| not used any more, but
                          the relevant patch that causes |delete()| to
                          take over was #1107 (not #1109).
                        * |expand()| is now used on |g:netrw_home|;
                          consequently, g:netrw_home may now use
                          environment variables
                        * s:NetrwLeftmouse and s:NetrwCLeftmouse will
                          return without doing anything if invoked
                          when inside a non-netrw window
        Jun 15, 2016    * gx now calls netrw#GX() which returns
                          the word under the cursor.  The new
                          wrinkle: if one is in a netrw buffer,
                          then netrw's s:NetrwGetWord().
        Jun 22, 2016    * Netrw was executing all its associated
                          Filetype commands silently; I'm going
                          to try doing that "noisily" and see if
                          folks have a problem with that.
        Aug 12, 2016    * Changed order of tool selection for
                          handling http://... viewing.
                          (Nikolay Aleksandrovich Pavlov)
        Aug 21, 2016    * Included hiding/showing/all for tree
                          listings
                        * Fixed refresh (^L) for tree listings
v156:   Feb 18, 2016    * Changed =~ to =~# where appropriate
        Feb 23, 2016    * s:ComposePath(base,subdir) now uses
                          fnameescape() on the base portion
        Mar 01, 2016    * (gt_macki) reported where :Explore would
                          make file unlisted. Fixed (tst943)
        Apr 04, 2016    * (reported by John Little) netrw normally
                          suppresses browser messages, but sometimes
                          those "messages" are what is wanted.
                          See |g:netrw_suppress_gx_mesg|
        Apr 06, 2016    * (reported by Carlos Pita) deleting a remote
                          file was giving an error message.  Fixed.
        Apr 08, 2016    * (Charles Cooper) had a problem with an
                          undefined b:netrw_curdir.  He also provided
                          a fix.
        Apr 20, 2016    * Changed s:NetrwGetBuffer(); now uses
                          dictionaries.  Also fixed the "No Name"
                          buffer problem.
v155:   Oct 29, 2015    * (Timur Fayzrakhmanov) reported that netrw's
                          mapping of ctrl-l was not allowing refresh of
                          other windows when it was done in a netrw
                          window.
        Nov 05, 2015    * Improved s:TreeSqueezeDir() to use search()
                          instead of a loop
                        * NetrwBrowse() will return line to
                          w:netrw_bannercnt if cursor ended up in
                          banner
        Nov 16, 2015    * Added a <Plug>NetrwTreeSqueeze (|netrw-s-cr|)
        Nov 17, 2015    * Commented out imaps -- perhaps someone can
                          tell me how they're useful and should be
                          retained?
        Nov 20, 2015    * Added |netrw-ma| and |netrw-mA| support
        Nov 20, 2015    * gx (|netrw-gx|) on a URL downloaded the
                          file in addition to simply bringing up the
                          URL in a browser.  Fixed.
        Nov 23, 2015    * Added |g:netrw_sizestyle| support
        Nov 27, 2015    * Inserted a lot of <c-u>s into various netrw
                          maps.
        Jan 05, 2016    * |netrw-qL| implemented to mark files based
                          upon |location-list|s; similar to |netrw-qF|.
        Jan 19, 2016    * using - call delete(directoryname,"d") -
                          instead of using g:netrw_localrmdir if
                          v7.4 + patch#1107 is available
        Jan 28, 2016    * changed to using |winsaveview()| and
                          |winrestview()|
        Jan 28, 2016    * s:NetrwTreePath() now does a save and
                          restore of view
        Feb 08, 2016    * Fixed a tree-listing problem with remote
                          directories
v154:   Feb 26, 2015    * (Yuri Kanivetsky) reported a situation where
                          a file was not treated properly as a file
                          due to g:netrw_keepdir == 1
        Mar 25, 2015    * (requested by Ben Friz) one may now sort by
                          extension
        Mar 28, 2015    * (requested by Matt Brooks) netrw has a lot
                          of buffer-local mappings; however, some
                          plugins (such as vim-surround) set up
                          conflicting mappings that cause vim to wait.
                          The "<nowait>" modifier has been included
                          with most of netrw's mappings to avoid that
                          delay.
        Jun 26, 2015    * |netrw-gn| mapping implemted
                        * :Ntree NotADir resulted in having
                          the tree listing expand in the error messages
                          window.  Fixed.
        Jun 29, 2015    * Attempting to delete a file remotely caused
                          an error with "keepsol" mentioned; fixed.
        Jul 08, 2015    * Several changes to keep the |:jumps| table
                          correct when working with
                          |g:netrw_fastbrowse| set to 2
                        * wide listing with accented characters fixed
                          (using %-S instead of %-s with a |printf()|
        Jul 13, 2015    * (Daniel Hahler) CheckIfKde() could be true
                          but kfmclient not installed.  Changed order
                          in netrw#BrowseX(): checks if kde and
                          kfmclient, then will use xdg-open on a unix
                          system (if xdg-open is executable)
        Aug 11, 2015    * (McDonnell) tree listing mode wouldn't
                          select a file in a open subdirectory.
                        * (McDonnell) when multiple subdirectories
                          were concurrently open in tree listing
                          mode, a ctrl-L wouldn't refresh properly.
                        * The netrw:target menu showed duplicate
                          entries
        Oct 13, 2015    * (mattn) provided an exception to handle
                          windows with shellslash set but no shell
        Oct 23, 2015    * if g:netrw_usetab and <c-tab> now used
                          to control whether NetrwShrink is used
                          (see |netrw-c-tab|)
v153:   May 13, 2014    * added another |g:netrw_ffkeep| usage {{{2
        May 14, 2014    * changed s:PerformListing() so that it
                          always sets ft=netrw for netrw buffers
                          (ie. even when syntax highlighting is
                          off, not available, etc)
        May 16, 2014    * introduced the |netrw-ctrl-r| functionality
        May 17, 2014    * introduced the |netrw-:NetrwMB| functionality
                        * mb and mB (|netrw-mb|, |netrw-mB|) will
                          add/remove marked files from bookmark list
        May 20, 2014    * (Enno Nagel) reported that :Lex <dirname>
                          wasn't working.  Fixed.
        May 26, 2014    * restored test to prevent leftmouse window
                          resizing from causing refresh.
                          (see s:NetrwLeftmouse())
                        * fixed problem where a refresh caused cursor
                          to go just under the banner instead of
                          staying put
        May 28, 2014    * (László Bimba) provided a patch for opening
                          the |:Lexplore| window 100% high, optionally
                          on the right, and will work with remote
                          files.
        May 29, 2014    * implemented :NetrwC  (see |netrw-:NetrwC|)
        Jun 01, 2014    * Removed some "silent"s from commands used
                          to implemented scp://... and pscp://...
                          directory listing.  Permits request for
                          password to appear.
        Jun 05, 2014    * (Enno Nagel) reported that user maps "/"
                          caused problems with "b" and "w", which
                          are mapped (for wide listings only) to
                          skip over files rather than just words.
        Jun 10, 2014    * |g:netrw_gx| introduced to allow users to
                          override default "<cfile>" with the gx
                          (|netrw-gx|) map
        Jun 11, 2014    * gx (|netrw-gx|), with |'autowrite'| set,
                          will write modified files.  s:NetrwBrowseX()
                          will now save, turn off, and restore the
                          |'autowrite'| setting.
        Jun 13, 2014    * added visual map for gx use
        Jun 15, 2014    * (Enno Nagel) reported that with having hls
                          set and wide listing style in use, that the
                          b and w maps caused unwanted highlighting.
        Jul 05, 2014    * |netrw-mv| and |netrw-mX| commands included
        Jul 09, 2014    * |g:netrw_keepj| included, allowing optional
                          keepj
        Jul 09, 2014    * fixing bugs due to previous update
        Jul 21, 2014    * (Bruno Sutic) provided an updated
                          netrw_gitignore.vim
        Jul 30, 2014    * (Yavuz Yetim) reported that editing two
                          remote files of the same name caused the
                          second instance to have a "temporary"
                          name.  Fixed: now they use the same buffer.
        Sep 18, 2014    * (Yasuhiro Matsumoto) provided a patch which
                          allows scp and windows local paths to work.
        Oct 07, 2014    * gx (see |netrw-gx|) when atop a directory,
                          will now do |gf| instead
        Nov 06, 2014    * For cygwin: cygstart will be available for
                          netrw#BrowseX() to use if its executable.
        Nov 07, 2014    * Began support for file://... urls.  Will use
                          |g:netrw_file_cmd| (typically elinks or links)
        Dec 02, 2014    * began work on having mc (|netrw-mc|) copy
                          directories.  Works for linux machines,
                          cygwin+vim, but not for windows+gvim.
        Dec 02, 2014    * in tree mode, netrw was not opening
                          directories via symbolic links.
        Dec 02, 2014    * added resolved link information to
                          thin and tree modes
        Dec 30, 2014    * (issue#231) |:ls| was not showing
                          remote-file buffers reliably.  Fixed.
v152:   Apr 08, 2014    * uses the |'noswapfile'| option (requires {{{2
                          vim 7.4 with patch 213)
                        * (Enno Nagel) turn |'rnu'| off in netrw
                          buffers.
                        * (Quinn Strahl) suggested that netrw
                          allow regular window splitting to occur,
                          thereby allowing |'equalalways'| to take
                          effect.
                        * (qingtian zhao) normally, netrw will
                          save and restore the |'fileformat'|;
                          however, sometimes that isn't wanted
        Apr 14, 2014    * whenever netrw marks a buffer as ro,
                          it will also mark it as nomod.
        Apr 16, 2014    * sftp protocol now supported by
                          netrw#Obtain(); this means that one
                          may use "mc" to copy a remote file
                          to a local file using sftp, and that
                          the |netrw-O| command can obtain remote
                          files via sftp.
                        * added [count]C support (see |netrw-C|)
        Apr 18, 2014    * when |g:netrw_chgwin| is one more than
                          the last window, then vertically split
                          the last window and use it as the
                          chgwin window.
        May 09, 2014    * SavePosn was "saving filename under cursor"
                          from a non-netrw window when using :Rex.
v151:   Jan 22, 2014    * extended :Rexplore to return to buffer {{{2
                          prior to Explore or editing a directory
                        * (Ken Takata) netrw gave error when
                          clipboard was disabled.  Sol'n: Placed
                          several if has("clipboard") tests in.
                        * Fixed ftp://X@Y@Z// problem; X@Y now
                          part of user id, and only Z is part of
                          hostname.
                        * (A Loumiotis) reported that completion
                          using a directory name containing spaces
                          did not work.  Fixed with a retry in
                          netrw#Explore() which removes the
                          backslashes vim inserted.
        Feb 26, 2014    * :Rexplore now records the current file
                           using w:netrw_rexfile when returning via
                          |:Rexplore|
        Mar 08, 2014    * (David Kotchan) provided some patches
                          allowing netrw to work properly with
                          windows shares.
                        * Multiple one-liner help messages available
                          by pressing <cr> while atop the "Quick
                          Help" line
                        * worked on ShellCmdPost, FocusGained event
                          handling.
                        * |:Lexplore| path: will be used to update
                          a left-side netrw browsing directory.
        Mar 12, 2014    * |netrw-s-cr|: use <s-cr>  to close
                          tree directory implemented
        Mar 13, 2014    * (Tony Mechylynck) reported that using
                          the browser with ftp on a directory,
                          and selecting a gzipped txt file, that
                          an E19 occurred (which was issued by
                          gzip.vim).  Fixed.
        Mar 14, 2014    * Implemented :MF and :MT (see |netrw-:MF|
                          and |netrw-:MT|, respectively)
        Mar 17, 2014    * |:Ntree| [dir] wasn't working properly; fixed
        Mar 18, 2014    * Changed all uses of set to setl
        Mar 18, 2014    * Commented the netrw_btkeep line in
                          s:NetrwOptionSave(); the effect is that
                          netrw buffers will remain as |'bt'|=nofile.
                          This should prevent swapfiles being created
                          for netrw buffers.
        Mar 20, 2014    * Changed all uses of lcd to use s:NetrwLcd()
                          instead.  Consistent error handling results
                          and it also handles Window's shares
                        * Fixed |netrw-d| command when applied with ftp
                        * https: support included for netrw#NetRead()
v150:   Jul 12, 2013    * removed a "keepalt" to allow ":e #" to {{{2
                          return to the netrw directory listing
        Jul 13, 2013    * (Jonas Diemer) suggested changing
                          a <cWORD> to <cfile>.
        Jul 21, 2013    * (Yuri Kanivetsky) reported that netrw's
                          use of mkdir did not produce directories
                          following the user's umask.
        Aug 27, 2013    * introduced |g:netrw_altfile| option
        Sep 05, 2013    * s:Strlen() now uses |strdisplaywidth()|
                          when available, by default
        Sep 12, 2013    * (Selyano Baldo) reported that netrw wasn't
                          opening some directories properly from the
                          command line.
        Nov 09, 2013    * |:Lexplore| introduced
                        * (Ondrej Platek) reported an issue with
                          netrw's trees (P15).  Fixed.
                        * (Jorge Solis) reported that "t" in
                          tree mode caused netrw to forget its
                          line position.
        Dec 05, 2013    * Added <s-leftmouse> file marking
                          (see |netrw-mf|)
        Dec 05, 2013    * (Yasuhiro Matsumoto) Explore should use
                          strlen() instead s:Strlen() when handling
                          multibyte chars with strpart()
                          (ie. strpart() is byte oriented, not
                          display-width oriented).
        Dec 09, 2013    * (Ken Takata) Provided a patch; File sizes
                          and a portion of timestamps were wrongly
                          highlighted with the directory color when
                          setting `:let g:netrw_liststyle=1` on Windows.
                        * (Paul Domaskis) noted that sometimes
                          cursorline was activating in non-netrw
                          windows.  All but one setting of cursorline
                          was done via setl; there was one that was
                          overlooked.  Fixed.
        Dec 24, 2013    * (esquifit) asked that netrw allow the
                          /cygdrive prefix be a user-alterable
                          parameter.
        Jan 02, 2014    * Fixed a problem with netrw-based ballon
                          evaluation (ie. netrw#NetrwBaloonHelp()
                          not having been loaded error messages)
        Jan 03, 2014    * Fixed a problem with tree listings
                        * New command installed: |:Ntree|
        Jan 06, 2014    * (Ivan Brennan) reported a problem with
                          |netrw-P|.  Fixed.
        Jan 06, 2014    * Fixed a problem with |netrw-P| when the
                          modified file was to be abandoned.
        Jan 15, 2014    * (Matteo Cavalleri) reported that when the
                          banner is suppressed and tree listing is
                          used, a blank line was left at the top of
                          the display.  Fixed.
        Jan 20, 2014    * (Gideon Go) reported that, in tree listing
                          style, with a previous window open, that
                          the wrong directory was being used to open
                          a file.  Fixed. (P21)
v149:   Apr 18, 2013    * in wide listing format, now have maps for {{{2
                          w and b to move to next/previous file
        Apr 26, 2013    * one may now copy files in the same
                          directory; netrw will issue requests for
                          what names the files should be copied under
        Apr 29, 2013    * Trying Benzinger's problem again.  Seems
                          that commenting out the BufEnter and
                          installing VimEnter (only) works.  Weird
                          problem!  (tree listing, vim -O Dir1 Dir2)
        May 01, 2013    * :Explore ftp://... wasn't working.  Fixed.
        May 02, 2013    * introduced |g:netrw_bannerbackslash| as
                          requested by Paul Domaskis.
        Jul 03, 2013    * Explore now avoids splitting when a buffer
                          will be hidden.
v148:   Apr 16, 2013    * changed Netrw's Style menu to allow direct {{{2
                          choice of listing style, hiding style, and
                          sorting style
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
13. Todo						*netrw-todo* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-todo}
@cindex netrw-todo
@section 13. Todo
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
07/29/09 : banner	:|g:netrw_banner| can be used to suppress the
	   suppression	  banner.  This feature is new and experimental,
			  so its in the process of being debugged.
09/04/09 : "gp"		: See if it can be made to work for remote systems.
			: See if it can be made to work with marked files.
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
07/29/09 : banner       :|g:netrw_banner| can be used to suppress the
           suppression    banner.  This feature is new and experimental,
                          so its in the process of being debugged.
09/04/09 : "gp"         : See if it can be made to work for remote systems.
                        : See if it can be made to work with marked files.
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
14. Credits						*netrw-credits* {{{1
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@anchor{netrw-credits}
@cindex netrw-credits
@section 14. クレジット
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
	Vim editor	by Bram Moolenaar (Thanks, Bram!)
	dav		support by C Campbell
	fetch		support by Bram Moolenaar and C Campbell
	ftp		support by C Campbell <NdrOchip@ScampbellPfamily.AbizM>
	http		support by Bram Moolenaar <bram@moolenaar.net>
	rcp
	rsync		support by C Campbell (suggested by Erik Warendorph)
	scp		support by raf <raf@comdyn.com.au>
	sftp		support by C Campbell

	inputsecret(), BufReadCmd, BufWriteCmd contributed by C Campbell

	Jérôme Augé		-- also using new buffer method with ftp+.netrc
	Bram Moolenaar		-- obviously vim itself, :e and v:cmdarg use,
	                           fetch,...
	Yasuhiro Matsumoto	-- pointing out undo+0r problem and a solution
	Erik Warendorph		-- for several suggestions (g:netrw_..._cmd
				   variables, rsync etc)
	Doug Claar		-- modifications to test for success with ftp
	                           operation
@end ifset
@ifset JA  @c ----------- v -----------  JA  ----------- v -----------
@verbatim
Vim editor      by Bram Moolenaar (Thanks, Bram!)
dav             support by C Campbell
fetch           support by Bram Moolenaar and C Campbell
ftp             support by C Campbell <NdrOchip@ScampbellPfamily.AbizM>
http            support by Bram Moolenaar <bram@moolenaar.net>
rcp
rsync           support by C Campbell (suggested by Erik Warendorph)
scp             support by raf <raf@comdyn.com.au>
sftp            support by C Campbell

inputsecret(), BufReadCmd, BufWriteCmd contributed by C Campbell

Jérôme Augé             -- also using new buffer method with ftp+.netrc
Bram Moolenaar          -- obviously vim itself, :e and v:cmdarg use,
                           fetch,...
Yasuhiro Matsumoto      -- pointing out undo+0r problem and a solution
Erik Warendorph         -- for several suggestions (g:netrw_..._cmd
                           variables, rsync etc)
Doug Claar              -- modifications to test for success with ftp
                           operation
@end verbatim
@end ifset @c ----------- ^ -----------  JA  ----------- ^ -----------

@ifset EN
==============================================================================
Modelines: {{{1
 vim:tw=78:ts=8:noet:ft=help:norl:fdm=marker
@end ifset
